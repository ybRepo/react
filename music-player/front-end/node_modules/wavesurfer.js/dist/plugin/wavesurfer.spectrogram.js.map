{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///webpack/bootstrap 212862eb802a8640f50e?d7b5","webpack:///./src/plugin/spectrogram.js"],"names":["FFT","bufferSize","sampleRate","windowFunc","alpha","bandwidth","sinTable","Float32Array","cosTable","windowValues","reverseTable","Uint32Array","peakBand","peak","i","Math","abs","cos","PI","pow","E","undefined","sin","Error","limit","bit","calculateSpectrum","buffer","real","imag","bSi","sqrt","rval","ival","mag","spectrum","k","floor","log","LN2","length","halfSize","phaseShiftStepReal","phaseShiftStepImag","currentPhaseShiftReal","currentPhaseShiftImag","off","tr","ti","tmpReal","fftStep","N","SpectrogramPlugin","params","name","deferInit","staticProps","instance","ws","wavesurfer","util","frequenciesDataUrl","_onScroll","updateScroll","e","_onReady","drawer","container","document","querySelector","width","pixelRatio","fftSamples","height","noverlap","createWrapper","createCanvas","render","wrapper","addEventListener","on","isReady","unAll","un","removeEventListener","parentNode","removeChild","prevSpectrogram","wsParams","createElement","labels","labelsEl","classList","add","style","left","position","zIndex","appendChild","loadLabels","display","userSelect","webkitUserSelect","fillParent","scrollParent","overflowX","overflowY","preventDefault","relX","offsetX","layerX","fireEvent","scrollWidth","canvas","spectrCc","getContext","updateCanvasStyle","loadFrequenciesData","getFrequencies","drawSpectrogram","round","frequenciesData","my","backend","getDuration","pixels","resample","heightFactor","numberOfChannels","j","colorValue","fillStyle","fillRect","callback","channelOne","getChannelData","bufferLength","frequencies","uniqueSamplesPerPx","max","fft","maxSlicesCount","currentOffset","segment","slice","array","Uint8Array","log10","push","url","ajax","JSON","parse","data","target","statusText","freq","toFixed","bgFill","fontSizeFreq","fontSizeUnit","fontType","textColorFreq","textColorUnit","textAlign","frequenciesHeight","getMaxY","labelIndex","freqStart","step","ac","ctx","fill","textBaseline","index","percent","y","label","freqType","units","unitType","x","yLabelOffset","font","fillText","scrollLeft","oldMatrix","columnsNumber","newMatrix","oldPiece","newPiece","column","Array","oldStart","oldEnd","newStart","newEnd","overlap","min","intColumn","m"],"mappings":"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","file":"wavesurfer.spectrogram.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"spectrogram\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"spectrogram\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"spectrogram\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"localhost:8080/dist/plugin/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 212862eb802a8640f50e","/**\n * Calculate FFT - Based on https://github.com/corbanbrook/dsp.js\n */\n/* eslint-disable complexity, no-redeclare, no-var, one-var */\nconst FFT = function(bufferSize, sampleRate, windowFunc, alpha) {\n    this.bufferSize = bufferSize;\n    this.sampleRate = sampleRate;\n    this.bandwidth = 2 / bufferSize * sampleRate / 2;\n\n    this.sinTable = new Float32Array(bufferSize);\n    this.cosTable = new Float32Array(bufferSize);\n    this.windowValues = new Float32Array(bufferSize);\n    this.reverseTable = new Uint32Array(bufferSize);\n\n    this.peakBand = 0;\n    this.peak = 0;\n\n    switch (windowFunc) {\n        case 'bartlett' :\n            for (var i = 0; i<bufferSize; i++) {\n                this.windowValues[i] = 2 / (bufferSize - 1) * ((bufferSize - 1) / 2 - Math.abs(i - (bufferSize - 1) / 2));\n            }\n            break;\n        case 'bartlettHann' :\n            for (var i = 0; i<bufferSize; i++) {\n                this.windowValues[i] = 0.62 - 0.48 * Math.abs(i / (bufferSize - 1) - 0.5) - 0.38 * Math.cos(Math.PI * 2 * i / (bufferSize - 1));\n            }\n            break;\n        case 'blackman' :\n            alpha = alpha || 0.16;\n            for (var i = 0; i<bufferSize; i++) {\n                this.windowValues[i] = (1 - alpha)/2 - 0.5 * Math.cos(Math.PI * 2 * i / (bufferSize - 1)) + alpha/2 * Math.cos(4 * Math.PI * i / (bufferSize - 1));\n            }\n            break;\n        case 'cosine' :\n            for (var i = 0; i<bufferSize; i++) {\n                this.windowValues[i] = Math.cos(Math.PI * i / (bufferSize - 1) - Math.PI / 2);\n            }\n            break;\n        case 'gauss' :\n            alpha = alpha || 0.25;\n            for (var i = 0; i<bufferSize; i++) {\n                this.windowValues[i] = Math.pow(Math.E, -0.5 * Math.pow((i - (bufferSize - 1) / 2) / (alpha * (bufferSize - 1) / 2), 2));\n            }\n            break;\n        case 'hamming' :\n            for (var i = 0; i<bufferSize; i++) {\n                this.windowValues[i] = 0.54 - 0.46 * Math.cos(Math.PI * 2 * i / (bufferSize - 1));\n            }\n            break;\n        case 'hann' :\n        case undefined :\n            for (var i = 0; i<bufferSize; i++) {\n                this.windowValues[i] = 0.5 * (1 - Math.cos(Math.PI * 2 * i / (bufferSize - 1)));\n            }\n            break;\n        case 'lanczoz' :\n            for (var i = 0; i<bufferSize; i++) {\n                this.windowValues[i] = Math.sin(Math.PI * (2 * i / (bufferSize - 1) - 1)) / (Math.PI * (2 * i / (bufferSize - 1) - 1));\n            }\n            break;\n        case 'rectangular' :\n            for (var i = 0; i<bufferSize; i++) {\n                this.windowValues[i] = 1;\n            }\n            break;\n        case 'triangular' :\n            for (var i = 0; i<bufferSize; i++) {\n                this.windowValues[i] = 2 / bufferSize * (bufferSize / 2 - Math.abs(i - (bufferSize - 1) / 2));\n            }\n            break;\n        default:\n            throw Error('No such window function \\'' + windowFunc + '\\'');\n    }\n\n    var limit = 1;\n    var bit = bufferSize >> 1;\n\n    var i;\n\n    while (limit < bufferSize) {\n        for (i = 0; i < limit; i++) {\n            this.reverseTable[i + limit] = this.reverseTable[i] + bit;\n        }\n\n        limit = limit << 1;\n        bit = bit >> 1;\n    }\n\n    for (i = 0; i < bufferSize; i++) {\n        this.sinTable[i] = Math.sin(-Math.PI/i);\n        this.cosTable[i] = Math.cos(-Math.PI/i);\n    }\n\n\n    this.calculateSpectrum = function(buffer) {\n        // Locally scope variables for speed up\n        var bufferSize = this.bufferSize,\n            cosTable = this.cosTable,\n            sinTable = this.sinTable,\n            reverseTable = this.reverseTable,\n            real = new Float32Array(bufferSize),\n            imag = new Float32Array(bufferSize),\n            bSi = 2 / this.bufferSize,\n            sqrt = Math.sqrt,\n            rval,\n            ival,\n            mag,\n            spectrum = new Float32Array(bufferSize / 2);\n\n        var k = Math.floor(Math.log(bufferSize) / Math.LN2);\n\n        if (Math.pow(2, k) !== bufferSize) {\n            throw 'Invalid buffer size, must be a power of 2.';\n        }\n        if (bufferSize !== buffer.length) {\n            throw 'Supplied buffer is not the same size as defined FFT. FFT Size: ' + bufferSize + ' Buffer Size: ' + buffer.length;\n        }\n\n        var halfSize = 1,\n            phaseShiftStepReal,\n            phaseShiftStepImag,\n            currentPhaseShiftReal,\n            currentPhaseShiftImag,\n            off,\n            tr,\n            ti,\n            tmpReal;\n\n        for (var i = 0; i < bufferSize; i++) {\n            real[i] = buffer[reverseTable[i]] * this.windowValues[reverseTable[i]];\n            imag[i] = 0;\n        }\n\n        while (halfSize < bufferSize) {\n            phaseShiftStepReal = cosTable[halfSize];\n            phaseShiftStepImag = sinTable[halfSize];\n\n            currentPhaseShiftReal = 1;\n            currentPhaseShiftImag = 0;\n\n            for (var fftStep = 0; fftStep < halfSize; fftStep++) {\n                var i = fftStep;\n\n                while (i < bufferSize) {\n                    off = i + halfSize;\n                    tr = (currentPhaseShiftReal * real[off]) - (currentPhaseShiftImag * imag[off]);\n                    ti = (currentPhaseShiftReal * imag[off]) + (currentPhaseShiftImag * real[off]);\n\n                    real[off] = real[i] - tr;\n                    imag[off] = imag[i] - ti;\n                    real[i] += tr;\n                    imag[i] += ti;\n\n                    i += halfSize << 1;\n                }\n\n                tmpReal = currentPhaseShiftReal;\n                currentPhaseShiftReal = (tmpReal * phaseShiftStepReal) - (currentPhaseShiftImag * phaseShiftStepImag);\n                currentPhaseShiftImag = (tmpReal * phaseShiftStepImag) + (currentPhaseShiftImag * phaseShiftStepReal);\n            }\n\n            halfSize = halfSize << 1;\n        }\n\n        for (var i = 0, N = bufferSize / 2; i < N; i++) {\n            rval = real[i];\n            ival = imag[i];\n            mag = bSi * sqrt(rval * rval + ival * ival);\n\n            if (mag > this.peak) {\n                this.peakBand = i;\n                this.peak = mag;\n            }\n            spectrum[i] = mag;\n        }\n        return spectrum;\n    };\n};\n/* eslint-enable complexity, no-redeclare, no-var, one-var */\n\n/**\n * @typedef {Object} SpectrogramPluginParams\n * @property {string|HTMLElement} container Selector of element or element in\n * which to render\n * @property {number} fftSamples=512 number of samples to fetch to FFT. Must be\n * a pwer of 2.\n * @property {number} noverlap Size of the overlapping window. Must be <\n * fftSamples. Auto deduced from canvas size by default.\n * @property {string} windowFunc='hann' The window function to be used. One of\n * these: `'bartlett'`, `'bartlettHann'`, `'blackman'`, `'cosine'`, `'gauss'`,\n * `'hamming'`, `'hann'`, `'lanczoz'`, `'rectangular'`, `'triangular'`\n * @property {?number} alpha Some window functions have this extra value.\n * (Between 0 and 1)\n * @property {number} pixelRatio=wavesurfer.params.pixelRatio to control the\n * size of the spectrogram in relation with its canvas. 1 = Draw on the whole\n * canvas. 2 = Draw on a quarter (1/2 the length and 1/2 the width)\n * @property {?boolean} deferInit Set to true to manually call\n * `initPlugin('spectrogram')`\n */\n\n/**\n * Render a spectrogram visualisation of the audio.\n *\n * @implements {PluginClass}\n * @extends {Observer}\n * @example\n * // es6\n * import SpectrogramPlugin from 'wavesurfer.spectrogram.js';\n *\n * // commonjs\n * var SpectrogramPlugin = require('wavesurfer.spectrogram.js');\n *\n * // if you are using <script> tags\n * var SpectrogramPlugin = window.WaveSurfer.spectrogram;\n *\n * // ... initialising wavesurfer with the plugin\n * var wavesurfer = WaveSurfer.create({\n *   // wavesurfer options ...\n *   plugins: [\n *     SpectrogramPlugin.create({\n *       // plugin options ...\n *     })\n *   ]\n * });\n */\nexport default class SpectrogramPlugin {\n    /**\n     * Spectrogram plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * @param  {SpectrogramPluginParams} params parameters use to initialise the plugin\n     * @return {PluginDefinition} an object representing the plugin\n     */\n    static create(params) {\n        return {\n            name: 'spectrogram',\n            deferInit: params && params.deferInit ? params.deferInit : false,\n            params: params,\n            staticProps: {\n                FFT: FFT\n            },\n            instance: SpectrogramPlugin\n        };\n    }\n\n    constructor(params, ws) {\n        this.params = params;\n        this.wavesurfer = ws;\n        this.util = ws.util;\n\n        this.frequenciesDataUrl = params.frequenciesDataUrl;\n        this._onScroll = e => {\n            this.updateScroll(e);\n        };\n        this._onReady = () => {\n            const drawer = this.drawer = ws.drawer;\n\n            this.container = 'string' == typeof params.container ?\n                document.querySelector(params.container) : params.container;\n\n            if (!this.container) {\n                throw Error('No container for WaveSurfer spectrogram');\n            }\n\n            this.width = drawer.width;\n            this.pixelRatio = this.params.pixelRatio || ws.params.pixelRatio;\n            this.fftSamples = this.params.fftSamples || ws.params.fftSamples || 512;\n            this.height = this.fftSamples / 2;\n            this.noverlap = params.noverlap;\n            this.windowFunc = params.windowFunc;\n            this.alpha = params.alpha;\n\n            this.createWrapper();\n            this.createCanvas();\n            this.render();\n\n            drawer.wrapper.addEventListener('scroll', this._onScroll);\n            ws.on('redraw', () => this.render());\n        };\n    }\n\n    init() {\n        // Check if ws is ready\n        if (this.wavesurfer.isReady) {\n            this._onReady();\n        }\n\n        this.wavesurfer.on('ready', this._onReady);\n    }\n\n    destroy() {\n        this.unAll();\n        this.wavesurfer.un('ready', this._onReady);\n        this.drawer.wrapper.removeEventListener('scroll', this._onScroll);\n        this.wavesurfer = null;\n        this.util = null;\n        this.params = null;\n        if (this.wrapper) {\n            this.wrapper.parentNode.removeChild(this.wrapper);\n            this.wrapper = null;\n        }\n    }\n\n    createWrapper() {\n        const prevSpectrogram = this.container.querySelector('spectrogram');\n        if (prevSpectrogram) {\n            this.container.removeChild(prevSpectrogram);\n        }\n        const wsParams = this.wavesurfer.params;\n        this.wrapper = document.createElement('spectrogram');\n        // if labels are active\n        if (this.params.labels) {\n            const labelsEl = this.labelsEl = document.createElement('canvas');\n            labelsEl.classList.add('spec-labels');\n            this.drawer.style(labelsEl, {\n                left: 0,\n                position: 'absolute',\n                zIndex: 9,\n                height: `${this.height / this.pixelRatio}px`,\n                width: `${55 / this.pixelRatio}px`\n            });\n            this.wrapper.appendChild(labelsEl);\n            // can be customized in next version\n            this.loadLabels('rgba(68,68,68,0.5)', '12px', '10px', '', '#fff', '#f7f7f7', 'center', '#specLabels');\n        }\n\n        this.drawer.style(this.wrapper, {\n            display: 'block',\n            position: 'relative',\n            userSelect: 'none',\n            webkitUserSelect: 'none',\n            height: this.height + 'px'\n        });\n\n        if (wsParams.fillParent || wsParams.scrollParent) {\n            this.drawer.style(this.wrapper, {\n                width: '100%',\n                overflowX: 'hidden',\n                overflowY: 'hidden'\n            });\n        }\n        this.container.appendChild(this.wrapper);\n\n        this.wrapper.addEventListener('click', e => {\n            e.preventDefault();\n            const relX = 'offsetX' in e ? e.offsetX : e.layerX;\n            this.fireEvent('click', (relX / this.scrollWidth) || 0);\n        });\n    }\n\n    createCanvas() {\n        const canvas = this.canvas = this.wrapper.appendChild(\n            document.createElement('canvas')\n        );\n\n        this.spectrCc = canvas.getContext('2d');\n\n        this.util.style(canvas, {\n            position: 'absolute',\n            zIndex: 4\n        });\n    }\n\n    render() {\n        this.updateCanvasStyle();\n\n        if (this.frequenciesDataUrl) {\n            this.loadFrequenciesData(this.frequenciesDataUrl);\n        } else {\n            this.getFrequencies(this.drawSpectrogram);\n        }\n    }\n\n    updateCanvasStyle() {\n        const width = Math.round(this.width / this.pixelRatio) + 'px';\n        this.canvas.width = this.width;\n        this.canvas.height = this.height;\n        this.canvas.style.width = width;\n    }\n\n    drawSpectrogram(frequenciesData, my) {\n        const spectrCc = my.spectrCc;\n        const length = my.wavesurfer.backend.getDuration();\n        const height = my.height;\n        const pixels = my.resample(frequenciesData);\n        const heightFactor = my.buffer ? 2 / my.buffer.numberOfChannels : 1;\n        let i;\n        let j;\n\n        for (i = 0; i < pixels.length; i++) {\n            for (j = 0; j < pixels[i].length; j++) {\n                const colorValue = 255 - pixels[i][j];\n                my.spectrCc.fillStyle = 'rgb(' + colorValue + ', ' + colorValue + ', ' + colorValue + ')';\n                my.spectrCc.fillRect(i, height - j * heightFactor, 1, heightFactor);\n            }\n        }\n    }\n\n    getFrequencies(callback) {\n        const fftSamples = this.fftSamples;\n        const buffer = this.buffer = this.wavesurfer.backend.buffer;\n        const channelOne = buffer.getChannelData(0);\n        const bufferLength = buffer.length;\n        const sampleRate = buffer.sampleRate;\n        const frequencies = [];\n\n        if (!buffer) {\n            this.fireEvent('error', 'Web Audio buffer is not available');\n            return;\n        }\n\n        let noverlap = this.noverlap;\n        if (!noverlap) {\n            const uniqueSamplesPerPx = buffer.length / this.canvas.width;\n            noverlap = Math.max(0, Math.round(fftSamples - uniqueSamplesPerPx));\n        }\n\n        const fft = new FFT(fftSamples, sampleRate, this.windowFunc, this.alpha);\n        const maxSlicesCount = Math.floor(bufferLength / (fftSamples - noverlap));\n        let currentOffset = 0;\n\n        while (currentOffset + fftSamples < channelOne.length) {\n            const segment = channelOne.slice(currentOffset, currentOffset + fftSamples);\n            const spectrum = fft.calculateSpectrum(segment);\n            const array = new Uint8Array(fftSamples / 2);\n            let j;\n            for (j = 0; j < fftSamples / 2; j++) {\n                array[j] = Math.max(-255, Math.log10(spectrum[j]) * 45);\n            }\n            frequencies.push(array);\n            currentOffset += (fftSamples - noverlap);\n        }\n        callback(frequencies, this);\n    }\n\n    loadFrequenciesData(url) {\n        const ajax = this.util.ajax({ url: url });\n\n        ajax.on('success', data => this.drawSpectrogram(JSON.parse(data), this));\n        ajax.on('error', e => this.fireEvent('error', 'XHR error: ' + e.target.statusText));\n\n        return ajax;\n    }\n\n    freqType(freq) {\n        return (freq >= 1000 ? (freq / 1000).toFixed(1) : Math.round(freq));\n    }\n\n    unitType(freq) {\n        return (freq >= 1000 ? 'KHz' : 'Hz');\n    }\n\n    loadLabels(bgFill, fontSizeFreq, fontSizeUnit, fontType, textColorFreq, textColorUnit, textAlign, container) {\n        const frequenciesHeight = this.height;\n        bgFill = bgFill || 'rgba(68,68,68,0)';\n        fontSizeFreq = fontSizeFreq || '12px';\n        fontSizeUnit = fontSizeUnit || '10px';\n        fontType = fontType || 'Helvetica';\n        textColorFreq = textColorFreq || '#fff';\n        textColorUnit = textColorUnit || '#fff';\n        textAlign = textAlign || 'center';\n        container = container || '#specLabels';\n        const getMaxY = frequenciesHeight || 512;\n        const labelIndex = 5 * (getMaxY / 256);\n        const freqStart = 0;\n        const step = ((this.wavesurfer.backend.ac.sampleRate / 2) - freqStart) / labelIndex;\n\n        const ctx = this.labelsEl.getContext('2d');\n        this.labelsEl.height = this.height;\n        this.labelsEl.width = 55;\n\n        ctx.fillStyle = bgFill;\n        ctx.fillRect(0, 0, 55, getMaxY);\n        ctx.fill();\n        let i;\n\n        for (i = 0; i <= labelIndex; i++) {\n            ctx.textAlign = textAlign;\n            ctx.textBaseline = 'middle';\n\n            const freq = freqStart + (step * i);\n            const index = Math.round(freq / (this.sampleRate / 2) * this.fftSamples);\n            const percent = index / this.fftSamples / 2;\n            const y = (1 - percent) * this.height;\n            const label = this.freqType(freq);\n            const units = this.unitType(freq);\n            const x = 16;\n            const yLabelOffset = 2;\n\n            if (i == 0) {\n                ctx.fillStyle = textColorUnit;\n                ctx.font = fontSizeUnit + ' ' + fontType;\n                ctx.fillText(units, x + 24, getMaxY + i - 10);\n                ctx.fillStyle = textColorFreq;\n                ctx.font = fontSizeFreq + ' ' + fontType;\n                ctx.fillText(label, x, getMaxY + i - 10);\n            } else {\n                ctx.fillStyle = textColorUnit;\n                ctx.font = fontSizeUnit + ' ' + fontType;\n                ctx.fillText(units, x + 24, getMaxY - i * 50 + yLabelOffset);\n                ctx.fillStyle = textColorFreq;\n                ctx.font = fontSizeFreq + ' ' + fontType;\n                ctx.fillText(label, x, getMaxY - i * 50 + yLabelOffset);\n            }\n        }\n    }\n\n    updateScroll(e) {\n        this.wrapper.scrollLeft = e.target.scrollLeft;\n    }\n\n    resample(oldMatrix) {\n        const columnsNumber = this.width;\n        const newMatrix = [];\n\n        const oldPiece = 1 / oldMatrix.length;\n        const newPiece = 1 / columnsNumber;\n        let i;\n\n        for (i = 0; i < columnsNumber; i++) {\n            const column = new Array(oldMatrix[0].length);\n            let j;\n\n            for (j = 0; j < oldMatrix.length; j++) {\n                const oldStart = j * oldPiece;\n                const oldEnd = oldStart + oldPiece;\n                const newStart = i * newPiece;\n                const newEnd = newStart + newPiece;\n\n                const overlap = (oldEnd <= newStart || newEnd <= oldStart) ?\n                    0 :\n                    Math.min(Math.max(oldEnd, newStart), Math.max(newEnd, oldStart)) -\n                    Math.max(Math.min(oldEnd, newStart), Math.min(newEnd, oldStart));\n                let k;\n                /* eslint-disable max-depth */\n                if (overlap > 0) {\n                    for (k = 0; k < oldMatrix[0].length; k++) {\n                        if (column[k] == null) {\n                            column[k] = 0;\n                        }\n                        column[k] += (overlap / newPiece) * oldMatrix[j][k];\n                    }\n                }\n                /* eslint-enable max-depth */\n            }\n\n            const intColumn = new Uint8Array(oldMatrix[0].length);\n            let m;\n\n            for (m = 0; m < oldMatrix[0].length; m++) {\n                intColumn[m] = column[m];\n            }\n\n            newMatrix.push(intColumn);\n        }\n\n        return newMatrix;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/plugin/spectrogram.js"],"sourceRoot":""}