{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///wavesurfer.min.js","webpack:///webpack/bootstrap 50fae2f3a5eb20a432c2","webpack:///./src/util/index.js","webpack:///./src/webaudio.js","webpack:///./src/util/observer.js","webpack:///./src/drawer.multicanvas.js","webpack:///./src/mediaelement.js","webpack:///./src/peakcache.js","webpack:///./src/drawer.js","webpack:///./src/util/ajax.js","webpack:///./src/util/extend.js","webpack:///./src/util/get-id.js","webpack:///./src/util/max.js","webpack:///./src/util/min.js","webpack:///./src/util/style.js","webpack:///./src/wavesurfer.js","webpack:///./~/debounce/index.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_interopRequireDefault","obj","default","_ajax","_getId","_max","_min","_observer","_extend","_style","_debounce","_defineProperty","key","writable","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","length","descriptor","protoProps","staticProps","_util","util","newObj","PLAYING","PAUSED","FINISHED","WebAudio","_util$Observer","params","_this$stateBehaviors","_this$states","_this","getPrototypeOf","audioContext","offlineAudioContext","stateBehaviors","init","addOnAudioProcess","getPlayedPercents","duration","getDuration","getCurrentTime","startPosition","getPlayedTime","removeOnAudioProcess","fireEvent","ac","getAudioContext","lastPlay","currentTime","scheduledPause","states","analyser","buffer","filters","gainNode","mergedPeaks","offlineAc","peaks","playbackRate","scriptNode","source","splitPeaks","state","window","AudioContext","webkitAudioContext","WaveSurferAudioContext","sampleRate","WaveSurferOfflineAudioContext","OfflineAudioContext","webkitOfflineAudioContext","createVolumeNode","createScriptNode","createAnalyserNode","setState","setPlaybackRate","audioRate","setLength","forEach","filter","disconnect","connect","_len","arguments","Array","_key","setFilters","disconnectFilters","reduce","prev","curr","createScriptProcessor","scriptBufferSize","createJavaScriptNode","destination","_this2","onaudioprocess","time","pause","createAnalyser","createGain","createGainNode","gain","arraybuffer","callback","errback","getOfflineAudioContext","decodeAudioData","data","channels","numberOfChannels","first","last","sampleSize","sampleStep","chan","getChannelData","start","end","min","max","j","splitChannels","isPaused","unAll","disconnectSource","closeAudioContext","close","createSource","createBufferSource","noteGrainOn","stop","noteOff","adjustedTime","seekTo","resume","play","Observer","handlers","event","fn","push","un","e","splice","handler","args","apply","setTimeout","on","_len2","_key2","_drawer","_drawer2","MultiCanvas","_Drawer","container","maxCanvasWidth","maxCanvasElementWidth","Math","round","pixelRatio","hasProgressCanvas","waveColor","progressColor","halfPixel","canvases","progressWave","createWrapper","createElements","wrapper","appendChild","style","document","createElement","position","zIndex","left","top","bottom","overflow","width","display","boxSizing","borderRightStyle","borderRightWidth","cursorWidth","borderRightColor","cursorColor","addCanvas","totalWidth","requiredCanvases","ceil","removeCanvas","entry","canvasWidth","updateDimensions","height","clearWaveForEntry","leftOffset","wave","waveCtx","getContext","progress","progressCtx","lastEntry","pop","parentElement","removeChild","elementWidth","canvas","offsetLeft","_this3","clearRect","channelIndex","_this4","setHeight","channelPeaks","drawBars","hasMinVals","some","val","peakIndexScale","offsetY","halfH","bar","barWidth","gap","step","absmax","normalize","scale","peak","floor","h","fillRect","_this5","drawWave","reflectedPeaks","len","drawLine","_this6","setFillStyles","drawLineToContext","ctx","fillParent","canvasStart","canvasEnd","beginPath","moveTo","lineTo","closePath","fill","x","y","startCanvas","endCanvas","intersection","x1","y1","x2","y2","fillRectToContext","fillStyle","type","quality","images","map","toDataURL","_get","receiver","Function","desc","getOwnPropertyDescriptor","undefined","parent","_webaudio","_webaudio2","MediaElement","_WebAudio","media","paused","mediaType","toLowerCase","elementPosition","onPlayEnd","createTimer","onAudioProcess","requestAnimationFrame","webkitRequestAnimationFrame","url","preload","controls","mediaControls","autoplay","src","prevMedia","querySelector","_load","elt","load","addEventListener","Infinity","seekable","clearPlayEnd","setPlayEnd","_onPlayEnd","volume","parentNode","PeakCache","clearPeakCache","peakCacheRanges","peakCacheLength","uncachedRanges","item","pos","arr","concat","sort","a","b","uncachedRangePairs","peakCacheRangePairs","Drawer","lastPos","el","styles","userSelect","webkitUserSelect","scrollParent","overflowX","hideScrollbar","overflowY","setupWrapperEvents","noPrevent","preventDefault","clientX","targetTouches","bbox","getBoundingClientRect","nominalWidth","parentWidth","getWidth","scrollLeft","scrollWidth","scrollbarHeight","offsetHeight","clientHeight","clientY","interact","handleEvent","setWidth","percent","recenterOnPosition","immediate","half","clientWidth","maxScroll","offset","updateSize","minPxDelta","autoCenter","newPos","updateProgress","ajax","options","_observer2","xhr","XMLHttpRequest","fired100","open","method","responseType","lengthComputable","loaded","total","status","response","send","extend","dest","sources","keys","getId","random","toString","substring","values","largest","smallest","Number","prop","_mediaelement","_mediaelement2","_peakcache","_peakcache2","WaveSurfer","PluginClass","ws","_ret","defaultParams","backend","dragSelection","forceDecode","loopSelection","mediaContainer","minPxPerSec","partialRender","devicePixelRatio","screen","deviceXDPI","logicalXDPI","plugins","renderer","responsive","skipLength","backends","Error","savedVolume","isMuted","tmpEvents","currentAjax","drawer","peakCache","Backend","initialisedPluginList","isDestroyed","isReady","prevWidth","_onResize","debounce","empty","drawBuffer","registerPlugins","createDrawer","createBackend","createPeakCache","plugin","addPlugin","deferInit","initPlugin","pluginStaticProp","Instance","getOwnPropertyNames","destroyPlugin","destroy","supportsWebAudio","_this7","seconds","skip","seekAndCenter","recenter","_this8","oldScrollParent","newVolume","setVolume","getVolume","rate","getPlaybackRate","setMute","mute","getScrollX","newRanges","addRangeToPeakCache","getPeaks","drawPeaks","pxPerSec","_this9","decodeArrayBuffer","loadDecodedBuffer","blob","_this10","reader","FileReader","onProgress","loadArrayBuffer","result","readAsArrayBuffer","loadBuffer","loadMediaElement","_this11","action","once","getArrayBuffer","setPeaks","urlOrElt","_this12","loadElt","err","_this13","_this14","statusText","percentComplete","accuracy","noWindow","json","JSON","stringify","encodeURIComponent","format","getImage","abort","cancelAjax","clearTmpEvents","destroyAllPlugins","removeEventListener","func","wait","later","Date","now","timestamp","timeout","context","debounced","callNow","clear","clearTimeout"],"mappings":"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","file":"wavesurfer.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"localhost:8080/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 13);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ajax = __webpack_require__(7);\n\nObject.defineProperty(exports, 'ajax', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ajax).default;\n  }\n});\n\nvar _getId = __webpack_require__(9);\n\nObject.defineProperty(exports, 'getId', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_getId).default;\n  }\n});\n\nvar _max = __webpack_require__(10);\n\nObject.defineProperty(exports, 'max', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_max).default;\n  }\n});\n\nvar _min = __webpack_require__(11);\n\nObject.defineProperty(exports, 'min', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_min).default;\n  }\n});\n\nvar _observer = __webpack_require__(2);\n\nObject.defineProperty(exports, 'Observer', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_observer).default;\n  }\n});\n\nvar _extend = __webpack_require__(8);\n\nObject.defineProperty(exports, 'extend', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_extend).default;\n  }\n});\n\nvar _style = __webpack_require__(12);\n\nObject.defineProperty(exports, 'style', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_style).default;\n  }\n});\n\nvar _debounce = __webpack_require__(14);\n\nObject.defineProperty(exports, 'debounce', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_debounce).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __webpack_require__(0);\n\nvar util = _interopRequireWildcard(_util);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// using consts to prevent someone writing the string wrong\nvar PLAYING = 'playing';\nvar PAUSED = 'paused';\nvar FINISHED = 'finished';\n\n/**\n * WebAudio backend\n *\n * @extends {Observer}\n */\n\nvar WebAudio = function (_util$Observer) {\n    _inherits(WebAudio, _util$Observer);\n\n    _createClass(WebAudio, [{\n        key: 'supportsWebAudio',\n\n\n        /**\n         * Does the browser support this backend\n         *\n         * @return {boolean}\n         */\n\n        /** @private */\n\n        /** @private */\n        value: function supportsWebAudio() {\n            return !!(window.AudioContext || window.webkitAudioContext);\n        }\n\n        /**\n         * Get the audio context used by this backend or create one\n         *\n         * @return {AudioContext}\n         */\n\n        /** @private */\n\n        /** @private */\n\n    }, {\n        key: 'getAudioContext',\n        value: function getAudioContext() {\n            if (!window.WaveSurferAudioContext) {\n                window.WaveSurferAudioContext = new (window.AudioContext || window.webkitAudioContext)();\n            }\n            return window.WaveSurferAudioContext;\n        }\n\n        /**\n         * Get the offline audio context used by this backend or create one\n         *\n         * @param {number} sampleRate\n         * @return {OfflineAudioContext}\n         */\n\n    }, {\n        key: 'getOfflineAudioContext',\n        value: function getOfflineAudioContext(sampleRate) {\n            if (!window.WaveSurferOfflineAudioContext) {\n                window.WaveSurferOfflineAudioContext = new (window.OfflineAudioContext || window.webkitOfflineAudioContext)(1, 2, sampleRate);\n            }\n            return window.WaveSurferOfflineAudioContext;\n        }\n\n        /**\n         * Construct the backend\n         *\n         * @param {WavesurferParams} params\n         */\n\n    }]);\n\n    function WebAudio(params) {\n        var _this$stateBehaviors, _this$states;\n\n        _classCallCheck(this, WebAudio);\n\n        /** @private */\n        var _this = _possibleConstructorReturn(this, (WebAudio.__proto__ || Object.getPrototypeOf(WebAudio)).call(this));\n\n        _this.audioContext = null;\n        _this.offlineAudioContext = null;\n        _this.stateBehaviors = (_this$stateBehaviors = {}, _defineProperty(_this$stateBehaviors, PLAYING, {\n            init: function init() {\n                this.addOnAudioProcess();\n            },\n            getPlayedPercents: function getPlayedPercents() {\n                var duration = this.getDuration();\n                return this.getCurrentTime() / duration || 0;\n            },\n            getCurrentTime: function getCurrentTime() {\n                return this.startPosition + this.getPlayedTime();\n            }\n        }), _defineProperty(_this$stateBehaviors, PAUSED, {\n            init: function init() {\n                this.removeOnAudioProcess();\n            },\n            getPlayedPercents: function getPlayedPercents() {\n                var duration = this.getDuration();\n                return this.getCurrentTime() / duration || 0;\n            },\n            getCurrentTime: function getCurrentTime() {\n                return this.startPosition;\n            }\n        }), _defineProperty(_this$stateBehaviors, FINISHED, {\n            init: function init() {\n                this.removeOnAudioProcess();\n                this.fireEvent('finish');\n            },\n            getPlayedPercents: function getPlayedPercents() {\n                return 1;\n            },\n            getCurrentTime: function getCurrentTime() {\n                return this.getDuration();\n            }\n        }), _this$stateBehaviors);\n        _this.params = params;\n        /** @private */\n        _this.ac = params.audioContext || _this.getAudioContext();\n        /**@private */\n        _this.lastPlay = _this.ac.currentTime;\n        /** @private */\n        _this.startPosition = 0;\n        /** @private  */\n        _this.scheduledPause = null;\n        /** @private */\n        _this.states = (_this$states = {}, _defineProperty(_this$states, PLAYING, Object.create(_this.stateBehaviors[PLAYING])), _defineProperty(_this$states, PAUSED, Object.create(_this.stateBehaviors[PAUSED])), _defineProperty(_this$states, FINISHED, Object.create(_this.stateBehaviors[FINISHED])), _this$states);\n        /** @private */\n        _this.analyser = null;\n        /** @private */\n        _this.buffer = null;\n        /** @private */\n        _this.filters = [];\n        /** @private */\n        _this.gainNode = null;\n        /** @private */\n        _this.mergedPeaks = null;\n        /** @private */\n        _this.offlineAc = null;\n        /** @private */\n        _this.peaks = null;\n        /** @private */\n        _this.playbackRate = 1;\n        /** @private */\n        _this.analyser = null;\n        /** @private */\n        _this.scriptNode = null;\n        /** @private */\n        _this.source = null;\n        /** @private */\n        _this.splitPeaks = [];\n        /** @private */\n        _this.state = null;\n        return _this;\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n\n\n    _createClass(WebAudio, [{\n        key: 'init',\n        value: function init() {\n            this.createVolumeNode();\n            this.createScriptNode();\n            this.createAnalyserNode();\n\n            this.setState(PAUSED);\n            this.setPlaybackRate(this.params.audioRate);\n            this.setLength(0);\n        }\n\n        /** @private */\n\n    }, {\n        key: 'disconnectFilters',\n        value: function disconnectFilters() {\n            if (this.filters) {\n                this.filters.forEach(function (filter) {\n                    filter && filter.disconnect();\n                });\n                this.filters = null;\n                // Reconnect direct path\n                this.analyser.connect(this.gainNode);\n            }\n        }\n\n        /** @private */\n\n    }, {\n        key: 'setState',\n        value: function setState(state) {\n            if (this.state !== this.states[state]) {\n                this.state = this.states[state];\n                this.state.init.call(this);\n            }\n        }\n\n        /**\n         * Unpacked `setFilters()`\n         *\n         * @param {...AudioNode} filters\n         */\n\n    }, {\n        key: 'setFilter',\n        value: function setFilter() {\n            for (var _len = arguments.length, filters = Array(_len), _key = 0; _key < _len; _key++) {\n                filters[_key] = arguments[_key];\n            }\n\n            this.setFilters(filters);\n        }\n\n        /**\n         * Insert custom Web Audio nodes into the graph\n         *\n         * @param {AudioNode[]} filters Packed filters array\n         * @example\n         * const lowpass = wavesurfer.backend.ac.createBiquadFilter();\n         * wavesurfer.backend.setFilter(lowpass);\n         */\n\n    }, {\n        key: 'setFilters',\n        value: function setFilters(filters) {\n            // Remove existing filters\n            this.disconnectFilters();\n\n            // Insert filters if filter array not empty\n            if (filters && filters.length) {\n                this.filters = filters;\n\n                // Disconnect direct path before inserting filters\n                this.analyser.disconnect();\n\n                // Connect each filter in turn\n                filters.reduce(function (prev, curr) {\n                    prev.connect(curr);\n                    return curr;\n                }, this.analyser).connect(this.gainNode);\n            }\n        }\n\n        /** @private */\n\n    }, {\n        key: 'createScriptNode',\n        value: function createScriptNode() {\n            if (this.ac.createScriptProcessor) {\n                this.scriptNode = this.ac.createScriptProcessor(this.scriptBufferSize);\n            } else {\n                this.scriptNode = this.ac.createJavaScriptNode(this.scriptBufferSize);\n            }\n\n            this.scriptNode.connect(this.ac.destination);\n        }\n\n        /** @private */\n\n    }, {\n        key: 'addOnAudioProcess',\n        value: function addOnAudioProcess() {\n            var _this2 = this;\n\n            this.scriptNode.onaudioprocess = function () {\n                var time = _this2.getCurrentTime();\n\n                if (time >= _this2.getDuration()) {\n                    _this2.setState(FINISHED);\n                    _this2.fireEvent('pause');\n                } else if (time >= _this2.scheduledPause) {\n                    _this2.pause();\n                } else if (_this2.state === _this2.states[PLAYING]) {\n                    _this2.fireEvent('audioprocess', time);\n                }\n            };\n        }\n\n        /** @private */\n\n    }, {\n        key: 'removeOnAudioProcess',\n        value: function removeOnAudioProcess() {\n            this.scriptNode.onaudioprocess = null;\n        }\n\n        /** @private */\n\n    }, {\n        key: 'createAnalyserNode',\n        value: function createAnalyserNode() {\n            this.analyser = this.ac.createAnalyser();\n            this.analyser.connect(this.gainNode);\n        }\n\n        /**\n         * Create the gain node needed to control the playback volume.\n         *\n         * @private\n         */\n\n    }, {\n        key: 'createVolumeNode',\n        value: function createVolumeNode() {\n            // Create gain node using the AudioContext\n            if (this.ac.createGain) {\n                this.gainNode = this.ac.createGain();\n            } else {\n                this.gainNode = this.ac.createGainNode();\n            }\n            // Add the gain node to the graph\n            this.gainNode.connect(this.ac.destination);\n        }\n\n        /**\n         * Set the audio volume\n         *\n         * @param {number} value A floating point value between 0 and 1.\n         */\n\n    }, {\n        key: 'setVolume',\n        value: function setVolume(value) {\n            this.gainNode.gain.value = value;\n        }\n\n        /**\n         * Get the current volume\n         *\n         * @return {number} value A floating point value between 0 and 1.\n         */\n\n    }, {\n        key: 'getVolume',\n        value: function getVolume() {\n            return this.gainNode.gain.value;\n        }\n\n        /** @private */\n\n    }, {\n        key: 'decodeArrayBuffer',\n        value: function decodeArrayBuffer(arraybuffer, callback, errback) {\n            if (!this.offlineAc) {\n                this.offlineAc = this.getOfflineAudioContext(this.ac ? this.ac.sampleRate : 44100);\n            }\n            this.offlineAc.decodeAudioData(arraybuffer, function (data) {\n                return callback(data);\n            }, errback);\n        }\n\n        /**\n         * Set pre-decoded peaks\n         *\n         * @param {Array} peaks\n         */\n\n    }, {\n        key: 'setPeaks',\n        value: function setPeaks(peaks) {\n            this.peaks = peaks;\n        }\n\n        /**\n         * Set the rendered length (different from the length of the audio).\n         *\n         * @param {number} length\n         */\n\n    }, {\n        key: 'setLength',\n        value: function setLength(length) {\n            // No resize, we can preserve the cached peaks.\n            if (this.mergedPeaks && length == 2 * this.mergedPeaks.length - 1 + 2) {\n                return;\n            }\n\n            this.splitPeaks = [];\n            this.mergedPeaks = [];\n            // Set the last element of the sparse array so the peak arrays are\n            // appropriately sized for other calculations.\n            var channels = this.buffer ? this.buffer.numberOfChannels : 1;\n            var c = void 0;\n            for (c = 0; c < channels; c++) {\n                this.splitPeaks[c] = [];\n                this.splitPeaks[c][2 * (length - 1)] = 0;\n                this.splitPeaks[c][2 * (length - 1) + 1] = 0;\n            }\n            this.mergedPeaks[2 * (length - 1)] = 0;\n            this.mergedPeaks[2 * (length - 1) + 1] = 0;\n        }\n\n        /**\n         * Compute the max and min value of the waveform when broken into <length> subranges.\n         *\n         * @param {number} length How many subranges to break the waveform into.\n         * @param {number} first First sample in the required range.\n         * @param {number} last Last sample in the required range.\n         * @return {number[]|number[][]} Array of 2*<length> peaks or array of arrays of\n         * peaks consisting of (max, min) values for each subrange.\n         */\n\n    }, {\n        key: 'getPeaks',\n        value: function getPeaks(length, first, last) {\n            if (this.peaks) {\n                return this.peaks;\n            }\n\n            this.setLength(length);\n\n            var sampleSize = this.buffer.length / length;\n            var sampleStep = ~~(sampleSize / 10) || 1;\n            var channels = this.buffer.numberOfChannels;\n            var c = void 0;\n\n            for (c = 0; c < channels; c++) {\n                var peaks = this.splitPeaks[c];\n                var chan = this.buffer.getChannelData(c);\n                var i = void 0;\n\n                for (i = first; i <= last; i++) {\n                    var start = ~~(i * sampleSize);\n                    var end = ~~(start + sampleSize);\n                    var min = 0;\n                    var max = 0;\n                    var j = void 0;\n\n                    for (j = start; j < end; j += sampleStep) {\n                        var value = chan[j];\n\n                        if (value > max) {\n                            max = value;\n                        }\n\n                        if (value < min) {\n                            min = value;\n                        }\n                    }\n\n                    peaks[2 * i] = max;\n                    peaks[2 * i + 1] = min;\n\n                    if (c == 0 || max > this.mergedPeaks[2 * i]) {\n                        this.mergedPeaks[2 * i] = max;\n                    }\n\n                    if (c == 0 || min < this.mergedPeaks[2 * i + 1]) {\n                        this.mergedPeaks[2 * i + 1] = min;\n                    }\n                }\n            }\n\n            return this.params.splitChannels ? this.splitPeaks : this.mergedPeaks;\n        }\n\n        /**\n         * Get the position from 0 to 1\n         *\n         * @return {number}\n         */\n\n    }, {\n        key: 'getPlayedPercents',\n        value: function getPlayedPercents() {\n            return this.state.getPlayedPercents.call(this);\n        }\n\n        /** @private */\n\n    }, {\n        key: 'disconnectSource',\n        value: function disconnectSource() {\n            if (this.source) {\n                this.source.disconnect();\n            }\n        }\n\n        /**\n         * This is called when wavesurfer is destroyed\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            if (!this.isPaused()) {\n                this.pause();\n            }\n            this.unAll();\n            this.buffer = null;\n            this.disconnectFilters();\n            this.disconnectSource();\n            this.gainNode.disconnect();\n            this.scriptNode.disconnect();\n            this.analyser.disconnect();\n\n            // close the audioContext if closeAudioContext option is set to true\n            if (this.params.closeAudioContext) {\n                // check if browser supports AudioContext.close()\n                if (typeof this.ac.close === 'function') {\n                    this.ac.close();\n                }\n                // clear the reference to the audiocontext\n                this.ac = null;\n                // clear the actual audiocontext, either passed as param or the\n                // global singleton\n                if (!this.params.audioContext) {\n                    window.WaveSurferAudioContext = null;\n                } else {\n                    this.params.audioContext = null;\n                }\n                // clear the offlineAudioContext\n                window.WaveSurferOfflineAudioContext = null;\n            }\n        }\n\n        /**\n         * Loaded a decoded audio buffer\n         *\n         * @param {Object} buffer\n         */\n\n    }, {\n        key: 'load',\n        value: function load(buffer) {\n            this.startPosition = 0;\n            this.lastPlay = this.ac.currentTime;\n            this.buffer = buffer;\n            this.createSource();\n        }\n\n        /** @private */\n\n    }, {\n        key: 'createSource',\n        value: function createSource() {\n            this.disconnectSource();\n            this.source = this.ac.createBufferSource();\n\n            //adjust for old browsers.\n            this.source.start = this.source.start || this.source.noteGrainOn;\n            this.source.stop = this.source.stop || this.source.noteOff;\n\n            this.source.playbackRate.value = this.playbackRate;\n            this.source.buffer = this.buffer;\n            this.source.connect(this.analyser);\n        }\n\n        /**\n         * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n         *\n         * @return {boolean}\n         */\n\n    }, {\n        key: 'isPaused',\n        value: function isPaused() {\n            return this.state !== this.states[PLAYING];\n        }\n\n        /**\n         * Used by `wavesurfer.getDuration()`\n         *\n         * @return {number}\n         */\n\n    }, {\n        key: 'getDuration',\n        value: function getDuration() {\n            if (!this.buffer) {\n                return 0;\n            }\n            return this.buffer.duration;\n        }\n\n        /**\n         * Used by `wavesurfer.seekTo()`\n         *\n         * @param {number} start Position to start at in seconds\n         * @param {number} end Position to end at in seconds\n         * @return {{start: number, end: number}}\n         */\n\n    }, {\n        key: 'seekTo',\n        value: function seekTo(start, end) {\n            if (!this.buffer) {\n                return;\n            }\n\n            this.scheduledPause = null;\n\n            if (start == null) {\n                start = this.getCurrentTime();\n                if (start >= this.getDuration()) {\n                    start = 0;\n                }\n            }\n            if (end == null) {\n                end = this.getDuration();\n            }\n\n            this.startPosition = start;\n            this.lastPlay = this.ac.currentTime;\n\n            if (this.state === this.states[FINISHED]) {\n                this.setState(PAUSED);\n            }\n\n            return {\n                start: start,\n                end: end\n            };\n        }\n\n        /**\n         * Get the playback position in seconds\n         *\n         * @return {number}\n         */\n\n    }, {\n        key: 'getPlayedTime',\n        value: function getPlayedTime() {\n            return (this.ac.currentTime - this.lastPlay) * this.playbackRate;\n        }\n\n        /**\n         * Plays the loaded audio region.\n         *\n         * @param {number} start Start offset in seconds, relative to the beginning\n         * of a clip.\n         * @param {number} end When to stop relative to the beginning of a clip.\n         */\n\n    }, {\n        key: 'play',\n        value: function play(start, end) {\n            if (!this.buffer) {\n                return;\n            }\n\n            // need to re-create source on each playback\n            this.createSource();\n\n            var adjustedTime = this.seekTo(start, end);\n\n            start = adjustedTime.start;\n            end = adjustedTime.end;\n\n            this.scheduledPause = end;\n\n            this.source.start(0, start, end - start);\n\n            if (this.ac.state == 'suspended') {\n                this.ac.resume && this.ac.resume();\n            }\n\n            this.setState(PLAYING);\n\n            this.fireEvent('play');\n        }\n\n        /**\n         * Pauses the loaded audio.\n         */\n\n    }, {\n        key: 'pause',\n        value: function pause() {\n            this.scheduledPause = null;\n\n            this.startPosition += this.getPlayedTime();\n            this.source && this.source.stop(0);\n\n            this.setState(PAUSED);\n\n            this.fireEvent('pause');\n        }\n\n        /**\n        * Returns the current time in seconds relative to the audioclip's\n        * duration.\n        *\n        * @return {number}\n        */\n\n    }, {\n        key: 'getCurrentTime',\n        value: function getCurrentTime() {\n            return this.state.getCurrentTime.call(this);\n        }\n\n        /**\n        * Returns the current playback rate. (0=no playback, 1=normal playback)\n        *\n        * @return {number}\n        */\n\n    }, {\n        key: 'getPlaybackRate',\n        value: function getPlaybackRate() {\n            return this.playbackRate;\n        }\n\n        /**\n         * Set the audio source playback rate.\n         *\n         * @param {number} value\n         */\n\n    }, {\n        key: 'setPlaybackRate',\n        value: function setPlaybackRate(value) {\n            value = value || 1;\n            if (this.isPaused()) {\n                this.playbackRate = value;\n            } else {\n                this.pause();\n                this.playbackRate = value;\n                this.play();\n            }\n        }\n    }]);\n\n    return WebAudio;\n}(util.Observer);\n\nWebAudio.scriptBufferSize = 256;\nexports.default = WebAudio;\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @typedef {Object} ListenerDescriptor\n * @property {string} name The name of the event\n * @property {function} callback The callback\n * @property {function} un The function to call to remove the listener\n */\n\n/**\n * Observer class\n */\nvar Observer = function () {\n    /**\n     * Instantiate Observer\n     */\n    function Observer() {\n        _classCallCheck(this, Observer);\n\n        /**\n         * @private\n         * @todo Initialise the handlers here already and remove the conditional\n         * assignment in `on()`\n         */\n        this.handlers = null;\n    }\n    /**\n     * Attach a handler function for an event.\n     *\n     * @param {string} event Name of the event to listen to\n     * @param {function} fn The callback to trigger when the event is fired\n     * @return {ListenerDescriptor}\n     */\n\n\n    _createClass(Observer, [{\n        key: \"on\",\n        value: function on(event, fn) {\n            var _this = this;\n\n            if (!this.handlers) {\n                this.handlers = {};\n            }\n\n            var handlers = this.handlers[event];\n            if (!handlers) {\n                handlers = this.handlers[event] = [];\n            }\n            handlers.push(fn);\n\n            // Return an event descriptor\n            return {\n                name: event,\n                callback: fn,\n                un: function un(e, fn) {\n                    return _this.un(e, fn);\n                }\n            };\n        }\n\n        /**\n         * Remove an event handler.\n         *\n         * @param {string} event Name of the event the listener that should be\n         * removed listens to\n         * @param {function} fn The callback that should be removed\n         */\n\n    }, {\n        key: \"un\",\n        value: function un(event, fn) {\n            if (!this.handlers) {\n                return;\n            }\n\n            var handlers = this.handlers[event];\n            var i = void 0;\n            if (handlers) {\n                if (fn) {\n                    for (i = handlers.length - 1; i >= 0; i--) {\n                        if (handlers[i] == fn) {\n                            handlers.splice(i, 1);\n                        }\n                    }\n                } else {\n                    handlers.length = 0;\n                }\n            }\n        }\n\n        /**\n         * Remove all event handlers.\n         */\n\n    }, {\n        key: \"unAll\",\n        value: function unAll() {\n            this.handlers = null;\n        }\n\n        /**\n         * Attach a handler to an event. The handler is executed at most once per\n         * event type.\n         *\n         * @param {string} event The event to listen to\n         * @param {function} handler The callback that is only to be called once\n         * @return {ListenerDescriptor}\n         */\n\n    }, {\n        key: \"once\",\n        value: function once(event, handler) {\n            var _this2 = this;\n\n            var fn = function fn() {\n                for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                    args[_key] = arguments[_key];\n                }\n\n                /*  eslint-disable no-invalid-this */\n                handler.apply(_this2, args);\n                /*  eslint-enable no-invalid-this */\n                setTimeout(function () {\n                    _this2.un(event, fn);\n                }, 0);\n            };\n            return this.on(event, fn);\n        }\n\n        /**\n         * Manually fire an event\n         *\n         * @param {string} event The event to fire manually\n         * @param {...any} args The arguments with which to call the listeners\n         */\n\n    }, {\n        key: \"fireEvent\",\n        value: function fireEvent(event) {\n            for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n                args[_key2 - 1] = arguments[_key2];\n            }\n\n            if (!this.handlers) {\n                return;\n            }\n            var handlers = this.handlers[event];\n            handlers && handlers.forEach(function (fn) {\n                fn.apply(undefined, args);\n            });\n        }\n    }]);\n\n    return Observer;\n}();\n\nexports.default = Observer;\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _drawer = __webpack_require__(6);\n\nvar _drawer2 = _interopRequireDefault(_drawer);\n\nvar _util = __webpack_require__(0);\n\nvar util = _interopRequireWildcard(_util);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @typedef {Object} CanvasEntry\n * @private\n * @property {HTMLElement} wave The wave node\n * @property {CanvasRenderingContext2D} waveCtx The canvas rendering context\n * @property {?HTMLElement} progress The progress wave node\n * @property {?CanvasRenderingContext2D} progressCtx The progress wave canvas\n * rendering context\n * @property {?number} start Start of the area the canvas should render, between 0 and 1\n * @property {?number} end End of the area the canvas should render, between 0 and 1\n */\n\n/**\n * MultiCanvas renderer for wavesurfer. Is currently the default and sole built\n * in renderer.\n */\nvar MultiCanvas = function (_Drawer) {\n    _inherits(MultiCanvas, _Drawer);\n\n    /**\n     * @param {HTMLElement} container The container node of the wavesurfer instance\n     * @param {WavesurferParams} params The wavesurfer initialisation options\n     */\n    function MultiCanvas(container, params) {\n        _classCallCheck(this, MultiCanvas);\n\n        /**\n         * @type {number}\n         * @private\n         */\n        var _this = _possibleConstructorReturn(this, (MultiCanvas.__proto__ || Object.getPrototypeOf(MultiCanvas)).call(this, container, params));\n\n        _this.maxCanvasWidth = params.maxCanvasWidth;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxCanvasElementWidth = Math.round(params.maxCanvasWidth / params.pixelRatio);\n\n        /**\n         * Whether or not the progress wave is renderered. If the `waveColor`\n         * and `progressColor` are the same colour it is not.\n         * @type {boolean}\n         */\n        _this.hasProgressCanvas = params.waveColor != params.progressColor;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.halfPixel = 0.5 / params.pixelRatio;\n        /**\n         * @private\n         * @type {Array}\n         */\n        _this.canvases = [];\n        /** @private */\n        _this.progressWave = null;\n        return _this;\n    }\n\n    /**\n     * Initialise the drawer\n     */\n\n\n    _createClass(MultiCanvas, [{\n        key: 'init',\n        value: function init() {\n            this.createWrapper();\n            this.createElements();\n        }\n\n        /**\n         * Create the canvas elements and style them\n         *\n         * @private\n         */\n\n    }, {\n        key: 'createElements',\n        value: function createElements() {\n            this.progressWave = this.wrapper.appendChild(this.style(document.createElement('wave'), {\n                position: 'absolute',\n                zIndex: 2,\n                left: 0,\n                top: 0,\n                bottom: 0,\n                overflow: 'hidden',\n                width: '0',\n                display: 'none',\n                boxSizing: 'border-box',\n                borderRightStyle: 'solid',\n                borderRightWidth: this.params.cursorWidth + 'px',\n                borderRightColor: this.params.cursorColor\n            }));\n\n            this.addCanvas();\n        }\n\n        /**\n         * Adjust to the updated size by adding or removing canvases\n         */\n\n    }, {\n        key: 'updateSize',\n        value: function updateSize() {\n            var _this2 = this;\n\n            var totalWidth = Math.round(this.width / this.params.pixelRatio);\n            var requiredCanvases = Math.ceil(totalWidth / this.maxCanvasElementWidth);\n\n            while (this.canvases.length < requiredCanvases) {\n                this.addCanvas();\n            }\n\n            while (this.canvases.length > requiredCanvases) {\n                this.removeCanvas();\n            }\n\n            this.canvases.forEach(function (entry, i) {\n                // Add some overlap to prevent vertical white stripes, keep the width even for simplicity.\n                var canvasWidth = _this2.maxCanvasWidth + 2 * Math.ceil(_this2.params.pixelRatio / 2);\n\n                if (i == _this2.canvases.length - 1) {\n                    canvasWidth = _this2.width - _this2.maxCanvasWidth * (_this2.canvases.length - 1);\n                }\n\n                _this2.updateDimensions(entry, canvasWidth, _this2.height);\n                _this2.clearWaveForEntry(entry);\n            });\n        }\n\n        /**\n         * Add a canvas to the canvas list\n         *\n         * @private\n         */\n\n    }, {\n        key: 'addCanvas',\n        value: function addCanvas() {\n            var entry = {};\n            var leftOffset = this.maxCanvasElementWidth * this.canvases.length;\n\n            entry.wave = this.wrapper.appendChild(this.style(document.createElement('canvas'), {\n                position: 'absolute',\n                zIndex: 1,\n                left: leftOffset + 'px',\n                top: 0,\n                bottom: 0\n            }));\n            entry.waveCtx = entry.wave.getContext('2d');\n\n            if (this.hasProgressCanvas) {\n                entry.progress = this.progressWave.appendChild(this.style(document.createElement('canvas'), {\n                    position: 'absolute',\n                    left: leftOffset + 'px',\n                    top: 0,\n                    bottom: 0\n                }));\n                entry.progressCtx = entry.progress.getContext('2d');\n            }\n\n            this.canvases.push(entry);\n        }\n\n        /**\n         * Pop one canvas from the list\n         *\n         * @private\n         */\n\n    }, {\n        key: 'removeCanvas',\n        value: function removeCanvas() {\n            var lastEntry = this.canvases.pop();\n            lastEntry.wave.parentElement.removeChild(lastEntry.wave);\n            if (this.hasProgressCanvas) {\n                lastEntry.progress.parentElement.removeChild(lastEntry.progress);\n            }\n        }\n\n        /**\n         * Update the dimensions of a canvas element\n         *\n         * @private\n         * @param {CanvasEntry} entry\n         * @param {number} width The new width of the element\n         * @param {number} height The new height of the element\n         */\n\n    }, {\n        key: 'updateDimensions',\n        value: function updateDimensions(entry, width, height) {\n            var elementWidth = Math.round(width / this.params.pixelRatio);\n            var totalWidth = Math.round(this.width / this.params.pixelRatio);\n\n            // Where the canvas starts and ends in the waveform, represented as a decimal between 0 and 1.\n            entry.start = entry.waveCtx.canvas.offsetLeft / totalWidth || 0;\n            entry.end = entry.start + elementWidth / totalWidth;\n\n            entry.waveCtx.canvas.width = width;\n            entry.waveCtx.canvas.height = height;\n            this.style(entry.waveCtx.canvas, { width: elementWidth + 'px' });\n\n            this.style(this.progressWave, { display: 'block' });\n\n            if (this.hasProgressCanvas) {\n                entry.progressCtx.canvas.width = width;\n                entry.progressCtx.canvas.height = height;\n                this.style(entry.progressCtx.canvas, { width: elementWidth + 'px' });\n            }\n        }\n\n        /**\n         * Clear the whole waveform\n         */\n\n    }, {\n        key: 'clearWave',\n        value: function clearWave() {\n            var _this3 = this;\n\n            this.canvases.forEach(function (entry) {\n                return _this3.clearWaveForEntry(entry);\n            });\n        }\n\n        /**\n         * Clear one canvas\n         *\n         * @private\n         * @param {CanvasEntry} entry\n         */\n\n    }, {\n        key: 'clearWaveForEntry',\n        value: function clearWaveForEntry(entry) {\n            entry.waveCtx.clearRect(0, 0, entry.waveCtx.canvas.width, entry.waveCtx.canvas.height);\n            if (this.hasProgressCanvas) {\n                entry.progressCtx.clearRect(0, 0, entry.progressCtx.canvas.width, entry.progressCtx.canvas.height);\n            }\n        }\n\n        /**\n         * Draw a waveform with bars\n         *\n         * @param {number[]|number[][]} peaks Can also be an array of arrays for split channel\n         * rendering\n         * @param {number} channelIndex The index of the current channel. Normally\n         * should be 0. Must be an integer.\n         * @param {number} start The x-offset of the beginning of the area that\n         * should be rendered\n         * @param {number} end The x-offset of the end of the area that should be\n         * rendered\n         */\n\n    }, {\n        key: 'drawBars',\n        value: function drawBars(peaks, channelIndex, start, end) {\n            var _this4 = this;\n\n            // Split channels\n            if (peaks[0] instanceof Array) {\n                var channels = peaks;\n                if (this.params.splitChannels) {\n                    this.setHeight(channels.length * this.params.height * this.params.pixelRatio);\n                    channels.forEach(function (channelPeaks, i) {\n                        return _this4.drawBars(channelPeaks, i, start, end);\n                    });\n                    return;\n                }\n                peaks = channels[0];\n            }\n\n            // Bar wave draws the bottom only as a reflection of the top,\n            // so we don't need negative values\n            var hasMinVals = [].some.call(peaks, function (val) {\n                return val < 0;\n            });\n            // Skip every other value if there are negatives.\n            var peakIndexScale = hasMinVals ? 2 : 1;\n\n            // A half-pixel offset makes lines crisp\n            var width = this.width;\n            var height = this.params.height * this.params.pixelRatio;\n            var offsetY = height * channelIndex || 0;\n            var halfH = height / 2;\n            var length = peaks.length / peakIndexScale;\n            var bar = this.params.barWidth * this.params.pixelRatio;\n            var gap = Math.max(this.params.pixelRatio, ~~(bar / 2));\n            var step = bar + gap;\n\n            var absmax = 1;\n            if (this.params.normalize) {\n                var max = util.max(peaks);\n                var min = util.min(peaks);\n                absmax = -min > max ? -min : max;\n            }\n\n            var scale = length / width;\n            var i = void 0;\n\n            for (i = start / scale; i < end / scale; i += step) {\n                var peak = peaks[Math.floor(i * scale * peakIndexScale)] || 0;\n                var h = Math.round(peak / absmax * halfH);\n                this.fillRect(i + this.halfPixel, halfH - h + offsetY, bar + this.halfPixel, h * 2);\n            }\n        }\n\n        /**\n         * Draw a waveform\n         *\n         * @param {number[]|number[][]} peaks Can also be an array of arrays for split channel\n         * rendering\n         * @param {number} channelIndex The index of the current channel. Normally\n         * should be 0\n         * @param {number} start The x-offset of the beginning of the area that\n         * should be rendered\n         * @param {number} end The x-offset of the end of the area that should be\n         * rendered\n         */\n\n    }, {\n        key: 'drawWave',\n        value: function drawWave(peaks, channelIndex, start, end) {\n            var _this5 = this;\n\n            // Split channels\n            if (peaks[0] instanceof Array) {\n                var channels = peaks;\n                if (this.params.splitChannels) {\n                    this.setHeight(channels.length * this.params.height * this.params.pixelRatio);\n                    channels.forEach(function (channelPeaks, i) {\n                        return _this5.drawWave(channelPeaks, i, start, end);\n                    });\n                    return;\n                }\n                peaks = channels[0];\n            }\n\n            // Support arrays without negative peaks\n            var hasMinValues = [].some.call(peaks, function (val) {\n                return val < 0;\n            });\n            if (!hasMinValues) {\n                var reflectedPeaks = [];\n                var len = peaks.length;\n                var i = void 0;\n                for (i = 0; i < len; i++) {\n                    reflectedPeaks[2 * i] = peaks[i];\n                    reflectedPeaks[2 * i + 1] = -peaks[i];\n                }\n                peaks = reflectedPeaks;\n            }\n\n            // A half-pixel offset makes lines crisp\n            var height = this.params.height * this.params.pixelRatio;\n            var offsetY = height * channelIndex || 0;\n            var halfH = height / 2;\n\n            var absmax = 1;\n            if (this.params.normalize) {\n                var max = util.max(peaks);\n                var min = util.min(peaks);\n                absmax = -min > max ? -min : max;\n            }\n\n            this.drawLine(peaks, absmax, halfH, offsetY, start, end);\n\n            // Always draw a median line\n            this.fillRect(0, halfH + offsetY - this.halfPixel, this.width, this.halfPixel);\n        }\n\n        /**\n         * Tell the canvas entries to render their portion of the waveform\n         *\n         * @private\n         * @param {number[]} peaks Peak data\n         * @param {number} absmax Maximum peak value (absolute)\n         * @param {number} halfH Half the height of the waveform\n         * @param {number} offsetY Offset to the top\n         * @param {number} start The x-offset of the beginning of the area that\n         * should be rendered\n         * @param {number} end The x-offset of the end of the area that\n         * should be rendered\n         */\n\n    }, {\n        key: 'drawLine',\n        value: function drawLine(peaks, absmax, halfH, offsetY, start, end) {\n            var _this6 = this;\n\n            this.canvases.forEach(function (entry) {\n                _this6.setFillStyles(entry);\n                _this6.drawLineToContext(entry, entry.waveCtx, peaks, absmax, halfH, offsetY, start, end);\n                _this6.drawLineToContext(entry, entry.progressCtx, peaks, absmax, halfH, offsetY, start, end);\n            });\n        }\n\n        /**\n         * Render the actual waveform line on a canvas\n         *\n         * @private\n         * @param {CanvasEntry} entry\n         * @param {Canvas2DContextAttributes} ctx Essentially `entry.[wave|progress]Ctx`\n         * @param {number[]} peaks\n         * @param {number} absmax Maximum peak value (absolute)\n         * @param {number} halfH Half the height of the waveform\n         * @param {number} offsetY Offset to the top\n         * @param {number} start The x-offset of the beginning of the area that\n         * should be rendered\n         * @param {number} end The x-offset of the end of the area that\n         * should be rendered\n         */\n\n    }, {\n        key: 'drawLineToContext',\n        value: function drawLineToContext(entry, ctx, peaks, absmax, halfH, offsetY, start, end) {\n            if (!ctx) {\n                return;\n            }\n\n            var length = peaks.length / 2;\n\n            var scale = 1;\n            if (this.params.fillParent && this.width != length) {\n                scale = this.width / length;\n            }\n\n            var first = Math.round(length * entry.start);\n            var last = Math.round(length * entry.end);\n            if (first > end || last < start) {\n                return;\n            }\n            var canvasStart = Math.max(first, start);\n            var canvasEnd = Math.min(last, end);\n            var i = void 0;\n            var j = void 0;\n\n            ctx.beginPath();\n            ctx.moveTo((canvasStart - first) * scale + this.halfPixel, halfH + offsetY);\n\n            for (i = canvasStart; i < canvasEnd; i++) {\n                var peak = peaks[2 * i] || 0;\n                var h = Math.round(peak / absmax * halfH);\n                ctx.lineTo((i - first) * scale + this.halfPixel, halfH - h + offsetY);\n            }\n\n            // Draw the bottom edge going backwards, to make a single\n            // closed hull to fill.\n            for (j = canvasEnd - 1; j >= canvasStart; j--) {\n                var _peak = peaks[2 * j + 1] || 0;\n                var _h = Math.round(_peak / absmax * halfH);\n                ctx.lineTo((j - first) * scale + this.halfPixel, halfH - _h + offsetY);\n            }\n\n            ctx.closePath();\n            ctx.fill();\n        }\n\n        /**\n         * Draw a rectangle on the waveform\n         *\n         * @param {number} x\n         * @param {number} y\n         * @param {number} width\n         * @param {number} height\n         */\n\n    }, {\n        key: 'fillRect',\n        value: function fillRect(x, y, width, height) {\n            var startCanvas = Math.floor(x / this.maxCanvasWidth);\n            var endCanvas = Math.min(Math.ceil((x + width) / this.maxCanvasWidth) + 1, this.canvases.length);\n            var i = void 0;\n            for (i = startCanvas; i < endCanvas; i++) {\n                var entry = this.canvases[i];\n                var leftOffset = i * this.maxCanvasWidth;\n\n                var intersection = {\n                    x1: Math.max(x, i * this.maxCanvasWidth),\n                    y1: y,\n                    x2: Math.min(x + width, i * this.maxCanvasWidth + entry.waveCtx.canvas.width),\n                    y2: y + height\n                };\n\n                if (intersection.x1 < intersection.x2) {\n                    this.setFillStyles(entry);\n\n                    this.fillRectToContext(entry.waveCtx, intersection.x1 - leftOffset, intersection.y1, intersection.x2 - intersection.x1, intersection.y2 - intersection.y1);\n\n                    this.fillRectToContext(entry.progressCtx, intersection.x1 - leftOffset, intersection.y1, intersection.x2 - intersection.x1, intersection.y2 - intersection.y1);\n                }\n            }\n        }\n\n        /**\n         * Draw the actual rectangle on a canvas\n         *\n         * @private\n         * @param {Canvas2DContextAttributes} ctx\n         * @param {number} x\n         * @param {number} y\n         * @param {number} width\n         * @param {number} height\n         */\n\n    }, {\n        key: 'fillRectToContext',\n        value: function fillRectToContext(ctx, x, y, width, height) {\n            if (!ctx) {\n                return;\n            }\n            ctx.fillRect(x, y, width, height);\n        }\n\n        /**\n         * Set the fill styles for a certain entry (wave and progress)\n         *\n         * @private\n         * @param {CanvasEntry} entry\n         */\n\n    }, {\n        key: 'setFillStyles',\n        value: function setFillStyles(entry) {\n            entry.waveCtx.fillStyle = this.params.waveColor;\n            if (this.hasProgressCanvas) {\n                entry.progressCtx.fillStyle = this.params.progressColor;\n            }\n        }\n\n        /**\n         * Return image data of the waveform\n         *\n         * @param {string} type='image/png' An optional value of a format type.\n         * @param {number} quality=0.92 An optional value between 0 and 1.\n         * @return {string|string[]} images A data URL or an array of data URLs\n         */\n\n    }, {\n        key: 'getImage',\n        value: function getImage(type, quality) {\n            var images = this.canvases.map(function (entry) {\n                return entry.wave.toDataURL(type, quality);\n            });\n            return images.length > 1 ? images : images[0];\n        }\n\n        /**\n         * Render the new progress\n         *\n         * @param {number} position X-Offset of progress position in pixels\n         */\n\n    }, {\n        key: 'updateProgress',\n        value: function updateProgress(position) {\n            this.style(this.progressWave, { width: position + 'px' });\n        }\n    }]);\n\n    return MultiCanvas;\n}(_drawer2.default);\n\nexports.default = MultiCanvas;\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _webaudio = __webpack_require__(1);\n\nvar _webaudio2 = _interopRequireDefault(_webaudio);\n\nvar _util = __webpack_require__(0);\n\nvar util = _interopRequireWildcard(_util);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * MediaElement backend\n */\nvar MediaElement = function (_WebAudio) {\n    _inherits(MediaElement, _WebAudio);\n\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params\n     */\n    function MediaElement(params) {\n        _classCallCheck(this, MediaElement);\n\n        /** @private */\n        var _this = _possibleConstructorReturn(this, (MediaElement.__proto__ || Object.getPrototypeOf(MediaElement)).call(this, params));\n\n        _this.params = params;\n\n        // Dummy media to catch errors\n        /** @private */\n        _this.media = {\n            currentTime: 0,\n            duration: 0,\n            paused: true,\n            playbackRate: 1,\n            play: function play() {},\n            pause: function pause() {}\n        };\n\n        /** @private */\n        _this.mediaType = params.mediaType.toLowerCase();\n        /** @private */\n        _this.elementPosition = params.elementPosition;\n        /** @private */\n        _this.peaks = null;\n        /** @private */\n        _this.playbackRate = 1;\n        /** @private */\n        _this.buffer = null;\n        /** @private */\n        _this.onPlayEnd = null;\n        return _this;\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n\n\n    _createClass(MediaElement, [{\n        key: 'init',\n        value: function init() {\n            this.setPlaybackRate(this.params.audioRate);\n            this.createTimer();\n        }\n\n        /**\n         * Create a timer to provide a more precise `audioprocess` event.\n         *\n         * @private\n         */\n\n    }, {\n        key: 'createTimer',\n        value: function createTimer() {\n            var _this2 = this;\n\n            var onAudioProcess = function onAudioProcess() {\n                if (_this2.isPaused()) {\n                    return;\n                }\n                _this2.fireEvent('audioprocess', _this2.getCurrentTime());\n\n                // Call again in the next frame\n                var requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame;\n                requestAnimationFrame(onAudioProcess);\n            };\n\n            this.on('play', onAudioProcess);\n        }\n\n        /**\n         *  Create media element with url as its source,\n         *  and append to container element.\n         *\n         *  @param {string} url Path to media file\n         *  @param {HTMLElement} container HTML element\n         *  @param {Array} peaks Array of peak data\n         *  @param {string} preload HTML 5 preload attribute value\n         */\n\n    }, {\n        key: 'load',\n        value: function load(url, container, peaks, preload) {\n            var media = document.createElement(this.mediaType);\n            media.controls = this.params.mediaControls;\n            media.autoplay = this.params.autoplay || false;\n            media.preload = preload == null ? 'auto' : preload;\n            media.src = url;\n            media.style.width = '100%';\n\n            var prevMedia = container.querySelector(this.mediaType);\n            if (prevMedia) {\n                container.removeChild(prevMedia);\n            }\n            container.appendChild(media);\n\n            this._load(media, peaks);\n        }\n\n        /**\n         *  Load existing media element.\n         *\n         *  @param {MediaElement} elt HTML5 Audio or Video element\n         *  @param {Array} peaks Array of peak data\n         */\n\n    }, {\n        key: 'loadElt',\n        value: function loadElt(elt, peaks) {\n            elt.controls = this.params.mediaControls;\n            elt.autoplay = this.params.autoplay || false;\n\n            this._load(elt, peaks);\n        }\n\n        /**\n         *  Private method called by both load (from url)\n         *  and loadElt (existing media element).\n         *\n         *  @param  {MediaElement}  media     HTML5 Audio or Video element\n         *  @param  {Array}         peaks   array of peak data\n         *  @private\n         */\n\n    }, {\n        key: '_load',\n        value: function _load(media, peaks) {\n            var _this3 = this;\n\n            // load must be called manually on iOS, otherwise peaks won't draw\n            // until a user interaction triggers load --> 'ready' event\n            if (typeof media.load == 'function') {\n                media.load();\n            }\n\n            media.addEventListener('error', function () {\n                _this3.fireEvent('error', 'Error loading media element');\n            });\n\n            media.addEventListener('canplay', function () {\n                _this3.fireEvent('canplay');\n            });\n\n            media.addEventListener('ended', function () {\n                _this3.fireEvent('finish');\n            });\n\n            this.media = media;\n            this.peaks = peaks;\n            this.onPlayEnd = null;\n            this.buffer = null;\n            this.setPlaybackRate(this.playbackRate);\n        }\n\n        /**\n         * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n         *\n         * @return {boolean}\n         */\n\n    }, {\n        key: 'isPaused',\n        value: function isPaused() {\n            return !this.media || this.media.paused;\n        }\n\n        /**\n         * Used by `wavesurfer.getDuration()`\n         *\n         * @return {number}\n         */\n\n    }, {\n        key: 'getDuration',\n        value: function getDuration() {\n            var duration = (this.buffer || this.media).duration;\n            if (duration >= Infinity) {\n                // streaming audio\n                duration = this.media.seekable.end(0);\n            }\n            return duration;\n        }\n\n        /**\n        * Returns the current time in seconds relative to the audioclip's\n        * duration.\n        *\n        * @return {number}\n        */\n\n    }, {\n        key: 'getCurrentTime',\n        value: function getCurrentTime() {\n            return this.media && this.media.currentTime;\n        }\n\n        /**\n         * Get the position from 0 to 1\n         *\n         * @return {number}\n         */\n\n    }, {\n        key: 'getPlayedPercents',\n        value: function getPlayedPercents() {\n            return this.getCurrentTime() / this.getDuration() || 0;\n        }\n\n        /**\n         * Set the audio source playback rate.\n         *\n         * @param {number} value\n         */\n\n    }, {\n        key: 'setPlaybackRate',\n        value: function setPlaybackRate(value) {\n            this.playbackRate = value || 1;\n            this.media.playbackRate = this.playbackRate;\n        }\n\n        /**\n         * Used by `wavesurfer.seekTo()`\n         *\n         * @param {number} start Position to start at in seconds\n         */\n\n    }, {\n        key: 'seekTo',\n        value: function seekTo(start) {\n            if (start != null) {\n                this.media.currentTime = start;\n            }\n            this.clearPlayEnd();\n        }\n\n        /**\n         * Plays the loaded audio region.\n         *\n         * @param {Number} start Start offset in seconds, relative to the beginning\n         * of a clip.\n         * @param {Number} end When to stop relative to the beginning of a clip.\n         * @emits MediaElement#play\n         */\n\n    }, {\n        key: 'play',\n        value: function play(start, end) {\n            this.seekTo(start);\n            this.media.play();\n            end && this.setPlayEnd(end);\n            this.fireEvent('play');\n        }\n\n        /**\n         * Pauses the loaded audio.\n         *\n         * @emits MediaElement#pause\n         */\n\n    }, {\n        key: 'pause',\n        value: function pause() {\n            this.media && this.media.pause();\n            this.clearPlayEnd();\n            this.fireEvent('pause');\n        }\n\n        /** @private */\n\n    }, {\n        key: 'setPlayEnd',\n        value: function setPlayEnd(end) {\n            var _this4 = this;\n\n            this._onPlayEnd = function (time) {\n                if (time >= end) {\n                    _this4.pause();\n                    _this4.seekTo(end);\n                }\n            };\n            this.on('audioprocess', this._onPlayEnd);\n        }\n\n        /** @private */\n\n    }, {\n        key: 'clearPlayEnd',\n        value: function clearPlayEnd() {\n            if (this._onPlayEnd) {\n                this.un('audioprocess', this._onPlayEnd);\n                this._onPlayEnd = null;\n            }\n        }\n\n        /**\n         * Compute the max and min value of the waveform when broken into\n         * <length> subranges.\n         *\n         * @param {number} length How many subranges to break the waveform into.\n         * @param {number} first First sample in the required range.\n         * @param {number} last Last sample in the required range.\n         * @return {number[]|number[][]} Array of 2*<length> peaks or array of\n         * arrays of peaks consisting of (max, min) values for each subrange.\n         */\n\n    }, {\n        key: 'getPeaks',\n        value: function getPeaks(length, first, last) {\n            if (this.buffer) {\n                return _get(MediaElement.prototype.__proto__ || Object.getPrototypeOf(MediaElement.prototype), 'getPeaks', this).call(this, length, first, last);\n            }\n            return this.peaks || [];\n        }\n\n        /**\n         * Get the current volume\n         *\n         * @return {number} value A floating point value between 0 and 1.\n         */\n\n    }, {\n        key: 'getVolume',\n        value: function getVolume() {\n            return this.media.volume;\n        }\n\n        /**\n         * Set the audio volume\n         *\n         * @param {number} value A floating point value between 0 and 1.\n         */\n\n    }, {\n        key: 'setVolume',\n        value: function setVolume(value) {\n            this.media.volume = value;\n        }\n\n        /**\n         * This is called when wavesurfer is destroyed\n         *\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.pause();\n            this.unAll();\n            this.media && this.media.parentNode && this.media.parentNode.removeChild(this.media);\n            this.media = null;\n        }\n    }]);\n\n    return MediaElement;\n}(_webaudio2.default);\n\nexports.default = MediaElement;\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Caches the decoded peaks data to improve rendering speed for lage audio\n *\n * Is used if the option parameter `partialRender` is set to `true`\n */\nvar PeakCache = function () {\n    /**\n     * Instantiate cache\n     */\n    function PeakCache() {\n        _classCallCheck(this, PeakCache);\n\n        this.clearPeakCache();\n    }\n\n    /**\n     * Empty the cache\n     */\n\n\n    _createClass(PeakCache, [{\n        key: \"clearPeakCache\",\n        value: function clearPeakCache() {\n            /**\n             * Flat array with entries that are always in pairs to mark the\n             * beginning and end of each subrange.  This is a convenience so we can\n             * iterate over the pairs for easy set difference operations.\n             * @private\n             */\n            this.peakCacheRanges = [];\n            /**\n             * Length of the entire cachable region, used for resetting the cache\n             * when this changes (zoom events, for instance).\n             * @private\n             */\n            this.peakCacheLength = -1;\n        }\n\n        /**\n         * Add a range of peaks to the cache\n         *\n         * @param {number} length The length of the range\n         * @param {number} start The x offset of the start of the range\n         * @param {number} end The x offset of the end of the range\n         * @return {number[][]}\n         */\n\n    }, {\n        key: \"addRangeToPeakCache\",\n        value: function addRangeToPeakCache(length, start, end) {\n            if (length != this.peakCacheLength) {\n                this.clearPeakCache();\n                this.peakCacheLength = length;\n            }\n\n            // Return ranges that weren't in the cache before the call.\n            var uncachedRanges = [];\n            var i = 0;\n            // Skip ranges before the current start.\n            while (i < this.peakCacheRanges.length && this.peakCacheRanges[i] < start) {\n                i++;\n            }\n            // If |i| is even, |start| falls after an existing range.  Otherwise,\n            // |start| falls between an existing range, and the uncached region\n            // starts when we encounter the next node in |peakCacheRanges| or\n            // |end|, whichever comes first.\n            if (i % 2 == 0) {\n                uncachedRanges.push(start);\n            }\n            while (i < this.peakCacheRanges.length && this.peakCacheRanges[i] <= end) {\n                uncachedRanges.push(this.peakCacheRanges[i]);\n                i++;\n            }\n            // If |i| is even, |end| is after all existing ranges.\n            if (i % 2 == 0) {\n                uncachedRanges.push(end);\n            }\n\n            // Filter out the 0-length ranges.\n            uncachedRanges = uncachedRanges.filter(function (item, pos, arr) {\n                if (pos == 0) {\n                    return item != arr[pos + 1];\n                } else if (pos == arr.length - 1) {\n                    return item != arr[pos - 1];\n                }\n                return item != arr[pos - 1] && item != arr[pos + 1];\n            });\n\n            // Merge the two ranges together, uncachedRanges will either contain\n            // wholly new points, or duplicates of points in peakCacheRanges.  If\n            // duplicates are detected, remove both and extend the range.\n            this.peakCacheRanges = this.peakCacheRanges.concat(uncachedRanges);\n            this.peakCacheRanges = this.peakCacheRanges.sort(function (a, b) {\n                return a - b;\n            }).filter(function (item, pos, arr) {\n                if (pos == 0) {\n                    return item != arr[pos + 1];\n                } else if (pos == arr.length - 1) {\n                    return item != arr[pos - 1];\n                }\n                return item != arr[pos - 1] && item != arr[pos + 1];\n            });\n\n            // Push the uncached ranges into an array of arrays for ease of\n            // iteration in the functions that call this.\n            var uncachedRangePairs = [];\n            for (i = 0; i < uncachedRanges.length; i += 2) {\n                uncachedRangePairs.push([uncachedRanges[i], uncachedRanges[i + 1]]);\n            }\n\n            return uncachedRangePairs;\n        }\n\n        /**\n         * For testing\n         *\n         * @return {number[][]}\n         */\n\n    }, {\n        key: \"getCacheRanges\",\n        value: function getCacheRanges() {\n            var peakCacheRangePairs = [];\n            var i = void 0;\n            for (i = 0; i < this.peakCacheRanges.length; i += 2) {\n                peakCacheRangePairs.push([this.peakCacheRanges[i], this.peakCacheRanges[i + 1]]);\n            }\n            return peakCacheRangePairs;\n        }\n    }]);\n\n    return PeakCache;\n}();\n\nexports.default = PeakCache;\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __webpack_require__(0);\n\nvar util = _interopRequireWildcard(_util);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Parent class for renderers\n *\n * @extends {Observer}\n */\nvar Drawer = function (_util$Observer) {\n    _inherits(Drawer, _util$Observer);\n\n    /**\n     * @param {HTMLElement} container The container node of the wavesurfer instance\n     * @param {WavesurferParams} params The wavesurfer initialisation options\n     */\n    function Drawer(container, params) {\n        _classCallCheck(this, Drawer);\n\n        /** @private */\n        var _this = _possibleConstructorReturn(this, (Drawer.__proto__ || Object.getPrototypeOf(Drawer)).call(this));\n\n        _this.container = container;\n        /**\n         * @type {WavesurferParams}\n         * @private\n         */\n        _this.params = params;\n        /**\n         * The width of the renderer\n         * @type {number}\n         */\n        _this.width = 0;\n        /**\n         * The height of the renderer\n         * @type {number}\n         */\n        _this.height = params.height * _this.params.pixelRatio;\n        /** @private */\n        _this.lastPos = 0;\n        /**\n         * The `<wave>` element which is added to the container\n         * @type {HTMLElement}\n         */\n        _this.wrapper = null;\n        return _this;\n    }\n\n    /**\n     * Alias of `util.style`\n     *\n     * @param {HTMLElement} el The element that the styles will be applied to\n     * @param {Object} styles The map of propName: attribute, both are used as-is\n     * @return {HTMLElement} el\n     */\n\n\n    _createClass(Drawer, [{\n        key: 'style',\n        value: function style(el, styles) {\n            return util.style(el, styles);\n        }\n\n        /**\n         * Create the wrapper `<wave>` element, style it and set up the events for\n         * interaction\n         */\n\n    }, {\n        key: 'createWrapper',\n        value: function createWrapper() {\n            this.wrapper = this.container.appendChild(document.createElement('wave'));\n\n            this.style(this.wrapper, {\n                display: 'block',\n                position: 'relative',\n                userSelect: 'none',\n                webkitUserSelect: 'none',\n                height: this.params.height + 'px'\n            });\n\n            if (this.params.fillParent || this.params.scrollParent) {\n                this.style(this.wrapper, {\n                    width: '100%',\n                    overflowX: this.params.hideScrollbar ? 'hidden' : 'auto',\n                    overflowY: 'hidden'\n                });\n            }\n\n            this.setupWrapperEvents();\n        }\n\n        /**\n         * Handle click event\n         *\n         * @param {Event} e Click event\n         * @param {?boolean} noPrevent Set to true to not call `e.preventDefault()`\n         * @return {number} Playback position from 0 to 1\n         */\n\n    }, {\n        key: 'handleEvent',\n        value: function handleEvent(e, noPrevent) {\n            !noPrevent && e.preventDefault();\n\n            var clientX = e.targetTouches ? e.targetTouches[0].clientX : e.clientX;\n            var bbox = this.wrapper.getBoundingClientRect();\n\n            var nominalWidth = this.width;\n            var parentWidth = this.getWidth();\n\n            var progress = void 0;\n\n            if (!this.params.fillParent && nominalWidth < parentWidth) {\n                progress = (clientX - bbox.left) * this.params.pixelRatio / nominalWidth || 0;\n\n                if (progress > 1) {\n                    progress = 1;\n                }\n            } else {\n                progress = (clientX - bbox.left + this.wrapper.scrollLeft) / this.wrapper.scrollWidth || 0;\n            }\n\n            return progress;\n        }\n\n        /**\n         * @private\n         */\n\n    }, {\n        key: 'setupWrapperEvents',\n        value: function setupWrapperEvents() {\n            var _this2 = this;\n\n            this.wrapper.addEventListener('click', function (e) {\n                var scrollbarHeight = _this2.wrapper.offsetHeight - _this2.wrapper.clientHeight;\n                if (scrollbarHeight != 0) {\n                    // scrollbar is visible.  Check if click was on it\n                    var bbox = _this2.wrapper.getBoundingClientRect();\n                    if (e.clientY >= bbox.bottom - scrollbarHeight) {\n                        // ignore mousedown as it was on the scrollbar\n                        return;\n                    }\n                }\n\n                if (_this2.params.interact) {\n                    _this2.fireEvent('click', e, _this2.handleEvent(e));\n                }\n            });\n\n            this.wrapper.addEventListener('scroll', function (e) {\n                return _this2.fireEvent('scroll', e);\n            });\n        }\n\n        /**\n         * Draw peaks on the canvas\n         *\n         * @param {number[]|number[][]} peaks Can also be an array of arrays for split channel\n         * rendering\n         * @param {number} length The width of the area that should be drawn\n         * @param {number} start The x-offset of the beginning of the area that\n         * should be rendered\n         * @param {number} end The x-offset of the end of the area that should be\n         * rendered\n         */\n\n    }, {\n        key: 'drawPeaks',\n        value: function drawPeaks(peaks, length, start, end) {\n            this.setWidth(length);\n\n            this.params.barWidth ? this.drawBars(peaks, 0, start, end) : this.drawWave(peaks, 0, start, end);\n        }\n\n        /**\n         * Scroll to the beginning\n         */\n\n    }, {\n        key: 'resetScroll',\n        value: function resetScroll() {\n            if (this.wrapper !== null) {\n                this.wrapper.scrollLeft = 0;\n            }\n        }\n\n        /**\n         * Recenter the viewport at a certain percent of the waveform\n         *\n         * @param {number} percent Value from 0 to 1 on the waveform\n         */\n\n    }, {\n        key: 'recenter',\n        value: function recenter(percent) {\n            var position = this.wrapper.scrollWidth * percent;\n            this.recenterOnPosition(position, true);\n        }\n\n        /**\n         * Recenter the viewport on a position, either scroll there immediately or\n         * in steps of 5 pixels\n         *\n         * @param {number} position X-offset in pixels\n         * @param {boolean} immediate Set to true to immediately scroll somewhere\n         */\n\n    }, {\n        key: 'recenterOnPosition',\n        value: function recenterOnPosition(position, immediate) {\n            var scrollLeft = this.wrapper.scrollLeft;\n            var half = ~~(this.wrapper.clientWidth / 2);\n            var maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n            var target = position - half;\n            var offset = target - scrollLeft;\n\n            if (maxScroll == 0) {\n                // no need to continue if scrollbar is not there\n                return;\n            }\n\n            // if the cursor is currently visible...\n            if (!immediate && -half <= offset && offset < half) {\n                // we'll limit the \"re-center\" rate.\n                var rate = 5;\n                offset = Math.max(-rate, Math.min(rate, offset));\n                target = scrollLeft + offset;\n            }\n\n            // limit target to valid range (0 to maxScroll)\n            target = Math.max(0, Math.min(maxScroll, target));\n            // no use attempting to scroll if we're not moving\n            if (target != scrollLeft) {\n                this.wrapper.scrollLeft = target;\n            }\n        }\n\n        /**\n         * Get the current scroll position in pixels\n         *\n         * @return {number}\n         */\n\n    }, {\n        key: 'getScrollX',\n        value: function getScrollX() {\n            return Math.round(this.wrapper.scrollLeft * this.params.pixelRatio);\n        }\n\n        /**\n         * Get the width of the container\n         *\n         * @return {number}\n         */\n\n    }, {\n        key: 'getWidth',\n        value: function getWidth() {\n            return Math.round(this.container.clientWidth * this.params.pixelRatio);\n        }\n\n        /**\n         * Set the width of the container\n         *\n         * @param {number} width\n         */\n\n    }, {\n        key: 'setWidth',\n        value: function setWidth(width) {\n            if (this.width == width) {\n                return;\n            }\n\n            this.width = width;\n\n            if (this.params.fillParent || this.params.scrollParent) {\n                this.style(this.wrapper, {\n                    width: ''\n                });\n            } else {\n                this.style(this.wrapper, {\n                    width: ~~(this.width / this.params.pixelRatio) + 'px'\n                });\n            }\n\n            this.updateSize();\n        }\n\n        /**\n         * Set the height of the container\n         *\n         * @param {number} height\n         */\n\n    }, {\n        key: 'setHeight',\n        value: function setHeight(height) {\n            if (height == this.height) {\n                return;\n            }\n            this.height = height;\n            this.style(this.wrapper, {\n                height: ~~(this.height / this.params.pixelRatio) + 'px'\n            });\n            this.updateSize();\n        }\n\n        /**\n         * Called by wavesurfer when progress should be renderered\n         *\n         * @param {number} progress From 0 to 1\n         */\n\n    }, {\n        key: 'progress',\n        value: function progress(_progress) {\n            var minPxDelta = 1 / this.params.pixelRatio;\n            var pos = Math.round(_progress * this.width) * minPxDelta;\n\n            if (pos < this.lastPos || pos - this.lastPos >= minPxDelta) {\n                this.lastPos = pos;\n\n                if (this.params.scrollParent && this.params.autoCenter) {\n                    var newPos = ~~(this.wrapper.scrollWidth * _progress);\n                    this.recenterOnPosition(newPos);\n                }\n\n                this.updateProgress(pos);\n            }\n        }\n\n        /**\n         * This is called when wavesurfer is destroyed\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.unAll();\n            if (this.wrapper) {\n                this.container.removeChild(this.wrapper);\n                this.wrapper = null;\n            }\n        }\n\n        /* Renderer-specific methods */\n        /**\n         * Called when the size of the container changes so the renderer can adjust\n         *\n         * @abstract\n         */\n\n    }, {\n        key: 'updateSize',\n        value: function updateSize() {}\n\n        /**\n         * Draw a waveform with bars\n         *\n         * @abstract\n         * @param {number[]|number[][]} peaks Can also be an array of arrays for split channel\n         * rendering\n         * @param {number} channelIndex The index of the current channel. Normally\n         * should be 0\n         * @param {number} start The x-offset of the beginning of the area that\n         * should be rendered\n         * @param {number} end The x-offset of the end of the area that should be\n         * rendered\n         */\n\n    }, {\n        key: 'drawBars',\n        value: function drawBars(peaks, channelIndex, start, end) {}\n\n        /**\n         * Draw a waveform\n         *\n         * @abstract\n         * @param {number[]|number[][]} peaks Can also be an array of arrays for split channel\n         * rendering\n         * @param {number} channelIndex The index of the current channel. Normally\n         * should be 0\n         * @param {number} start The x-offset of the beginning of the area that\n         * should be rendered\n         * @param {number} end The x-offset of the end of the area that should be\n         * rendered\n         */\n\n    }, {\n        key: 'drawWave',\n        value: function drawWave(peaks, channelIndex, start, end) {}\n\n        /**\n         * Clear the waveform\n         *\n         * @abstract\n         */\n\n    }, {\n        key: 'clearWave',\n        value: function clearWave() {}\n\n        /**\n         * Render the new progress\n         *\n         * @abstract\n         * @param {number} position X-Offset of progress position in pixels\n         */\n\n    }, {\n        key: 'updateProgress',\n        value: function updateProgress(position) {}\n    }]);\n\n    return Drawer;\n}(util.Observer);\n\nexports.default = Drawer;\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = ajax;\n\nvar _observer = __webpack_require__(2);\n\nvar _observer2 = _interopRequireDefault(_observer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Perform an ajax request\n *\n * @param {Options} options Description\n *\n * @returns {Object} Observer instance\n */\nfunction ajax(options) {\n    var instance = new _observer2.default();\n    var xhr = new XMLHttpRequest();\n    var fired100 = false;\n    xhr.open(options.method || 'GET', options.url, true);\n    xhr.responseType = options.responseType || 'json';\n    xhr.addEventListener('progress', function (e) {\n        instance.fireEvent('progress', e);\n        if (e.lengthComputable && e.loaded == e.total) {\n            fired100 = true;\n        }\n    });\n    xhr.addEventListener('load', function (e) {\n        if (!fired100) {\n            instance.fireEvent('progress', e);\n        }\n        instance.fireEvent('load', e);\n        if (200 == xhr.status || 206 == xhr.status) {\n            instance.fireEvent('success', xhr.response, e);\n        } else {\n            instance.fireEvent('error', e);\n        }\n    });\n    xhr.addEventListener('error', function (e) {\n        return instance.fireEvent('error', e);\n    });\n    xhr.send();\n    instance.xhr = xhr;\n    return instance;\n}\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = extend;\n/**\n * Extend an object shallowly with others\n *\n * @param {Object} dest The target object\n * @param {Object[]} sources The objects to use for extending\n *\n * @return {Object} Merged object\n */\nfunction extend(dest) {\n    for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        sources[_key - 1] = arguments[_key];\n    }\n\n    sources.forEach(function (source) {\n        Object.keys(source).forEach(function (key) {\n            dest[key] = source[key];\n        });\n    });\n    return dest;\n}\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getId;\n/**\n * Get a random prefixed ID\n *\n * @returns {String} Random ID\n */\nfunction getId() {\n  return 'wavesurfer_' + Math.random().toString(32).substring(2);\n}\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = max;\n/**\n * Get the largest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Largest number found\n */\nfunction max(values) {\n    var largest = -Infinity;\n    Object.keys(values).forEach(function (i) {\n        if (values[i] > largest) {\n            largest = values[i];\n        }\n    });\n    return largest;\n}\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = min;\n/**\n * Get the smallest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number}       Smallest number found\n */\nfunction min(values) {\n    var smallest = Number(Infinity);\n    Object.keys(values).forEach(function (i) {\n        if (values[i] < smallest) {\n            smallest = values[i];\n        }\n    });\n    return smallest;\n}\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = style;\n/**\n * Apply a map of styles to an element\n *\n * @param {HTMLElement} el The element that the styles will be applied to\n * @param {Object} styles The map of propName: attribute, both are used as-is\n *\n * @return {HTMLElement} el\n */\nfunction style(el, styles) {\n    Object.keys(styles).forEach(function (prop) {\n        if (el.style[prop] !== styles[prop]) {\n            el.style[prop] = styles[prop];\n        }\n    });\n    return el;\n}\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __webpack_require__(0);\n\nvar util = _interopRequireWildcard(_util);\n\nvar _drawer = __webpack_require__(3);\n\nvar _drawer2 = _interopRequireDefault(_drawer);\n\nvar _webaudio = __webpack_require__(1);\n\nvar _webaudio2 = _interopRequireDefault(_webaudio);\n\nvar _mediaelement = __webpack_require__(4);\n\nvar _mediaelement2 = _interopRequireDefault(_mediaelement);\n\nvar _peakcache = __webpack_require__(5);\n\nvar _peakcache2 = _interopRequireDefault(_peakcache);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/** @external {HTMLElement} https://developer.mozilla.org/en/docs/Web/API/HTMLElement */\n/** @external {OfflineAudioContext} https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext */\n/** @external {File} https://developer.mozilla.org/en-US/docs/Web/API/File */\n/** @external {Blob} https://developer.mozilla.org/en-US/docs/Web/API/Blob */\n/** @external {CanvasRenderingContext2D} https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D */\n/** @external {MediaStreamConstraints} https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints */\n/** @external {AudioNode} https://developer.mozilla.org/de/docs/Web/API/AudioNode */\n\n/**\n * @typedef {Object} WavesurferParams\n * @property {AudioContext} audioContext=null Use your own previously\n * initialized AudioContext or leave blank.\n * @property {number} audioRate=1 Speed at which to play audio. Lower number is\n * slower.\n * @property {boolean} autoCenter=true If a scrollbar is present, center the\n * waveform around the progress\n * @property {string} backend='WebAudio' `'WebAudio'|'MediaElement'` In most cases\n * you don't have to set this manually. MediaElement is a fallback for\n * unsupported browsers.\n * @property {boolean} closeAudioContext=false Close and nullify all audio\n * contexts when the destroy method is called.\n * @property {!string|HTMLElement} container CSS selector or HTML element where\n * the waveform should be drawn. This is the only required parameter.\n * @property {string} cursorColor='#333' The fill color of the cursor indicating\n * the playhead position.\n * @property {number} cursorWidth=1 Measured in pixels.\n * @property {boolean} fillParent=true Whether to fill the entire container or\n * draw only according to `minPxPerSec`.\n * @property {boolean} forceDecode=false Force decoding of audio using web audio\n * when zooming to get a more detailed waveform.\n * @property {number} height=128 The height of the waveform. Measured in\n * pixels.\n * @property {boolean} hideScrollbar=false Whether to hide the horizontal\n * scrollbar when one would normally be shown.\n * @property {boolean} interact=true Whether the mouse interaction will be\n * enabled at initialization. You can switch this parameter at any time later\n * on.\n * @property {boolean} loopSelection=true (Use with regions plugin) Enable\n * looping of selected regions\n * @property {number} maxCanvasWidth=4000 Maximum width of a single canvas in\n * pixels, excluding a small overlap (2 * `pixelRatio`, rounded up to the next\n * even integer). If the waveform is longer than this value, additional canvases\n * will be used to render the waveform, which is useful for very large waveforms\n * that may be too wide for browsers to draw on a single canvas.\n * @property {boolean} mediaControls=false (Use with backend `MediaElement`)\n * this enables the native controls for the media element\n * @property {string} mediaType='audio' (Use with backend `MediaElement`)\n * `'audio'|'video'`\n * @property {number} minPxPerSec=20 Minimum number of pixels per second of\n * audio.\n * @property {boolean} normalize=false If true, normalize by the maximum peak\n * instead of 1.0.\n * @property {boolean} partialRender=false Use the PeakCache to improve\n * rendering speed of large waveforms\n * @property {number} pixelRatio=window.devicePixelRatio The pixel ratio used to\n * calculate display\n * @property {PluginDefinition[]} plugins=[] An array of plugin definitions to\n * register during instantiation, they will be directly initialised unless they\n * are added with the `deferInit` property set to true.\n * @property {string} progressColor='#555' The fill color of the part of the\n * waveform behind the cursor.\n * @property {Object} renderer=MultiCanvas Can be used to inject a custom\n * renderer.\n * @property {boolean|number} responsive=false If set to `true` resize the\n * waveform, when the window is resized. This is debounced with a `100ms`\n * timeout by default. If this parameter is a number it represents that timeout.\n * @property {boolean} scrollParent=false Whether to scroll the container with a\n * lengthy waveform. Otherwise the waveform is shrunk to the container width\n * (see fillParent).\n * @property {number} skipLength=2 Number of seconds to skip with the\n * skipForward() and skipBackward() methods.\n * @property {boolean} splitChannels=false Render with seperate waveforms for\n * the channels of the audio\n * @property {string} waveColor='#999' The fill color of the waveform after the\n * cursor.\n */\n\n/**\n * @typedef {Object} PluginDefinition\n * @desc The Object used to describe a plugin\n * @example wavesurfer.addPlugin(pluginDefinition);\n * @property {string} name The name of the plugin, the plugin instance will be\n * added as a property to the wavesurfer instance under this name\n * @property {?Object} staticProps The properties that should be added to the\n * wavesurfer instance as static properties\n * @property {?boolean} deferInit Don't initialise plugin\n * automatically\n * @property {Object} params={} The plugin parameters, they are the first parameter\n * passed to the plugin class constructor function\n * @property {PluginClass} instance The plugin instance factory, is called with\n * the dependency specified in extends. Returns the plugin class.\n */\n\n/**\n * @interface PluginClass\n *\n * @desc This is the interface which is implemented by all plugin classes. Note\n * that this only turns into an observer after being passed through\n * `wavesurfer.addPlugin`.\n *\n * @extends {Observer}\n */\nvar PluginClass = function () {\n    _createClass(PluginClass, [{\n        key: 'create',\n\n        /**\n         * Plugin definition factory\n         *\n         * This function must be used to create a plugin definition which can be\n         * used by wavesurfer to correctly instantiate the plugin.\n         *\n         * @param  {Object} params={} The plugin params (specific to the plugin)\n         * @return {PluginDefinition} an object representing the plugin\n         */\n        value: function create(params) {}\n        /**\n         * Construct the plugin\n         *\n         * @param {Object} ws The wavesurfer instance\n         * @param {Object} params={} The plugin params (specific to the plugin)\n         */\n\n    }]);\n\n    function PluginClass(ws, params) {\n        _classCallCheck(this, PluginClass);\n    }\n    /**\n     * Initialise the plugin\n     *\n     * Start doing something. This is called by\n     * `wavesurfer.initPlugin(pluginName)`\n     */\n\n\n    _createClass(PluginClass, [{\n        key: 'init',\n        value: function init() {}\n        /**\n         * Destroy the plugin instance\n         *\n         * Stop doing something. This is called by\n         * `wavesurfer.destroyPlugin(pluginName)`\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {}\n    }]);\n\n    return PluginClass;\n}();\n\n/**\n * WaveSurfer core library class\n *\n * @extends {Observer}\n * @example\n * const params = {\n *   container: '#waveform',\n *   waveColor: 'violet',\n *   progressColor: 'purple'\n * };\n *\n * // initialise like this\n * const wavesurfer = WaveSurfer.create(params);\n *\n * // or like this ...\n * const wavesurfer = new WaveSurfer(params);\n * wavesurfer.init();\n *\n * // load audio file\n * wavesurfer.load('example/media/demo.wav');\n */\n\n\nvar WaveSurfer = function (_util$Observer) {\n    _inherits(WaveSurfer, _util$Observer);\n\n    _createClass(WaveSurfer, null, [{\n        key: 'create',\n\n\n        /**\n         * Instantiate this class, call its `init` function and returns it\n         *\n         * @param {WavesurferParams} params\n         * @return {Object} WaveSurfer instance\n         * @example const wavesurfer = WaveSurfer.create(params);\n         */\n\n        /** @private */\n        value: function create(params) {\n            var wavesurfer = new WaveSurfer(params);\n            return wavesurfer.init();\n        }\n\n        /**\n         * Functions in the `util` property are available as a prototype property to\n         * all instances\n         *\n         * @type {Object}\n         * @example\n         * const wavesurfer = WaveSurfer.create(params);\n         * wavesurfer.util.style(myElement, { background: 'blue' });\n         */\n\n\n        /** @private */\n\n\n        /**\n         * Functions in the `util` property are available as a static property of the\n         * WaveSurfer class\n         *\n         * @type {Object}\n         * @example\n         * WaveSurfer.util.style(myElement, { background: 'blue' });\n         */\n\n    }]);\n\n    /**\n     * Initialise wavesurfer instance\n     *\n     * @param {WavesurferParams} params Instantiation options for wavesurfer\n     * @example\n     * const wavesurfer = new WaveSurfer(params);\n     * @returns {this}\n     */\n    function WaveSurfer(params) {\n        var _ret;\n\n        _classCallCheck(this, WaveSurfer);\n\n        /**\n         * Extract relevant parameters (or defaults)\n         * @private\n         */\n        var _this = _possibleConstructorReturn(this, (WaveSurfer.__proto__ || Object.getPrototypeOf(WaveSurfer)).call(this));\n\n        _this.defaultParams = {\n            audioContext: null,\n            audioRate: 1,\n            autoCenter: true,\n            backend: 'WebAudio',\n            container: null,\n            cursorColor: '#333',\n            cursorWidth: 1,\n            dragSelection: true,\n            fillParent: true,\n            forceDecode: true,\n            height: 128,\n            hideScrollbar: false,\n            interact: true,\n            loopSelection: true,\n            maxCanvasWidth: 4000,\n            mediaContainer: null,\n            mediaControls: false,\n            mediaType: 'audio',\n            minPxPerSec: 20,\n            normalize: false,\n            partialRender: false,\n            pixelRatio: window.devicePixelRatio || screen.deviceXDPI / screen.logicalXDPI,\n            plugins: [],\n            progressColor: '#555',\n            renderer: _drawer2.default,\n            responsive: false,\n            scrollParent: false,\n            skipLength: 2,\n            splitChannels: false,\n            waveColor: '#999'\n        };\n        _this.backends = {\n            MediaElement: _mediaelement2.default,\n            WebAudio: _webaudio2.default\n        };\n        _this.util = util;\n        _this.params = util.extend({}, _this.defaultParams, params);\n\n        /** @private */\n        _this.container = 'string' == typeof params.container ? document.querySelector(_this.params.container) : _this.params.container;\n\n        if (!_this.container) {\n            throw new Error('Container element not found');\n        }\n\n        if (_this.params.mediaContainer == null) {\n            /** @private */\n            _this.mediaContainer = _this.container;\n        } else if (typeof _this.params.mediaContainer == 'string') {\n            /** @private */\n            _this.mediaContainer = document.querySelector(_this.params.mediaContainer);\n        } else {\n            /** @private */\n            _this.mediaContainer = _this.params.mediaContainer;\n        }\n\n        if (!_this.mediaContainer) {\n            throw new Error('Media Container element not found');\n        }\n\n        if (_this.params.maxCanvasWidth <= 1) {\n            throw new Error('maxCanvasWidth must be greater than 1');\n        } else if (_this.params.maxCanvasWidth % 2 == 1) {\n            throw new Error('maxCanvasWidth must be an even number');\n        }\n\n        /**\n         * @private Used to save the current volume when muting so we can\n         * restore once unmuted\n         * @type {number}\n         */\n        _this.savedVolume = 0;\n\n        /**\n         * @private The current muted state\n         * @type {boolean}\n         */\n        _this.isMuted = false;\n\n        /**\n         * @private Will hold a list of event descriptors that need to be\n         * cancelled on subsequent loads of audio\n         * @type {Object[]}\n         */\n        _this.tmpEvents = [];\n\n        /**\n         * @private Holds any running audio downloads\n         * @type {Observer}\n         */\n        _this.currentAjax = null;\n        /** @private */\n        _this.arraybuffer = null;\n        /** @private */\n        _this.drawer = null;\n        /** @private */\n        _this.backend = null;\n        /** @private */\n        _this.peakCache = null;\n\n        // cache constructor objects\n        if (typeof _this.params.renderer !== 'function') {\n            throw new Error('Renderer parameter is invalid');\n        }\n        /**\n         * @private The uninitialised Drawer class\n         */\n        _this.Drawer = _this.params.renderer;\n        /**\n         * @private The uninitialised Backend class\n         */\n        _this.Backend = _this.backends[_this.params.backend];\n\n        /**\n         * @private map of plugin names that are currently initialised\n         */\n        _this.initialisedPluginList = {};\n        /** @private */\n        _this.isDestroyed = false;\n        /** @private */\n        _this.isReady = false;\n\n        // responsive debounced event listener. If this.params.responsive is not\n        // set, this is never called. Use 100ms or this.params.responsive as\n        // timeout for the debounce function.\n        var prevWidth = 0;\n        _this._onResize = util.debounce(function () {\n            if (prevWidth != _this.drawer.wrapper.clientWidth) {\n                prevWidth = _this.drawer.wrapper.clientWidth;\n                _this.empty();\n                _this.drawBuffer();\n            }\n        }, typeof _this.params.responsive === 'number' ? _this.params.responsive : 100);\n\n        return _ret = _this, _possibleConstructorReturn(_this, _ret);\n    }\n\n    /**\n     * Initialise the wave\n     *\n     * @example\n     * var wavesurfer = new WaveSurfer(params);\n     * wavesurfer.init();\n     * @return {this}\n     */\n\n\n    _createClass(WaveSurfer, [{\n        key: 'init',\n        value: function init() {\n            this.registerPlugins(this.params.plugins);\n            this.createDrawer();\n            this.createBackend();\n            this.createPeakCache();\n            return this;\n        }\n\n        /**\n         * Add and initialise array of plugins (if `plugin.deferInit` is falsey),\n         * this function is called in the init function of wavesurfer\n         *\n         * @param {PluginDefinition[]} plugins An array of plugin definitions\n         * @emits {WaveSurfer#plugins-registered} Called with the array of plugin definitions\n         * @return {this}\n         */\n\n    }, {\n        key: 'registerPlugins',\n        value: function registerPlugins(plugins) {\n            var _this2 = this;\n\n            // first instantiate all the plugins\n            plugins.forEach(function (plugin) {\n                return _this2.addPlugin(plugin);\n            });\n\n            // now run the init functions\n            plugins.forEach(function (plugin) {\n                // call init function of the plugin if deferInit is falsey\n                // in that case you would manually use initPlugins()\n                if (!plugin.deferInit) {\n                    _this2.initPlugin(plugin.name);\n                }\n            });\n            this.fireEvent('plugins-registered', plugins);\n            return this;\n        }\n\n        /**\n         * Add a plugin object to wavesurfer\n         *\n         * @param {PluginDefinition} plugin A plugin definition\n         * @emits {WaveSurfer#plugin-added} Called with the name of the plugin that was added\n         * @example wavesurfer.addPlugin(WaveSurfer.minimap());\n         * @return {this}\n         */\n\n    }, {\n        key: 'addPlugin',\n        value: function addPlugin(plugin) {\n            var _this3 = this;\n\n            if (!plugin.name) {\n                throw new Error('Plugin does not have a name!');\n            }\n            if (!plugin.instance) {\n                throw new Error('Plugin ' + plugin.name + ' does not have an instance property!');\n            }\n\n            // staticProps properties are applied to wavesurfer instance\n            if (plugin.staticProps) {\n                Object.keys(plugin.staticProps).forEach(function (pluginStaticProp) {\n                    /**\n                     * Properties defined in a plugin definition's `staticProps` property are added as\n                     * staticProps properties of the WaveSurfer instance\n                     */\n                    _this3[pluginStaticProp] = plugin.staticProps[pluginStaticProp];\n                });\n            }\n\n            var Instance = plugin.instance;\n\n            // turn the plugin instance into an observer\n            var observerPrototypeKeys = Object.getOwnPropertyNames(util.Observer.prototype);\n            observerPrototypeKeys.forEach(function (key) {\n                Instance.prototype[key] = util.Observer.prototype[key];\n            });\n\n            /**\n             * Instantiated plugin classes are added as a property of the wavesurfer\n             * instance\n             * @type {Object}\n             */\n            this[plugin.name] = new Instance(plugin.params || {}, this);\n            this.fireEvent('plugin-added', plugin.name);\n            return this;\n        }\n\n        /**\n         * Initialise a plugin\n         *\n         * @param {string} name A plugin name\n         * @emits WaveSurfer#plugin-initialised\n         * @example wavesurfer.initPlugin('minimap');\n         * @return {this}\n         */\n\n    }, {\n        key: 'initPlugin',\n        value: function initPlugin(name) {\n            if (!this[name]) {\n                throw new Error('Plugin ' + name + ' has not been added yet!');\n            }\n            if (this.initialisedPluginList[name]) {\n                // destroy any already initialised plugins\n                this.destroyPlugin(name);\n            }\n            this[name].init();\n            this.initialisedPluginList[name] = true;\n            this.fireEvent('plugin-initialised', name);\n            return this;\n        }\n\n        /**\n         * Destroy a plugin\n         *\n         * @param {string} name A plugin name\n         * @emits WaveSurfer#plugin-destroyed\n         * @example wavesurfer.destroyPlugin('minimap');\n         * @returns {this}\n         */\n\n    }, {\n        key: 'destroyPlugin',\n        value: function destroyPlugin(name) {\n            if (!this[name]) {\n                throw new Error('Plugin ' + name + ' has not been added yet and cannot be destroyed!');\n            }\n            if (!this.initialisedPluginList[name]) {\n                throw new Error('Plugin ' + name + ' is not active and cannot be destroyed!');\n            }\n            if (typeof this[name].destroy !== 'function') {\n                throw new Error('Plugin ' + name + ' does not have a destroy function!');\n            }\n\n            this[name].destroy();\n            delete this.initialisedPluginList[name];\n            this.fireEvent('plugin-destroyed', name);\n            return this;\n        }\n\n        /**\n         * Destroy all initialised plugins. Convenience function to use when\n         * wavesurfer is removed\n         *\n         * @private\n         */\n\n    }, {\n        key: 'destroyAllPlugins',\n        value: function destroyAllPlugins() {\n            var _this4 = this;\n\n            Object.keys(this.initialisedPluginList).forEach(function (name) {\n                return _this4.destroyPlugin(name);\n            });\n        }\n\n        /**\n         * Create the drawer and draw the waveform\n         *\n         * @private\n         * @emits WaveSurfer#drawer-created\n         */\n\n    }, {\n        key: 'createDrawer',\n        value: function createDrawer() {\n            var _this5 = this;\n\n            this.drawer = new this.Drawer(this.container, this.params);\n            this.drawer.init();\n            this.fireEvent('drawer-created', this.drawer);\n\n            if (this.params.responsive) {\n                window.addEventListener('resize', this._onResize, true);\n            }\n\n            this.drawer.on('redraw', function () {\n                _this5.drawBuffer();\n                _this5.drawer.progress(_this5.backend.getPlayedPercents());\n            });\n\n            // Click-to-seek\n            this.drawer.on('click', function (e, progress) {\n                setTimeout(function () {\n                    return _this5.seekTo(progress);\n                }, 0);\n            });\n\n            // Relay the scroll event from the drawer\n            this.drawer.on('scroll', function (e) {\n                if (_this5.params.partialRender) {\n                    _this5.drawBuffer();\n                }\n                _this5.fireEvent('scroll', e);\n            });\n        }\n\n        /**\n         * Create the backend\n         *\n         * @private\n         * @emits WaveSurfer#backend-created\n         */\n\n    }, {\n        key: 'createBackend',\n        value: function createBackend() {\n            var _this6 = this;\n\n            if (this.backend) {\n                this.backend.destroy();\n            }\n\n            // Back compat\n            if (this.params.backend == 'AudioElement') {\n                this.params.backend = 'MediaElement';\n            }\n\n            if (this.params.backend == 'WebAudio' && !this.Backend.prototype.supportsWebAudio.call(null)) {\n                this.params.backend = 'MediaElement';\n            }\n\n            this.backend = new this.Backend(this.params);\n            this.backend.init();\n            this.fireEvent('backend-created', this.backend);\n\n            this.backend.on('finish', function () {\n                return _this6.fireEvent('finish');\n            });\n            this.backend.on('play', function () {\n                return _this6.fireEvent('play');\n            });\n            this.backend.on('pause', function () {\n                return _this6.fireEvent('pause');\n            });\n\n            this.backend.on('audioprocess', function (time) {\n                _this6.drawer.progress(_this6.backend.getPlayedPercents());\n                _this6.fireEvent('audioprocess', time);\n            });\n        }\n\n        /**\n         * Create the peak cache\n         *\n         * @private\n         */\n\n    }, {\n        key: 'createPeakCache',\n        value: function createPeakCache() {\n            if (this.params.partialRender) {\n                this.peakCache = new _peakcache2.default();\n            }\n        }\n\n        /**\n         * Get the duration of the audio clip\n         *\n         * @example const duration = wavesurfer.getDuration();\n         * @return {number} Duration in seconds\n         */\n\n    }, {\n        key: 'getDuration',\n        value: function getDuration() {\n            return this.backend.getDuration();\n        }\n\n        /**\n         * Get the current playback position\n         *\n         * @example const currentTime = wavesurfer.getCurrentTime();\n         * @return {number} Playback position in seconds\n         */\n\n    }, {\n        key: 'getCurrentTime',\n        value: function getCurrentTime() {\n            return this.backend.getCurrentTime();\n        }\n\n        /**\n         * Starts playback from the current position. Optional start and end\n         * measured in seconds can be used to set the range of audio to play.\n         *\n         * @param {?number} start Position to start at\n         * @param {?number} end Position to end at\n         * @emits WaveSurfer#interaction\n         * @example\n         * // play from second 1 to 5\n         * wavesurfer.play(1, 5);\n         */\n\n    }, {\n        key: 'play',\n        value: function play(start, end) {\n            var _this7 = this;\n\n            this.fireEvent('interaction', function () {\n                return _this7.play(start, end);\n            });\n            this.backend.play(start, end);\n        }\n\n        /**\n         * Stops playback\n         *\n         * @example wavesurfer.pause();\n         */\n\n    }, {\n        key: 'pause',\n        value: function pause() {\n            this.backend.isPaused() || this.backend.pause();\n        }\n\n        /**\n         * Toggle playback\n         *\n         * @example wavesurfer.playPause();\n         */\n\n    }, {\n        key: 'playPause',\n        value: function playPause() {\n            this.backend.isPaused() ? this.play() : this.pause();\n        }\n\n        /**\n         * Get the current playback state\n         *\n         * @example const isPlaying = wavesurfer.isPlaying();\n         * @return {boolean} False if paused, true if playing\n         */\n\n    }, {\n        key: 'isPlaying',\n        value: function isPlaying() {\n            return !this.backend.isPaused();\n        }\n\n        /**\n         * Skip backward\n         *\n         * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n         * is used\n         * @example wavesurfer.skipBackward();\n         */\n\n    }, {\n        key: 'skipBackward',\n        value: function skipBackward(seconds) {\n            this.skip(-seconds || -this.params.skipLength);\n        }\n\n        /**\n         * Skip forward\n         *\n         * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n         * is used\n         * @example wavesurfer.skipForward();\n         */\n\n    }, {\n        key: 'skipForward',\n        value: function skipForward(seconds) {\n            this.skip(seconds || this.params.skipLength);\n        }\n\n        /**\n         * Skip a number of seconds from the current position (use a negative value\n         * to go backwards).\n         *\n         * @param {number} offset Amount to skip back or forwards\n         * @example\n         * // go back 2 seconds\n         * wavesurfer.skip(-2);\n         */\n\n    }, {\n        key: 'skip',\n        value: function skip(offset) {\n            var duration = this.getDuration() || 1;\n            var position = this.getCurrentTime() || 0;\n            position = Math.max(0, Math.min(duration, position + (offset || 0)));\n            this.seekAndCenter(position / duration);\n        }\n\n        /**\n         * Seeks to a position and centers the view\n         *\n         * @param {number} progress Between 0 (=beginning) and 1 (=end)\n         * @example\n         * // seek and go to the middle of the audio\n         * wavesurfer.seekTo(0.5);\n         */\n\n    }, {\n        key: 'seekAndCenter',\n        value: function seekAndCenter(progress) {\n            this.seekTo(progress);\n            this.drawer.recenter(progress);\n        }\n\n        /**\n         * Seeks to a position\n         *\n         * @param {number} progress Between 0 (=beginning) and 1 (=end)\n         * @emits WaveSurfer#interaction\n         * @emits WaveSurfer#seek\n         * @example\n         * // seek to the middle of the audio\n         * wavesurfer.seekTo(0.5);\n         */\n\n    }, {\n        key: 'seekTo',\n        value: function seekTo(progress) {\n            var _this8 = this;\n\n            this.fireEvent('interaction', function () {\n                return _this8.seekTo(progress);\n            });\n\n            var paused = this.backend.isPaused();\n            // avoid draw wrong position while playing backward seeking\n            if (!paused) {\n                this.backend.pause();\n            }\n            // avoid small scrolls while paused seeking\n            var oldScrollParent = this.params.scrollParent;\n            this.params.scrollParent = false;\n            this.backend.seekTo(progress * this.getDuration());\n            this.drawer.progress(this.backend.getPlayedPercents());\n\n            if (!paused) {\n                this.backend.play();\n            }\n            this.params.scrollParent = oldScrollParent;\n            this.fireEvent('seek', progress);\n        }\n\n        /**\n         * Stops and goes to the beginning.\n         *\n         * @example wavesurfer.stop();\n         */\n\n    }, {\n        key: 'stop',\n        value: function stop() {\n            this.pause();\n            this.seekTo(0);\n            this.drawer.progress(0);\n        }\n\n        /**\n         * Set the playback volume.\n         *\n         * @param {number} newVolume A value between 0 and 1, 0 being no\n         * volume and 1 being full volume.\n         */\n\n    }, {\n        key: 'setVolume',\n        value: function setVolume(newVolume) {\n            this.backend.setVolume(newVolume);\n        }\n\n        /**\n         * Get the playback volume.\n         *\n         * @return {number} A value between 0 and 1, 0 being no\n         * volume and 1 being full volume.\n         */\n\n    }, {\n        key: 'getVolume',\n        value: function getVolume() {\n            return this.backend.getVolume();\n        }\n\n        /**\n         * Set the playback rate.\n         *\n         * @param {number} rate A positive number. E.g. 0.5 means half the normal\n         * speed, 2 means double speed and so on.\n         * @example wavesurfer.setPlaybackRate(2);\n         */\n\n    }, {\n        key: 'setPlaybackRate',\n        value: function setPlaybackRate(rate) {\n            this.backend.setPlaybackRate(rate);\n        }\n\n        /**\n         * Get the playback rate.\n         *\n         * @return {number}\n         */\n\n    }, {\n        key: 'getPlaybackRate',\n        value: function getPlaybackRate() {\n            return this.backend.getPlaybackRate();\n        }\n\n        /**\n         * Toggle the volume on and off. It not currenly muted it will save the\n         * current volume value and turn the volume off. If currently muted then it\n         * will restore the volume to the saved value, and then rest the saved\n         * value.\n         *\n         * @example wavesurfer.toggleMute();\n         */\n\n    }, {\n        key: 'toggleMute',\n        value: function toggleMute() {\n            this.setMute(!this.isMuted);\n        }\n\n        /**\n         * Enable or disable muted audio\n         *\n         * @param {boolean} mute\n         * @example\n         * // unmute\n         * wavesurfer.setMute(false);\n         */\n\n    }, {\n        key: 'setMute',\n        value: function setMute(mute) {\n            // ignore all muting requests if the audio is already in that state\n            if (mute === this.isMuted) {\n                return;\n            }\n\n            if (mute) {\n                // If currently not muted then save current volume,\n                // turn off the volume and update the mute properties\n                this.savedVolume = this.backend.getVolume();\n                this.backend.setVolume(0);\n                this.isMuted = true;\n            } else {\n                // If currently muted then restore to the saved volume\n                // and update the mute properties\n                this.backend.setVolume(this.savedVolume);\n                this.isMuted = false;\n            }\n        }\n\n        /**\n         * Get the current mute status.\n         *\n         * @example const isMuted = wavesurfer.getMute();\n         * @return {boolean}\n         */\n\n    }, {\n        key: 'getMute',\n        value: function getMute() {\n            return this.isMuted;\n        }\n\n        /**\n         * Toggles `scrollParent` and redraws\n         *\n         * @example wavesurfer.toggleScroll();\n         */\n\n    }, {\n        key: 'toggleScroll',\n        value: function toggleScroll() {\n            this.params.scrollParent = !this.params.scrollParent;\n            this.drawBuffer();\n        }\n\n        /**\n         * Toggle mouse interaction\n         *\n         * @example wavesurfer.toggleInteraction();\n         */\n\n    }, {\n        key: 'toggleInteraction',\n        value: function toggleInteraction() {\n            this.params.interact = !this.params.interact;\n        }\n\n        /**\n         * Get the correct peaks for current wave viewport and render wave\n         *\n         * @private\n         * @emits WaveSurfer#redraw\n         */\n\n    }, {\n        key: 'drawBuffer',\n        value: function drawBuffer() {\n            var nominalWidth = Math.round(this.getDuration() * this.params.minPxPerSec * this.params.pixelRatio);\n            var parentWidth = this.drawer.getWidth();\n            var width = nominalWidth;\n            var start = this.drawer.getScrollX();\n            var end = Math.min(start + parentWidth, width);\n\n            // Fill container\n            if (this.params.fillParent && (!this.params.scrollParent || nominalWidth < parentWidth)) {\n                width = parentWidth;\n                start = 0;\n                end = width;\n            }\n\n            var peaks = void 0;\n            if (this.params.partialRender) {\n                var newRanges = this.peakCache.addRangeToPeakCache(width, start, end);\n                var i = void 0;\n                for (i = 0; i < newRanges.length; i++) {\n                    peaks = this.backend.getPeaks(width, newRanges[i][0], newRanges[i][1]);\n                    this.drawer.drawPeaks(peaks, width, newRanges[i][0], newRanges[i][1]);\n                }\n            } else {\n                start = 0;\n                end = width;\n                peaks = this.backend.getPeaks(width, start, end);\n                this.drawer.drawPeaks(peaks, width, start, end);\n            }\n            this.fireEvent('redraw', peaks, width);\n        }\n\n        /**\n         * Horizontally zooms the waveform in and out. It also changes the parameter\n         * `minPxPerSec` and enables the `scrollParent` option.\n         *\n         * @param {number} pxPerSec Number of horizontal pixels per second of audio\n         * @emits WaveSurfer#zoom\n         * @example wavesurfer.zoom(20);\n         */\n\n    }, {\n        key: 'zoom',\n        value: function zoom(pxPerSec) {\n            this.params.minPxPerSec = pxPerSec;\n\n            this.params.scrollParent = true;\n\n            this.drawBuffer();\n            this.drawer.progress(this.backend.getPlayedPercents());\n\n            this.drawer.recenter(this.getCurrentTime() / this.getDuration());\n            this.fireEvent('zoom', pxPerSec);\n        }\n\n        /**\n         * Decode buffer and load\n         *\n         * @private\n         * @param {ArrayBuffer} arraybuffer\n         */\n\n    }, {\n        key: 'loadArrayBuffer',\n        value: function loadArrayBuffer(arraybuffer) {\n            var _this9 = this;\n\n            this.decodeArrayBuffer(arraybuffer, function (data) {\n                if (!_this9.isDestroyed) {\n                    _this9.loadDecodedBuffer(data);\n                }\n            });\n        }\n\n        /**\n         * Directly load an externally decoded AudioBuffer\n         *\n         * @private\n         * @param {AudioBuffer} buffer\n         * @emits WaveSurfer#ready\n         */\n\n    }, {\n        key: 'loadDecodedBuffer',\n        value: function loadDecodedBuffer(buffer) {\n            this.backend.load(buffer);\n            this.drawBuffer();\n            this.fireEvent('ready');\n            this.isReady = true;\n        }\n\n        /**\n         * Loads audio data from a Blob or File object\n         *\n         * @param {Blob|File} blob Audio data\n         * @example\n         */\n\n    }, {\n        key: 'loadBlob',\n        value: function loadBlob(blob) {\n            var _this10 = this;\n\n            // Create file reader\n            var reader = new FileReader();\n            reader.addEventListener('progress', function (e) {\n                return _this10.onProgress(e);\n            });\n            reader.addEventListener('load', function (e) {\n                return _this10.loadArrayBuffer(e.target.result);\n            });\n            reader.addEventListener('error', function () {\n                return _this10.fireEvent('error', 'Error reading file');\n            });\n            reader.readAsArrayBuffer(blob);\n            this.empty();\n        }\n\n        /**\n         * Loads audio and re-renders the waveform.\n         *\n         * @param {string} url The url of the audio file\n         * @param {?number[]|number[][]} peaks Wavesurfer does not have to decode the audio to\n         * render the waveform if this is specified\n         * @param {?string} preload (Use with backend `MediaElement`)\n         * `'none'|'metadata'|'auto'` Preload attribute for the media element\n         * @example\n         * // using ajax or media element to load (depending on backend)\n         * wavesurfer.load('http://example.com/demo.wav');\n         *\n         * // setting preload attribute with media element backend and supplying\n         * peaks wavesurfer.load(\n         *   'http://example.com/demo.wav',\n         *   [0.0218, 0.0183, 0.0165, 0.0198, 0.2137, 0.2888],\n         *   true,\n         * );\n         */\n\n    }, {\n        key: 'load',\n        value: function load(url, peaks, preload) {\n            this.empty();\n\n            switch (this.params.backend) {\n                case 'WebAudio':\n                    return this.loadBuffer(url, peaks);\n                case 'MediaElement':\n                    return this.loadMediaElement(url, peaks, preload);\n            }\n        }\n\n        /**\n         * Loads audio using Web Audio buffer backend.\n         *\n         * @private\n         * @param {string} url\n         * @param {?number[]|number[][]} peaks\n         */\n\n    }, {\n        key: 'loadBuffer',\n        value: function loadBuffer(url, peaks) {\n            var _this11 = this;\n\n            var load = function load(action) {\n                if (action) {\n                    _this11.tmpEvents.push(_this11.once('ready', action));\n                }\n                return _this11.getArrayBuffer(url, function (data) {\n                    return _this11.loadArrayBuffer(data);\n                });\n            };\n\n            if (peaks) {\n                this.backend.setPeaks(peaks);\n                this.drawBuffer();\n                this.tmpEvents.push(this.once('interaction', load));\n            } else {\n                return load();\n            }\n        }\n\n        /**\n         * Either create a media element, or load an existing media element.\n         *\n         * @private\n         * @param {string|HTMLElement} urlOrElt Either a path to a media file, or an\n         * existing HTML5 Audio/Video Element\n         * @param {number[]|number[][]} peaks Array of peaks. Required to bypass web audio\n         * dependency\n         * @param {?boolean} preload Set to true if the preload attribute of the\n         * audio element should be enabled\n         */\n\n    }, {\n        key: 'loadMediaElement',\n        value: function loadMediaElement(urlOrElt, peaks, preload) {\n            var _this12 = this;\n\n            var url = urlOrElt;\n\n            if (typeof urlOrElt === 'string') {\n                this.backend.load(url, this.mediaContainer, peaks, preload);\n            } else {\n                var elt = urlOrElt;\n                this.backend.loadElt(elt, peaks);\n\n                // If peaks are not provided,\n                // url = element.src so we can get peaks with web audio\n                url = elt.src;\n            }\n\n            this.tmpEvents.push(this.backend.once('canplay', function () {\n                _this12.drawBuffer();\n                _this12.fireEvent('ready');\n            }), this.backend.once('error', function (err) {\n                return _this12.fireEvent('error', err);\n            }));\n\n            // If no pre-decoded peaks provided or pre-decoded peaks are\n            // provided with forceDecode flag, attempt to download the\n            // audio file and decode it with Web Audio.\n            if (peaks) {\n                this.backend.setPeaks(peaks);\n            }\n\n            if ((!peaks || this.params.forceDecode) && this.backend.supportsWebAudio()) {\n                this.getArrayBuffer(url, function (arraybuffer) {\n                    _this12.decodeArrayBuffer(arraybuffer, function (buffer) {\n                        _this12.backend.buffer = buffer;\n                        _this12.backend.setPeaks(null);\n                        _this12.drawBuffer();\n                        _this12.fireEvent('waveform-ready');\n                    });\n                });\n            }\n        }\n\n        /**\n         * Decode an array buffer and pass data to a callback\n         *\n         * @private\n         * @param {Object} arraybuffer\n         * @param {function} callback\n         */\n\n    }, {\n        key: 'decodeArrayBuffer',\n        value: function decodeArrayBuffer(arraybuffer, callback) {\n            var _this13 = this;\n\n            this.arraybuffer = arraybuffer;\n\n            this.backend.decodeArrayBuffer(arraybuffer, function (data) {\n                // Only use the decoded data if we haven't been destroyed or\n                // another decode started in the meantime\n                if (!_this13.isDestroyed && _this13.arraybuffer == arraybuffer) {\n                    callback(data);\n                    _this13.arraybuffer = null;\n                }\n            }, function () {\n                return _this13.fireEvent('error', 'Error decoding audiobuffer');\n            });\n        }\n\n        /**\n         * Load an array buffer by ajax and pass to a callback\n         *\n         * @param {string} url\n         * @param {function} callback\n         * @private\n         */\n\n    }, {\n        key: 'getArrayBuffer',\n        value: function getArrayBuffer(url, callback) {\n            var _this14 = this;\n\n            var ajax = util.ajax({\n                url: url,\n                responseType: 'arraybuffer'\n            });\n\n            this.currentAjax = ajax;\n\n            this.tmpEvents.push(ajax.on('progress', function (e) {\n                _this14.onProgress(e);\n            }), ajax.on('success', function (data, e) {\n                callback(data);\n                _this14.currentAjax = null;\n            }), ajax.on('error', function (e) {\n                _this14.fireEvent('error', 'XHR error: ' + e.target.statusText);\n                _this14.currentAjax = null;\n            }));\n\n            return ajax;\n        }\n\n        /**\n         * Called while the audio file is loading\n         *\n         * @private\n         * @param {Event} e\n         * @emits WaveSurfer#loading\n         */\n\n    }, {\n        key: 'onProgress',\n        value: function onProgress(e) {\n            var percentComplete = void 0;\n            if (e.lengthComputable) {\n                percentComplete = e.loaded / e.total;\n            } else {\n                // Approximate progress with an asymptotic\n                // function, and assume downloads in the 1-3 MB range.\n                percentComplete = e.loaded / (e.loaded + 1000000);\n            }\n            this.fireEvent('loading', Math.round(percentComplete * 100), e.target);\n        }\n\n        /**\n         * Exports PCM data into a JSON array and opens in a new window.\n         *\n         * @param {number} length=1024 The scale in which to export the peaks. (Integer)\n         * @param {number} accuracy=10000 (Integer)\n         * @param {?boolean} noWindow Set to true to disable opening a new\n         * window with the JSON\n         * @todo Update exportPCM to work with new getPeaks signature\n         * @return {JSON} JSON of peaks\n         */\n\n    }, {\n        key: 'exportPCM',\n        value: function exportPCM(length, accuracy, noWindow) {\n            length = length || 1024;\n            accuracy = accuracy || 10000;\n            noWindow = noWindow || false;\n            var peaks = this.backend.getPeaks(length, accuracy);\n            var arr = [].map.call(peaks, function (val) {\n                return Math.round(val * accuracy) / accuracy;\n            });\n            var json = JSON.stringify(arr);\n            if (!noWindow) {\n                window.open('data:application/json;charset=utf-8,' + encodeURIComponent(json));\n            }\n            return json;\n        }\n\n        /**\n         * Save waveform image as data URI.\n         *\n         * The default format is `image/png`. Other supported types are\n         * `image/jpeg` and `image/webp`.\n         *\n         * @param {string} format='image/png'\n         * @param {number} quality=1\n         * @return {string} data URI of image\n         */\n\n    }, {\n        key: 'exportImage',\n        value: function exportImage(format, quality) {\n            if (!format) {\n                format = 'image/png';\n            }\n            if (!quality) {\n                quality = 1;\n            }\n\n            return this.drawer.getImage(format, quality);\n        }\n\n        /**\n         * Cancel any ajax request currently in progress\n         */\n\n    }, {\n        key: 'cancelAjax',\n        value: function cancelAjax() {\n            if (this.currentAjax) {\n                this.currentAjax.xhr.abort();\n                this.currentAjax = null;\n            }\n        }\n\n        /**\n         * @private\n         */\n\n    }, {\n        key: 'clearTmpEvents',\n        value: function clearTmpEvents() {\n            this.tmpEvents.forEach(function (e) {\n                return e.un();\n            });\n        }\n\n        /**\n         * Display empty waveform.\n         */\n\n    }, {\n        key: 'empty',\n        value: function empty() {\n            if (!this.backend.isPaused()) {\n                this.stop();\n                this.backend.disconnectSource();\n            }\n            this.cancelAjax();\n            this.clearTmpEvents();\n            this.drawer.progress(0);\n            this.drawer.setWidth(0);\n            this.drawer.drawPeaks({ length: this.drawer.getWidth() }, 0);\n        }\n\n        /**\n         * Remove events, elements and disconnect WebAudio nodes.\n         *\n         * @emits WaveSurfer#destroy\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.destroyAllPlugins();\n            this.fireEvent('destroy');\n            this.cancelAjax();\n            this.clearTmpEvents();\n            this.unAll();\n            if (this.params.responsive) {\n                window.removeEventListener('resize', this._onResize, true);\n            }\n            this.backend.destroy();\n            this.drawer.destroy();\n            this.isDestroyed = true;\n            this.arraybuffer = null;\n        }\n    }]);\n\n    return WaveSurfer;\n}(util.Observer);\n\nWaveSurfer.util = util;\nexports.default = WaveSurfer;\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\n\nmodule.exports = function debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// wavesurfer.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"localhost:8080/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 50fae2f3a5eb20a432c2","export { default as ajax } from './ajax';\nexport { default as getId } from './get-id';\nexport { default as max } from './max';\nexport { default as min } from './min';\nexport { default as Observer } from './observer';\nexport { default as extend } from './extend';\nexport { default as style } from './style';\nexport { default as debounce } from 'debounce';\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/index.js","import * as util from './util';\n\n// using consts to prevent someone writing the string wrong\nconst PLAYING = 'playing';\nconst PAUSED = 'paused';\nconst FINISHED = 'finished';\n\n/**\n * WebAudio backend\n *\n * @extends {Observer}\n */\nexport default class WebAudio extends util.Observer {\n    /** @private */\n    static scriptBufferSize = 256\n    /** @private */\n    audioContext = null\n    /** @private */\n    offlineAudioContext = null\n    /** @private */\n    stateBehaviors = {\n        [PLAYING]: {\n            init() {\n                this.addOnAudioProcess();\n            },\n            getPlayedPercents() {\n                const duration = this.getDuration();\n                return (this.getCurrentTime() / duration) || 0;\n            },\n            getCurrentTime() {\n                return this.startPosition + this.getPlayedTime();\n            }\n        },\n        [PAUSED]: {\n            init() {\n                this.removeOnAudioProcess();\n            },\n            getPlayedPercents() {\n                const duration = this.getDuration();\n                return (this.getCurrentTime() / duration) || 0;\n            },\n            getCurrentTime() {\n                return this.startPosition;\n            }\n        },\n        [FINISHED]: {\n            init() {\n                this.removeOnAudioProcess();\n                this.fireEvent('finish');\n            },\n            getPlayedPercents() {\n                return 1;\n            },\n            getCurrentTime() {\n                return this.getDuration();\n            }\n        }\n    }\n\n    /**\n     * Does the browser support this backend\n     *\n     * @return {boolean}\n     */\n    supportsWebAudio() {\n        return !!(window.AudioContext || window.webkitAudioContext);\n    }\n\n    /**\n     * Get the audio context used by this backend or create one\n     *\n     * @return {AudioContext}\n     */\n    getAudioContext() {\n        if (!window.WaveSurferAudioContext) {\n            window.WaveSurferAudioContext = new (\n                window.AudioContext || window.webkitAudioContext\n            );\n        }\n        return window.WaveSurferAudioContext;\n    }\n\n    /**\n     * Get the offline audio context used by this backend or create one\n     *\n     * @param {number} sampleRate\n     * @return {OfflineAudioContext}\n     */\n    getOfflineAudioContext(sampleRate) {\n        if (!window.WaveSurferOfflineAudioContext) {\n            window.WaveSurferOfflineAudioContext = new (\n                window.OfflineAudioContext || window.webkitOfflineAudioContext\n            )(1, 2, sampleRate);\n        }\n        return window.WaveSurferOfflineAudioContext;\n    }\n\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params\n     */\n    constructor(params) {\n        super();\n        /** @private */\n        this.params = params;\n        /** @private */\n        this.ac = params.audioContext || this.getAudioContext();\n        /**@private */\n        this.lastPlay = this.ac.currentTime;\n        /** @private */\n        this.startPosition = 0;\n        /** @private  */\n        this.scheduledPause = null;\n        /** @private */\n        this.states = {\n            [PLAYING]: Object.create(this.stateBehaviors[PLAYING]),\n            [PAUSED]: Object.create(this.stateBehaviors[PAUSED]),\n            [FINISHED]: Object.create(this.stateBehaviors[FINISHED])\n        };\n        /** @private */\n        this.analyser = null;\n        /** @private */\n        this.buffer = null;\n        /** @private */\n        this.filters = [];\n        /** @private */\n        this.gainNode = null;\n        /** @private */\n        this.mergedPeaks = null;\n        /** @private */\n        this.offlineAc = null;\n        /** @private */\n        this.peaks = null;\n        /** @private */\n        this.playbackRate = 1;\n        /** @private */\n        this.analyser = null;\n        /** @private */\n        this.scriptNode = null;\n        /** @private */\n        this.source = null;\n        /** @private */\n        this.splitPeaks = [];\n        /** @private */\n        this.state = null;\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.createVolumeNode();\n        this.createScriptNode();\n        this.createAnalyserNode();\n\n        this.setState(PAUSED);\n        this.setPlaybackRate(this.params.audioRate);\n        this.setLength(0);\n    }\n\n    /** @private */\n    disconnectFilters() {\n        if (this.filters) {\n            this.filters.forEach(filter => {\n                filter && filter.disconnect();\n            });\n            this.filters = null;\n            // Reconnect direct path\n            this.analyser.connect(this.gainNode);\n        }\n    }\n\n    /** @private */\n    setState(state) {\n        if (this.state !== this.states[state]) {\n            this.state = this.states[state];\n            this.state.init.call(this);\n        }\n    }\n\n    /**\n     * Unpacked `setFilters()`\n     *\n     * @param {...AudioNode} filters\n     */\n    setFilter(...filters) {\n        this.setFilters(filters);\n    }\n\n    /**\n     * Insert custom Web Audio nodes into the graph\n     *\n     * @param {AudioNode[]} filters Packed filters array\n     * @example\n     * const lowpass = wavesurfer.backend.ac.createBiquadFilter();\n     * wavesurfer.backend.setFilter(lowpass);\n     */\n    setFilters(filters) {\n        // Remove existing filters\n        this.disconnectFilters();\n\n        // Insert filters if filter array not empty\n        if (filters && filters.length) {\n            this.filters = filters;\n\n            // Disconnect direct path before inserting filters\n            this.analyser.disconnect();\n\n            // Connect each filter in turn\n            filters.reduce((prev, curr) => {\n                prev.connect(curr);\n                return curr;\n            }, this.analyser).connect(this.gainNode);\n        }\n\n    }\n\n    /** @private */\n    createScriptNode() {\n        if (this.ac.createScriptProcessor) {\n            this.scriptNode = this.ac.createScriptProcessor(this.scriptBufferSize);\n        } else {\n            this.scriptNode = this.ac.createJavaScriptNode(this.scriptBufferSize);\n        }\n\n        this.scriptNode.connect(this.ac.destination);\n    }\n\n    /** @private */\n    addOnAudioProcess() {\n        this.scriptNode.onaudioprocess = () => {\n            const time = this.getCurrentTime();\n\n            if (time >= this.getDuration()) {\n                this.setState(FINISHED);\n                this.fireEvent('pause');\n            } else if (time >= this.scheduledPause) {\n                this.pause();\n            } else if (this.state === this.states[PLAYING]) {\n                this.fireEvent('audioprocess', time);\n            }\n        };\n    }\n\n    /** @private */\n    removeOnAudioProcess() {\n        this.scriptNode.onaudioprocess = null;\n    }\n\n    /** @private */\n    createAnalyserNode() {\n        this.analyser = this.ac.createAnalyser();\n        this.analyser.connect(this.gainNode);\n    }\n\n    /**\n     * Create the gain node needed to control the playback volume.\n     *\n     * @private\n     */\n    createVolumeNode() {\n        // Create gain node using the AudioContext\n        if (this.ac.createGain) {\n            this.gainNode = this.ac.createGain();\n        } else {\n            this.gainNode = this.ac.createGainNode();\n        }\n        // Add the gain node to the graph\n        this.gainNode.connect(this.ac.destination);\n    }\n\n    /**\n     * Set the audio volume\n     *\n     * @param {number} value A floating point value between 0 and 1.\n     */\n    setVolume(value) {\n        this.gainNode.gain.value = value;\n    }\n\n    /**\n     * Get the current volume\n     *\n     * @return {number} value A floating point value between 0 and 1.\n     */\n    getVolume() {\n        return this.gainNode.gain.value;\n    }\n\n    /** @private */\n    decodeArrayBuffer(arraybuffer, callback, errback) {\n        if (!this.offlineAc) {\n            this.offlineAc = this.getOfflineAudioContext(this.ac ? this.ac.sampleRate : 44100);\n        }\n        this.offlineAc.decodeAudioData(arraybuffer, data => callback(data), errback);\n    }\n\n    /**\n     * Set pre-decoded peaks\n     *\n     * @param {Array} peaks\n     */\n    setPeaks(peaks) {\n        this.peaks = peaks;\n    }\n\n    /**\n     * Set the rendered length (different from the length of the audio).\n     *\n     * @param {number} length\n     */\n    setLength(length) {\n        // No resize, we can preserve the cached peaks.\n        if (this.mergedPeaks && length == ((2 * this.mergedPeaks.length - 1) + 2)) {\n            return;\n        }\n\n        this.splitPeaks = [];\n        this.mergedPeaks = [];\n        // Set the last element of the sparse array so the peak arrays are\n        // appropriately sized for other calculations.\n        const channels = this.buffer ? this.buffer.numberOfChannels : 1;\n        let c;\n        for (c = 0; c < channels; c++) {\n            this.splitPeaks[c] = [];\n            this.splitPeaks[c][2 * (length - 1)] = 0;\n            this.splitPeaks[c][2 * (length - 1) + 1] = 0;\n        }\n        this.mergedPeaks[2 * (length - 1)] = 0;\n        this.mergedPeaks[2 * (length - 1) + 1] = 0;\n    }\n\n    /**\n     * Compute the max and min value of the waveform when broken into <length> subranges.\n     *\n     * @param {number} length How many subranges to break the waveform into.\n     * @param {number} first First sample in the required range.\n     * @param {number} last Last sample in the required range.\n     * @return {number[]|number[][]} Array of 2*<length> peaks or array of arrays of\n     * peaks consisting of (max, min) values for each subrange.\n     */\n    getPeaks(length, first, last) {\n        if (this.peaks) { return this.peaks; }\n\n        this.setLength(length);\n\n        const sampleSize = this.buffer.length / length;\n        const sampleStep = ~~(sampleSize / 10) || 1;\n        const channels = this.buffer.numberOfChannels;\n        let c;\n\n        for (c = 0; c < channels; c++) {\n            const peaks = this.splitPeaks[c];\n            const chan = this.buffer.getChannelData(c);\n            let i;\n\n            for (i = first; i <= last; i++) {\n                const start = ~~(i * sampleSize);\n                const end = ~~(start + sampleSize);\n                let min = 0;\n                let max = 0;\n                let j;\n\n                for (j = start; j < end; j += sampleStep) {\n                    const value = chan[j];\n\n                    if (value > max) {\n                        max = value;\n                    }\n\n                    if (value < min) {\n                        min = value;\n                    }\n                }\n\n                peaks[2 * i] = max;\n                peaks[2 * i + 1] = min;\n\n                if (c == 0 || max > this.mergedPeaks[2 * i]) {\n                    this.mergedPeaks[2 * i] = max;\n                }\n\n                if (c == 0 || min < this.mergedPeaks[2 * i + 1]) {\n                    this.mergedPeaks[2 * i + 1] = min;\n                }\n            }\n        }\n\n        return this.params.splitChannels ? this.splitPeaks : this.mergedPeaks;\n    }\n\n    /**\n     * Get the position from 0 to 1\n     *\n     * @return {number}\n     */\n    getPlayedPercents() {\n        return this.state.getPlayedPercents.call(this);\n    }\n\n    /** @private */\n    disconnectSource() {\n        if (this.source) {\n            this.source.disconnect();\n        }\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     */\n    destroy() {\n        if (!this.isPaused()) {\n            this.pause();\n        }\n        this.unAll();\n        this.buffer = null;\n        this.disconnectFilters();\n        this.disconnectSource();\n        this.gainNode.disconnect();\n        this.scriptNode.disconnect();\n        this.analyser.disconnect();\n\n        // close the audioContext if closeAudioContext option is set to true\n        if (this.params.closeAudioContext) {\n            // check if browser supports AudioContext.close()\n            if (typeof this.ac.close === 'function') {\n                this.ac.close();\n            }\n            // clear the reference to the audiocontext\n            this.ac = null;\n            // clear the actual audiocontext, either passed as param or the\n            // global singleton\n            if (!this.params.audioContext) {\n                window.WaveSurferAudioContext = null;\n            } else {\n                this.params.audioContext = null;\n            }\n            // clear the offlineAudioContext\n            window.WaveSurferOfflineAudioContext = null;\n        }\n    }\n\n    /**\n     * Loaded a decoded audio buffer\n     *\n     * @param {Object} buffer\n     */\n    load(buffer) {\n        this.startPosition = 0;\n        this.lastPlay = this.ac.currentTime;\n        this.buffer = buffer;\n        this.createSource();\n    }\n\n    /** @private */\n    createSource() {\n        this.disconnectSource();\n        this.source = this.ac.createBufferSource();\n\n        //adjust for old browsers.\n        this.source.start = this.source.start || this.source.noteGrainOn;\n        this.source.stop = this.source.stop || this.source.noteOff;\n\n        this.source.playbackRate.value = this.playbackRate;\n        this.source.buffer = this.buffer;\n        this.source.connect(this.analyser);\n    }\n\n    /**\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n     *\n     * @return {boolean}\n     */\n    isPaused() {\n        return this.state !== this.states[PLAYING];\n    }\n\n    /**\n     * Used by `wavesurfer.getDuration()`\n     *\n     * @return {number}\n     */\n    getDuration() {\n        if (!this.buffer) {\n            return 0;\n        }\n        return this.buffer.duration;\n    }\n\n    /**\n     * Used by `wavesurfer.seekTo()`\n     *\n     * @param {number} start Position to start at in seconds\n     * @param {number} end Position to end at in seconds\n     * @return {{start: number, end: number}}\n     */\n    seekTo(start, end) {\n        if (!this.buffer) { return; }\n\n        this.scheduledPause = null;\n\n        if (start == null) {\n            start = this.getCurrentTime();\n            if (start >= this.getDuration()) {\n                start = 0;\n            }\n        }\n        if (end == null) {\n            end = this.getDuration();\n        }\n\n        this.startPosition = start;\n        this.lastPlay = this.ac.currentTime;\n\n        if (this.state === this.states[FINISHED]) {\n            this.setState(PAUSED);\n        }\n\n        return {\n            start: start,\n            end: end\n        };\n    }\n\n    /**\n     * Get the playback position in seconds\n     *\n     * @return {number}\n     */\n    getPlayedTime() {\n        return (this.ac.currentTime - this.lastPlay) * this.playbackRate;\n    }\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {number} start Start offset in seconds, relative to the beginning\n     * of a clip.\n     * @param {number} end When to stop relative to the beginning of a clip.\n     */\n    play(start, end) {\n        if (!this.buffer) { return; }\n\n        // need to re-create source on each playback\n        this.createSource();\n\n        const adjustedTime = this.seekTo(start, end);\n\n        start = adjustedTime.start;\n        end = adjustedTime.end;\n\n        this.scheduledPause = end;\n\n        this.source.start(0, start, end - start);\n\n        if (this.ac.state == 'suspended') {\n            this.ac.resume && this.ac.resume();\n        }\n\n        this.setState(PLAYING);\n\n        this.fireEvent('play');\n    }\n\n    /**\n     * Pauses the loaded audio.\n     */\n    pause() {\n        this.scheduledPause = null;\n\n        this.startPosition += this.getPlayedTime();\n        this.source && this.source.stop(0);\n\n        this.setState(PAUSED);\n\n        this.fireEvent('pause');\n    }\n\n    /**\n    * Returns the current time in seconds relative to the audioclip's\n    * duration.\n    *\n    * @return {number}\n    */\n    getCurrentTime() {\n        return this.state.getCurrentTime.call(this);\n    }\n\n    /**\n    * Returns the current playback rate. (0=no playback, 1=normal playback)\n    *\n    * @return {number}\n    */\n    getPlaybackRate() {\n        return this.playbackRate;\n    }\n\n    /**\n     * Set the audio source playback rate.\n     *\n     * @param {number} value\n     */\n    setPlaybackRate(value) {\n        value = value || 1;\n        if (this.isPaused()) {\n            this.playbackRate = value;\n        } else {\n            this.pause();\n            this.playbackRate = value;\n            this.play();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/webaudio.js","/**\n * @typedef {Object} ListenerDescriptor\n * @property {string} name The name of the event\n * @property {function} callback The callback\n * @property {function} un The function to call to remove the listener\n */\n\n/**\n * Observer class\n */\nexport default class Observer {\n    /**\n     * Instantiate Observer\n     */\n    constructor() {\n        /**\n         * @private\n         * @todo Initialise the handlers here already and remove the conditional\n         * assignment in `on()`\n         */\n        this.handlers = null;\n    }\n    /**\n     * Attach a handler function for an event.\n     *\n     * @param {string} event Name of the event to listen to\n     * @param {function} fn The callback to trigger when the event is fired\n     * @return {ListenerDescriptor}\n     */\n    on(event, fn) {\n        if (!this.handlers) { this.handlers = {}; }\n\n        let handlers = this.handlers[event];\n        if (!handlers) {\n            handlers = this.handlers[event] = [];\n        }\n        handlers.push(fn);\n\n        // Return an event descriptor\n        return {\n            name: event,\n            callback: fn,\n            un: (e, fn) => this.un(e, fn)\n        };\n    }\n\n    /**\n     * Remove an event handler.\n     *\n     * @param {string} event Name of the event the listener that should be\n     * removed listens to\n     * @param {function} fn The callback that should be removed\n     */\n    un(event, fn) {\n        if (!this.handlers) { return; }\n\n        const handlers = this.handlers[event];\n        let i;\n        if (handlers) {\n            if (fn) {\n                for (i = handlers.length - 1; i >= 0; i--) {\n                    if (handlers[i] == fn) {\n                        handlers.splice(i, 1);\n                    }\n                }\n            } else {\n                handlers.length = 0;\n            }\n        }\n    }\n\n    /**\n     * Remove all event handlers.\n     */\n    unAll() {\n        this.handlers = null;\n    }\n\n    /**\n     * Attach a handler to an event. The handler is executed at most once per\n     * event type.\n     *\n     * @param {string} event The event to listen to\n     * @param {function} handler The callback that is only to be called once\n     * @return {ListenerDescriptor}\n     */\n    once(event, handler) {\n        const fn = (...args) => {\n            /*  eslint-disable no-invalid-this */\n            handler.apply(this, args);\n            /*  eslint-enable no-invalid-this */\n            setTimeout(() => {\n                this.un(event, fn);\n            }, 0);\n        };\n        return this.on(event, fn);\n    }\n\n    /**\n     * Manually fire an event\n     *\n     * @param {string} event The event to fire manually\n     * @param {...any} args The arguments with which to call the listeners\n     */\n    fireEvent(event, ...args) {\n        if (!this.handlers) { return; }\n        const handlers = this.handlers[event];\n        handlers && handlers.forEach(fn => {\n            fn(...args);\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/observer.js","import Drawer from './drawer';\nimport * as util from './util';\n\n/**\n * @typedef {Object} CanvasEntry\n * @private\n * @property {HTMLElement} wave The wave node\n * @property {CanvasRenderingContext2D} waveCtx The canvas rendering context\n * @property {?HTMLElement} progress The progress wave node\n * @property {?CanvasRenderingContext2D} progressCtx The progress wave canvas\n * rendering context\n * @property {?number} start Start of the area the canvas should render, between 0 and 1\n * @property {?number} end End of the area the canvas should render, between 0 and 1\n */\n\n/**\n * MultiCanvas renderer for wavesurfer. Is currently the default and sole built\n * in renderer.\n */\nexport default class MultiCanvas extends Drawer {\n    /**\n     * @param {HTMLElement} container The container node of the wavesurfer instance\n     * @param {WavesurferParams} params The wavesurfer initialisation options\n     */\n    constructor(container, params) {\n        super(container, params);\n        /**\n         * @type {number}\n         * @private\n         */\n        this.maxCanvasWidth = params.maxCanvasWidth;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxCanvasElementWidth = Math.round(params.maxCanvasWidth / params.pixelRatio);\n\n        /**\n         * Whether or not the progress wave is renderered. If the `waveColor`\n         * and `progressColor` are the same colour it is not.\n         * @type {boolean}\n         */\n        this.hasProgressCanvas = params.waveColor != params.progressColor;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.halfPixel = 0.5 / params.pixelRatio;\n        /**\n         * @private\n         * @type {Array}\n         */\n        this.canvases = [];\n        /** @private */\n        this.progressWave = null;\n    }\n\n    /**\n     * Initialise the drawer\n     */\n    init() {\n        this.createWrapper();\n        this.createElements();\n    }\n\n    /**\n     * Create the canvas elements and style them\n     *\n     * @private\n     */\n    createElements() {\n        this.progressWave = this.wrapper.appendChild(\n            this.style(document.createElement('wave'), {\n                position: 'absolute',\n                zIndex: 2,\n                left: 0,\n                top: 0,\n                bottom: 0,\n                overflow: 'hidden',\n                width: '0',\n                display: 'none',\n                boxSizing: 'border-box',\n                borderRightStyle: 'solid',\n                borderRightWidth: this.params.cursorWidth + 'px',\n                borderRightColor: this.params.cursorColor\n            })\n        );\n\n        this.addCanvas();\n    }\n\n    /**\n     * Adjust to the updated size by adding or removing canvases\n     */\n    updateSize() {\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\n        const requiredCanvases = Math.ceil(totalWidth / this.maxCanvasElementWidth);\n\n        while (this.canvases.length < requiredCanvases) {\n            this.addCanvas();\n        }\n\n        while (this.canvases.length > requiredCanvases) {\n            this.removeCanvas();\n        }\n\n        this.canvases.forEach((entry, i) => {\n            // Add some overlap to prevent vertical white stripes, keep the width even for simplicity.\n            let canvasWidth = this.maxCanvasWidth + 2 * Math.ceil(this.params.pixelRatio / 2);\n\n            if (i == this.canvases.length - 1) {\n                canvasWidth = this.width - (this.maxCanvasWidth * (this.canvases.length - 1));\n            }\n\n            this.updateDimensions(entry, canvasWidth, this.height);\n            this.clearWaveForEntry(entry);\n        });\n    }\n\n    /**\n     * Add a canvas to the canvas list\n     *\n     * @private\n     */\n    addCanvas() {\n        const entry = {};\n        const leftOffset = this.maxCanvasElementWidth * this.canvases.length;\n\n        entry.wave = this.wrapper.appendChild(\n            this.style(document.createElement('canvas'), {\n                position: 'absolute',\n                zIndex: 1,\n                left: leftOffset + 'px',\n                top: 0,\n                bottom: 0\n            })\n        );\n        entry.waveCtx = entry.wave.getContext('2d');\n\n        if (this.hasProgressCanvas) {\n            entry.progress = this.progressWave.appendChild(\n                this.style(document.createElement('canvas'), {\n                    position: 'absolute',\n                    left: leftOffset + 'px',\n                    top: 0,\n                    bottom: 0\n                })\n            );\n            entry.progressCtx = entry.progress.getContext('2d');\n        }\n\n        this.canvases.push(entry);\n    }\n\n    /**\n     * Pop one canvas from the list\n     *\n     * @private\n     */\n    removeCanvas() {\n        const lastEntry = this.canvases.pop();\n        lastEntry.wave.parentElement.removeChild(lastEntry.wave);\n        if (this.hasProgressCanvas) {\n            lastEntry.progress.parentElement.removeChild(lastEntry.progress);\n        }\n    }\n\n    /**\n     * Update the dimensions of a canvas element\n     *\n     * @private\n     * @param {CanvasEntry} entry\n     * @param {number} width The new width of the element\n     * @param {number} height The new height of the element\n     */\n    updateDimensions(entry, width, height) {\n        const elementWidth = Math.round(width / this.params.pixelRatio);\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\n\n        // Where the canvas starts and ends in the waveform, represented as a decimal between 0 and 1.\n        entry.start = (entry.waveCtx.canvas.offsetLeft / totalWidth) || 0;\n        entry.end = entry.start + elementWidth / totalWidth;\n\n        entry.waveCtx.canvas.width = width;\n        entry.waveCtx.canvas.height = height;\n        this.style(entry.waveCtx.canvas, { width: elementWidth + 'px'});\n\n        this.style(this.progressWave, { display: 'block'});\n\n        if (this.hasProgressCanvas) {\n            entry.progressCtx.canvas.width = width;\n            entry.progressCtx.canvas.height = height;\n            this.style(entry.progressCtx.canvas, { width: elementWidth + 'px'});\n        }\n    }\n\n    /**\n     * Clear the whole waveform\n     */\n    clearWave() {\n        this.canvases.forEach(entry => this.clearWaveForEntry(entry));\n    }\n\n    /**\n     * Clear one canvas\n     *\n     * @private\n     * @param {CanvasEntry} entry\n     */\n    clearWaveForEntry(entry) {\n        entry.waveCtx.clearRect(0, 0, entry.waveCtx.canvas.width, entry.waveCtx.canvas.height);\n        if (this.hasProgressCanvas) {\n            entry.progressCtx.clearRect(0, 0, entry.progressCtx.canvas.width, entry.progressCtx.canvas.height);\n        }\n    }\n\n    /**\n     * Draw a waveform with bars\n     *\n     * @param {number[]|number[][]} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0. Must be an integer.\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawBars(peaks, channelIndex, start, end) {\n        // Split channels\n        if (peaks[0] instanceof Array) {\n            const channels = peaks;\n            if (this.params.splitChannels) {\n                this.setHeight(channels.length * this.params.height * this.params.pixelRatio);\n                channels.forEach((channelPeaks, i) => this.drawBars(channelPeaks, i, start, end));\n                return;\n            }\n            peaks = channels[0];\n        }\n\n        // Bar wave draws the bottom only as a reflection of the top,\n        // so we don't need negative values\n        const hasMinVals = [].some.call(peaks, val => val < 0);\n        // Skip every other value if there are negatives.\n        const peakIndexScale = hasMinVals ? 2 : 1;\n\n        // A half-pixel offset makes lines crisp\n        const width = this.width;\n        const height = this.params.height * this.params.pixelRatio;\n        const offsetY = height * channelIndex || 0;\n        const halfH = height / 2;\n        const length = peaks.length / peakIndexScale;\n        const bar = this.params.barWidth * this.params.pixelRatio;\n        const gap = Math.max(this.params.pixelRatio, ~~(bar / 2));\n        const step = bar + gap;\n\n        let absmax = 1;\n        if (this.params.normalize) {\n            const max = util.max(peaks);\n            const min = util.min(peaks);\n            absmax = -min > max ? -min : max;\n        }\n\n        const scale = length / width;\n        let i;\n\n        for (i = (start / scale); i < (end / scale); i += step) {\n            const peak = peaks[Math.floor(i * scale * peakIndexScale)] || 0;\n            const h = Math.round(peak / absmax * halfH);\n            this.fillRect(i + this.halfPixel, halfH - h + offsetY, bar + this.halfPixel, h * 2);\n        }\n    }\n\n    /**\n     * Draw a waveform\n     *\n     * @param {number[]|number[][]} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawWave(peaks, channelIndex, start, end) {\n        // Split channels\n        if (peaks[0] instanceof Array) {\n            const channels = peaks;\n            if (this.params.splitChannels) {\n                this.setHeight(channels.length * this.params.height * this.params.pixelRatio);\n                channels.forEach((channelPeaks, i) => this.drawWave(channelPeaks, i, start, end));\n                return;\n            }\n            peaks = channels[0];\n        }\n\n        // Support arrays without negative peaks\n        const hasMinValues = [].some.call(peaks, val => val < 0);\n        if (!hasMinValues) {\n            const reflectedPeaks = [];\n            const len = peaks.length;\n            let i;\n            for (i = 0; i < len; i++) {\n                reflectedPeaks[2 * i] = peaks[i];\n                reflectedPeaks[2 * i + 1] = -peaks[i];\n            }\n            peaks = reflectedPeaks;\n        }\n\n        // A half-pixel offset makes lines crisp\n        const height = this.params.height * this.params.pixelRatio;\n        const offsetY = height * channelIndex || 0;\n        const halfH = height / 2;\n\n        let absmax = 1;\n        if (this.params.normalize) {\n            const max = util.max(peaks);\n            const min = util.min(peaks);\n            absmax = -min > max ? -min : max;\n        }\n\n        this.drawLine(peaks, absmax, halfH, offsetY, start, end);\n\n        // Always draw a median line\n        this.fillRect(0, halfH + offsetY - this.halfPixel, this.width, this.halfPixel);\n    }\n\n    /**\n     * Tell the canvas entries to render their portion of the waveform\n     *\n     * @private\n     * @param {number[]} peaks Peak data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n    drawLine(peaks, absmax, halfH, offsetY, start, end) {\n        this.canvases.forEach(entry => {\n            this.setFillStyles(entry);\n            this.drawLineToContext(entry, entry.waveCtx, peaks, absmax, halfH, offsetY, start, end);\n            this.drawLineToContext(entry, entry.progressCtx, peaks, absmax, halfH, offsetY, start, end);\n        });\n    }\n\n    /**\n     * Render the actual waveform line on a canvas\n     *\n     * @private\n     * @param {CanvasEntry} entry\n     * @param {Canvas2DContextAttributes} ctx Essentially `entry.[wave|progress]Ctx`\n     * @param {number[]} peaks\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n    drawLineToContext(entry, ctx, peaks, absmax, halfH, offsetY, start, end) {\n        if (!ctx) { return; }\n\n        const length = peaks.length / 2;\n\n        let scale = 1;\n        if (this.params.fillParent && this.width != length) {\n            scale = this.width / length;\n        }\n\n        const first = Math.round(length * entry.start);\n        const last = Math.round(length * entry.end);\n        if (first > end || last < start) { return; }\n        const canvasStart = Math.max(first, start);\n        const canvasEnd = Math.min(last, end);\n        let i;\n        let j;\n\n        ctx.beginPath();\n        ctx.moveTo((canvasStart - first) * scale + this.halfPixel, halfH + offsetY);\n\n        for (i = canvasStart; i < canvasEnd; i++) {\n            const peak = peaks[2 * i] || 0;\n            const h = Math.round(peak / absmax * halfH);\n            ctx.lineTo((i - first) * scale + this.halfPixel, halfH - h + offsetY);\n        }\n\n        // Draw the bottom edge going backwards, to make a single\n        // closed hull to fill.\n        for (j = canvasEnd - 1; j >= canvasStart; j--) {\n            const peak = peaks[2 * j + 1] || 0;\n            const h = Math.round(peak / absmax * halfH);\n            ctx.lineTo((j - first) * scale + this.halfPixel, halfH - h + offsetY);\n        }\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    /**\n     * Draw a rectangle on the waveform\n     *\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     */\n    fillRect(x, y, width, height) {\n        const startCanvas = Math.floor(x / this.maxCanvasWidth);\n        const endCanvas = Math.min(\n          Math.ceil((x + width) / this.maxCanvasWidth) + 1,\n          this.canvases.length\n        );\n        let i;\n        for (i = startCanvas; i < endCanvas; i++) {\n            const entry = this.canvases[i];\n            const leftOffset = i * this.maxCanvasWidth;\n\n            const intersection = {\n                x1: Math.max(x, i * this.maxCanvasWidth),\n                y1: y,\n                x2: Math.min(x + width, i * this.maxCanvasWidth + entry.waveCtx.canvas.width),\n                y2: y + height\n            };\n\n            if (intersection.x1 < intersection.x2) {\n                this.setFillStyles(entry);\n\n                this.fillRectToContext(entry.waveCtx,\n                        intersection.x1 - leftOffset,\n                        intersection.y1,\n                        intersection.x2 - intersection.x1,\n                        intersection.y2 - intersection.y1);\n\n                this.fillRectToContext(entry.progressCtx,\n                        intersection.x1 - leftOffset,\n                        intersection.y1,\n                        intersection.x2 - intersection.x1,\n                        intersection.y2 - intersection.y1);\n            }\n        }\n    }\n\n    /**\n     * Draw the actual rectangle on a canvas\n     *\n     * @private\n     * @param {Canvas2DContextAttributes} ctx\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     */\n    fillRectToContext(ctx, x, y, width, height) {\n        if (!ctx) { return; }\n        ctx.fillRect(x, y, width, height);\n    }\n\n    /**\n     * Set the fill styles for a certain entry (wave and progress)\n     *\n     * @private\n     * @param {CanvasEntry} entry\n     */\n    setFillStyles(entry) {\n        entry.waveCtx.fillStyle = this.params.waveColor;\n        if (this.hasProgressCanvas) {\n            entry.progressCtx.fillStyle = this.params.progressColor;\n        }\n    }\n\n    /**\n     * Return image data of the waveform\n     *\n     * @param {string} type='image/png' An optional value of a format type.\n     * @param {number} quality=0.92 An optional value between 0 and 1.\n     * @return {string|string[]} images A data URL or an array of data URLs\n     */\n    getImage(type, quality) {\n        const images = this.canvases.map(entry => entry.wave.toDataURL(type, quality));\n        return images.length > 1 ? images : images[0];\n    }\n\n    /**\n     * Render the new progress\n     *\n     * @param {number} position X-Offset of progress position in pixels\n     */\n    updateProgress(position) {\n        this.style(this.progressWave, { width: position + 'px' });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/drawer.multicanvas.js","import WebAudio from './webaudio';\nimport * as util from './util';\n\n/**\n * MediaElement backend\n */\nexport default class MediaElement extends WebAudio {\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params\n     */\n    constructor(params) {\n        super(params);\n        /** @private */\n        this.params = params;\n\n        // Dummy media to catch errors\n        /** @private */\n        this.media = {\n            currentTime: 0,\n            duration: 0,\n            paused: true,\n            playbackRate: 1,\n            play() {},\n            pause() {}\n        };\n\n        /** @private */\n        this.mediaType = params.mediaType.toLowerCase();\n        /** @private */\n        this.elementPosition = params.elementPosition;\n        /** @private */\n        this.peaks = null;\n        /** @private */\n        this.playbackRate = 1;\n        /** @private */\n        this.buffer = null;\n        /** @private */\n        this.onPlayEnd = null;\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.setPlaybackRate(this.params.audioRate);\n        this.createTimer();\n    }\n\n    /**\n     * Create a timer to provide a more precise `audioprocess` event.\n     *\n     * @private\n     */\n    createTimer() {\n        const onAudioProcess = () => {\n            if (this.isPaused()) { return; }\n            this.fireEvent('audioprocess', this.getCurrentTime());\n\n            // Call again in the next frame\n            const requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame;\n            requestAnimationFrame(onAudioProcess);\n        };\n\n        this.on('play', onAudioProcess);\n    }\n\n    /**\n     *  Create media element with url as its source,\n     *  and append to container element.\n     *\n     *  @param {string} url Path to media file\n     *  @param {HTMLElement} container HTML element\n     *  @param {Array} peaks Array of peak data\n     *  @param {string} preload HTML 5 preload attribute value\n     */\n    load(url, container, peaks, preload) {\n        const media = document.createElement(this.mediaType);\n        media.controls = this.params.mediaControls;\n        media.autoplay = this.params.autoplay || false;\n        media.preload = preload == null ? 'auto' : preload;\n        media.src = url;\n        media.style.width = '100%';\n\n        const prevMedia = container.querySelector(this.mediaType);\n        if (prevMedia) {\n            container.removeChild(prevMedia);\n        }\n        container.appendChild(media);\n\n        this._load(media, peaks);\n    }\n\n    /**\n     *  Load existing media element.\n     *\n     *  @param {MediaElement} elt HTML5 Audio or Video element\n     *  @param {Array} peaks Array of peak data\n     */\n    loadElt(elt, peaks) {\n        elt.controls = this.params.mediaControls;\n        elt.autoplay = this.params.autoplay || false;\n\n        this._load(elt, peaks);\n    }\n\n    /**\n     *  Private method called by both load (from url)\n     *  and loadElt (existing media element).\n     *\n     *  @param  {MediaElement}  media     HTML5 Audio or Video element\n     *  @param  {Array}         peaks   array of peak data\n     *  @private\n     */\n    _load(media, peaks) {\n        // load must be called manually on iOS, otherwise peaks won't draw\n        // until a user interaction triggers load --> 'ready' event\n        if (typeof media.load == 'function') {\n            media.load();\n        }\n\n        media.addEventListener('error', () => {\n            this.fireEvent('error', 'Error loading media element');\n        });\n\n        media.addEventListener('canplay', () => {\n            this.fireEvent('canplay');\n        });\n\n        media.addEventListener('ended', () => {\n            this.fireEvent('finish');\n        });\n\n        this.media = media;\n        this.peaks = peaks;\n        this.onPlayEnd = null;\n        this.buffer = null;\n        this.setPlaybackRate(this.playbackRate);\n    }\n\n    /**\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n     *\n     * @return {boolean}\n     */\n    isPaused() {\n        return !this.media || this.media.paused;\n    }\n\n    /**\n     * Used by `wavesurfer.getDuration()`\n     *\n     * @return {number}\n     */\n    getDuration() {\n        let duration = (this.buffer || this.media).duration;\n        if (duration >= Infinity) { // streaming audio\n            duration = this.media.seekable.end(0);\n        }\n        return duration;\n    }\n\n    /**\n    * Returns the current time in seconds relative to the audioclip's\n    * duration.\n    *\n    * @return {number}\n    */\n    getCurrentTime() {\n        return this.media && this.media.currentTime;\n    }\n\n    /**\n     * Get the position from 0 to 1\n     *\n     * @return {number}\n     */\n    getPlayedPercents() {\n        return (this.getCurrentTime() / this.getDuration()) || 0;\n    }\n\n    /**\n     * Set the audio source playback rate.\n     *\n     * @param {number} value\n     */\n    setPlaybackRate(value) {\n        this.playbackRate = value || 1;\n        this.media.playbackRate = this.playbackRate;\n    }\n\n    /**\n     * Used by `wavesurfer.seekTo()`\n     *\n     * @param {number} start Position to start at in seconds\n     */\n    seekTo(start) {\n        if (start != null) {\n            this.media.currentTime = start;\n        }\n        this.clearPlayEnd();\n    }\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {Number} start Start offset in seconds, relative to the beginning\n     * of a clip.\n     * @param {Number} end When to stop relative to the beginning of a clip.\n     * @emits MediaElement#play\n     */\n    play(start, end) {\n        this.seekTo(start);\n        this.media.play();\n        end && this.setPlayEnd(end);\n        this.fireEvent('play');\n    }\n\n    /**\n     * Pauses the loaded audio.\n     *\n     * @emits MediaElement#pause\n     */\n    pause() {\n        this.media && this.media.pause();\n        this.clearPlayEnd();\n        this.fireEvent('pause');\n    }\n\n    /** @private */\n    setPlayEnd(end) {\n        this._onPlayEnd = time => {\n            if (time >= end) {\n                this.pause();\n                this.seekTo(end);\n            }\n        };\n        this.on('audioprocess', this._onPlayEnd);\n    }\n\n    /** @private */\n    clearPlayEnd() {\n        if (this._onPlayEnd) {\n            this.un('audioprocess', this._onPlayEnd);\n            this._onPlayEnd = null;\n        }\n    }\n\n    /**\n     * Compute the max and min value of the waveform when broken into\n     * <length> subranges.\n     *\n     * @param {number} length How many subranges to break the waveform into.\n     * @param {number} first First sample in the required range.\n     * @param {number} last Last sample in the required range.\n     * @return {number[]|number[][]} Array of 2*<length> peaks or array of\n     * arrays of peaks consisting of (max, min) values for each subrange.\n     */\n    getPeaks(length, first, last) {\n        if (this.buffer) {\n            return super.getPeaks(length, first, last);\n        }\n        return this.peaks || [];\n    }\n\n    /**\n     * Get the current volume\n     *\n     * @return {number} value A floating point value between 0 and 1.\n     */\n    getVolume() {\n        return this.media.volume;\n    }\n\n    /**\n     * Set the audio volume\n     *\n     * @param {number} value A floating point value between 0 and 1.\n     */\n    setVolume(value) {\n        this.media.volume = value;\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     *\n     */\n    destroy() {\n        this.pause();\n        this.unAll();\n        this.media && this.media.parentNode && this.media.parentNode.removeChild(this.media);\n        this.media = null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/mediaelement.js","/**\n * Caches the decoded peaks data to improve rendering speed for lage audio\n *\n * Is used if the option parameter `partialRender` is set to `true`\n */\nexport default class PeakCache {\n    /**\n     * Instantiate cache\n     */\n    constructor() {\n        this.clearPeakCache();\n    }\n\n    /**\n     * Empty the cache\n     */\n    clearPeakCache() {\n        /**\n         * Flat array with entries that are always in pairs to mark the\n         * beginning and end of each subrange.  This is a convenience so we can\n         * iterate over the pairs for easy set difference operations.\n         * @private\n         */\n        this.peakCacheRanges = [];\n        /**\n         * Length of the entire cachable region, used for resetting the cache\n         * when this changes (zoom events, for instance).\n         * @private\n         */\n        this.peakCacheLength = -1;\n    }\n\n    /**\n     * Add a range of peaks to the cache\n     *\n     * @param {number} length The length of the range\n     * @param {number} start The x offset of the start of the range\n     * @param {number} end The x offset of the end of the range\n     * @return {number[][]}\n     */\n    addRangeToPeakCache(length, start, end) {\n        if (length != this.peakCacheLength) {\n            this.clearPeakCache();\n            this.peakCacheLength = length;\n        }\n\n        // Return ranges that weren't in the cache before the call.\n        let uncachedRanges = [];\n        let i = 0;\n        // Skip ranges before the current start.\n        while (i < this.peakCacheRanges.length && this.peakCacheRanges[i] < start) {\n            i++;\n        }\n        // If |i| is even, |start| falls after an existing range.  Otherwise,\n        // |start| falls between an existing range, and the uncached region\n        // starts when we encounter the next node in |peakCacheRanges| or\n        // |end|, whichever comes first.\n        if (i % 2 == 0) {\n            uncachedRanges.push(start);\n        }\n        while (i < this.peakCacheRanges.length && this.peakCacheRanges[i] <= end) {\n            uncachedRanges.push(this.peakCacheRanges[i]);\n            i++;\n        }\n        // If |i| is even, |end| is after all existing ranges.\n        if (i % 2 == 0) {\n            uncachedRanges.push(end);\n        }\n\n        // Filter out the 0-length ranges.\n        uncachedRanges = uncachedRanges.filter((item, pos, arr) => {\n            if (pos == 0) {\n                return item != arr[pos + 1];\n            } else if (pos == arr.length - 1) {\n                return item != arr[pos - 1];\n            }\n            return item != arr[pos - 1] && item != arr[pos + 1];\n        });\n\n        // Merge the two ranges together, uncachedRanges will either contain\n        // wholly new points, or duplicates of points in peakCacheRanges.  If\n        // duplicates are detected, remove both and extend the range.\n        this.peakCacheRanges = this.peakCacheRanges.concat(uncachedRanges);\n        this.peakCacheRanges = this.peakCacheRanges.sort((a, b) => a - b).filter((item, pos, arr) => {\n            if (pos == 0) {\n                return item != arr[pos + 1];\n            } else if (pos == arr.length - 1) {\n                return item != arr[pos - 1];\n            }\n            return item != arr[pos - 1] && item != arr[pos + 1];\n        });\n\n        // Push the uncached ranges into an array of arrays for ease of\n        // iteration in the functions that call this.\n        const uncachedRangePairs = [];\n        for (i = 0; i < uncachedRanges.length; i += 2) {\n            uncachedRangePairs.push([uncachedRanges[i], uncachedRanges[i+1]]);\n        }\n\n        return uncachedRangePairs;\n    }\n\n    /**\n     * For testing\n     *\n     * @return {number[][]}\n     */\n    getCacheRanges() {\n        const peakCacheRangePairs = [];\n        let i;\n        for (i = 0; i < this.peakCacheRanges.length; i += 2) {\n            peakCacheRangePairs.push([this.peakCacheRanges[i], this.peakCacheRanges[i+1]]);\n        }\n        return peakCacheRangePairs;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/peakcache.js","import * as util from './util';\n/**\n * Parent class for renderers\n *\n * @extends {Observer}\n */\nexport default class Drawer extends util.Observer {\n    /**\n     * @param {HTMLElement} container The container node of the wavesurfer instance\n     * @param {WavesurferParams} params The wavesurfer initialisation options\n     */\n    constructor(container, params) {\n        super();\n        /** @private */\n        this.container = container;\n        /**\n         * @type {WavesurferParams}\n         * @private\n         */\n        this.params = params;\n        /**\n         * The width of the renderer\n         * @type {number}\n         */\n        this.width = 0;\n        /**\n         * The height of the renderer\n         * @type {number}\n         */\n        this.height = params.height * this.params.pixelRatio;\n        /** @private */\n        this.lastPos = 0;\n        /**\n         * The `<wave>` element which is added to the container\n         * @type {HTMLElement}\n         */\n        this.wrapper = null;\n    }\n\n    /**\n     * Alias of `util.style`\n     *\n     * @param {HTMLElement} el The element that the styles will be applied to\n     * @param {Object} styles The map of propName: attribute, both are used as-is\n     * @return {HTMLElement} el\n     */\n    style(el, styles) {\n        return util.style(el, styles);\n    }\n\n    /**\n     * Create the wrapper `<wave>` element, style it and set up the events for\n     * interaction\n     */\n    createWrapper() {\n        this.wrapper = this.container.appendChild(\n            document.createElement('wave')\n        );\n\n        this.style(this.wrapper, {\n            display: 'block',\n            position: 'relative',\n            userSelect: 'none',\n            webkitUserSelect: 'none',\n            height: this.params.height + 'px'\n        });\n\n        if (this.params.fillParent || this.params.scrollParent) {\n            this.style(this.wrapper, {\n                width: '100%',\n                overflowX: this.params.hideScrollbar ? 'hidden' : 'auto',\n                overflowY: 'hidden'\n            });\n        }\n\n        this.setupWrapperEvents();\n    }\n\n    /**\n     * Handle click event\n     *\n     * @param {Event} e Click event\n     * @param {?boolean} noPrevent Set to true to not call `e.preventDefault()`\n     * @return {number} Playback position from 0 to 1\n     */\n    handleEvent(e, noPrevent) {\n        !noPrevent && e.preventDefault();\n\n        const clientX = e.targetTouches ? e.targetTouches[0].clientX : e.clientX;\n        const bbox = this.wrapper.getBoundingClientRect();\n\n        const nominalWidth = this.width;\n        const parentWidth = this.getWidth();\n\n        let progress;\n\n        if (!this.params.fillParent && nominalWidth < parentWidth) {\n            progress = ((clientX - bbox.left) * this.params.pixelRatio / nominalWidth) || 0;\n\n            if (progress > 1) {\n                progress = 1;\n            }\n        } else {\n            progress = ((clientX - bbox.left + this.wrapper.scrollLeft) / this.wrapper.scrollWidth) || 0;\n        }\n\n        return progress;\n    }\n\n    /**\n     * @private\n     */\n    setupWrapperEvents() {\n        this.wrapper.addEventListener('click', e => {\n            const scrollbarHeight = this.wrapper.offsetHeight - this.wrapper.clientHeight;\n            if (scrollbarHeight != 0) {\n                // scrollbar is visible.  Check if click was on it\n                const bbox = this.wrapper.getBoundingClientRect();\n                if (e.clientY >= bbox.bottom - scrollbarHeight) {\n                    // ignore mousedown as it was on the scrollbar\n                    return;\n                }\n            }\n\n            if (this.params.interact) {\n                this.fireEvent('click', e, this.handleEvent(e));\n            }\n        });\n\n        this.wrapper.addEventListener('scroll', e => this.fireEvent('scroll', e));\n    }\n\n    /**\n     * Draw peaks on the canvas\n     *\n     * @param {number[]|number[][]} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} length The width of the area that should be drawn\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawPeaks(peaks, length, start, end) {\n        this.setWidth(length);\n\n        this.params.barWidth ?\n            this.drawBars(peaks, 0, start, end) :\n            this.drawWave(peaks, 0, start, end);\n    }\n\n    /**\n     * Scroll to the beginning\n     */\n    resetScroll() {\n        if (this.wrapper !== null) {\n            this.wrapper.scrollLeft = 0;\n        }\n    }\n\n    /**\n     * Recenter the viewport at a certain percent of the waveform\n     *\n     * @param {number} percent Value from 0 to 1 on the waveform\n     */\n    recenter(percent) {\n        const position = this.wrapper.scrollWidth * percent;\n        this.recenterOnPosition(position, true);\n    }\n\n    /**\n     * Recenter the viewport on a position, either scroll there immediately or\n     * in steps of 5 pixels\n     *\n     * @param {number} position X-offset in pixels\n     * @param {boolean} immediate Set to true to immediately scroll somewhere\n     */\n    recenterOnPosition(position, immediate) {\n        const scrollLeft = this.wrapper.scrollLeft;\n        const half = ~~(this.wrapper.clientWidth / 2);\n        const maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n        let target = position - half;\n        let offset = target - scrollLeft;\n\n        if (maxScroll == 0) {\n            // no need to continue if scrollbar is not there\n            return;\n        }\n\n        // if the cursor is currently visible...\n        if (!immediate && -half <= offset && offset < half) {\n            // we'll limit the \"re-center\" rate.\n            const rate = 5;\n            offset = Math.max(-rate, Math.min(rate, offset));\n            target = scrollLeft + offset;\n        }\n\n        // limit target to valid range (0 to maxScroll)\n        target = Math.max(0, Math.min(maxScroll, target));\n        // no use attempting to scroll if we're not moving\n        if (target != scrollLeft) {\n            this.wrapper.scrollLeft = target;\n        }\n    }\n\n    /**\n     * Get the current scroll position in pixels\n     *\n     * @return {number}\n     */\n    getScrollX() {\n        return Math.round(this.wrapper.scrollLeft * this.params.pixelRatio);\n    }\n\n    /**\n     * Get the width of the container\n     *\n     * @return {number}\n     */\n    getWidth() {\n        return Math.round(this.container.clientWidth * this.params.pixelRatio);\n    }\n\n    /**\n     * Set the width of the container\n     *\n     * @param {number} width\n     */\n    setWidth(width) {\n        if (this.width == width) {\n            return;\n        }\n\n        this.width = width;\n\n        if (this.params.fillParent || this.params.scrollParent) {\n            this.style(this.wrapper, {\n                width: ''\n            });\n        } else {\n            this.style(this.wrapper, {\n                width: ~~(this.width / this.params.pixelRatio) + 'px'\n            });\n        }\n\n        this.updateSize();\n    }\n\n    /**\n     * Set the height of the container\n     *\n     * @param {number} height\n     */\n    setHeight(height) {\n        if (height == this.height) { return; }\n        this.height = height;\n        this.style(this.wrapper, {\n            height: ~~(this.height / this.params.pixelRatio) + 'px'\n        });\n        this.updateSize();\n    }\n\n    /**\n     * Called by wavesurfer when progress should be renderered\n     *\n     * @param {number} progress From 0 to 1\n     */\n    progress(progress) {\n        const minPxDelta = 1 / this.params.pixelRatio;\n        const pos = Math.round(progress * this.width) * minPxDelta;\n\n        if (pos < this.lastPos || pos - this.lastPos >= minPxDelta) {\n            this.lastPos = pos;\n\n            if (this.params.scrollParent && this.params.autoCenter) {\n                const newPos = ~~(this.wrapper.scrollWidth * progress);\n                this.recenterOnPosition(newPos);\n            }\n\n            this.updateProgress(pos);\n        }\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     */\n    destroy() {\n        this.unAll();\n        if (this.wrapper) {\n            this.container.removeChild(this.wrapper);\n            this.wrapper = null;\n        }\n    }\n\n    /* Renderer-specific methods */\n    /**\n     * Called when the size of the container changes so the renderer can adjust\n     *\n     * @abstract\n     */\n    updateSize() {}\n\n    /**\n     * Draw a waveform with bars\n     *\n     * @abstract\n     * @param {number[]|number[][]} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawBars(peaks, channelIndex, start, end) {}\n\n    /**\n     * Draw a waveform\n     *\n     * @abstract\n     * @param {number[]|number[][]} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawWave(peaks, channelIndex, start, end) {}\n\n    /**\n     * Clear the waveform\n     *\n     * @abstract\n     */\n    clearWave() {}\n\n    /**\n     * Render the new progress\n     *\n     * @abstract\n     * @param {number} position X-Offset of progress position in pixels\n     */\n    updateProgress(position) {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/drawer.js","import Observer from './observer';\n\n/**\n * Perform an ajax request\n *\n * @param {Options} options Description\n *\n * @returns {Object} Observer instance\n */\nexport default function ajax (options) {\n    const instance = new Observer();\n    const xhr = new XMLHttpRequest();\n    let fired100 = false;\n    xhr.open(options.method || 'GET', options.url, true);\n    xhr.responseType = options.responseType || 'json';\n    xhr.addEventListener('progress', e => {\n        instance.fireEvent('progress', e);\n        if (e.lengthComputable && e.loaded == e.total) {\n            fired100 = true;\n        }\n    });\n    xhr.addEventListener('load', e => {\n        if (!fired100) {\n            instance.fireEvent('progress', e);\n        }\n        instance.fireEvent('load', e);\n        if (200 == xhr.status || 206 == xhr.status) {\n            instance.fireEvent('success', xhr.response, e);\n        } else {\n            instance.fireEvent('error', e);\n        }\n    });\n    xhr.addEventListener('error', e => instance.fireEvent('error', e));\n    xhr.send();\n    instance.xhr = xhr;\n    return instance;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/ajax.js"," /**\n  * Extend an object shallowly with others\n  *\n  * @param {Object} dest The target object\n  * @param {Object[]} sources The objects to use for extending\n  *\n  * @return {Object} Merged object\n  */\nexport default function extend (dest, ...sources) {\n    sources.forEach(source => {\n        Object.keys(source).forEach(key => {\n            dest[key] = source[key];\n        });\n    });\n    return dest;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/extend.js","/**\n * Get a random prefixed ID\n *\n * @returns {String} Random ID\n */\nexport default function getId () {\n    return 'wavesurfer_' + Math.random().toString(32).substring(2);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/get-id.js","/**\n * Get the largest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Largest number found\n */\nexport default function max (values) {\n    let largest = -Infinity;\n    Object.keys(values).forEach(i => {\n        if (values[i] > largest) {\n            largest = values[i];\n        }\n    });\n    return largest;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/max.js","/**\n * Get the smallest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number}       Smallest number found\n */\nexport default function min (values) {\n    let smallest = Number(Infinity);\n    Object.keys(values).forEach(i => {\n        if (values[i] < smallest) {\n            smallest = values[i];\n        }\n    });\n    return smallest;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/min.js","/**\n * Apply a map of styles to an element\n *\n * @param {HTMLElement} el The element that the styles will be applied to\n * @param {Object} styles The map of propName: attribute, both are used as-is\n *\n * @return {HTMLElement} el\n */\nexport default function style (el, styles) {\n    Object.keys(styles).forEach(prop => {\n        if (el.style[prop] !== styles[prop]) {\n            el.style[prop] = styles[prop];\n        }\n    });\n    return el;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/style.js","import * as util from './util';\nimport MultiCanvas from './drawer.multicanvas';\nimport WebAudio from './webaudio';\nimport MediaElement from './mediaelement';\nimport PeakCache from './peakcache';\n\n/** @external {HTMLElement} https://developer.mozilla.org/en/docs/Web/API/HTMLElement */\n/** @external {OfflineAudioContext} https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext */\n/** @external {File} https://developer.mozilla.org/en-US/docs/Web/API/File */\n/** @external {Blob} https://developer.mozilla.org/en-US/docs/Web/API/Blob */\n/** @external {CanvasRenderingContext2D} https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D */\n/** @external {MediaStreamConstraints} https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints */\n/** @external {AudioNode} https://developer.mozilla.org/de/docs/Web/API/AudioNode */\n\n/**\n * @typedef {Object} WavesurferParams\n * @property {AudioContext} audioContext=null Use your own previously\n * initialized AudioContext or leave blank.\n * @property {number} audioRate=1 Speed at which to play audio. Lower number is\n * slower.\n * @property {boolean} autoCenter=true If a scrollbar is present, center the\n * waveform around the progress\n * @property {string} backend='WebAudio' `'WebAudio'|'MediaElement'` In most cases\n * you don't have to set this manually. MediaElement is a fallback for\n * unsupported browsers.\n * @property {boolean} closeAudioContext=false Close and nullify all audio\n * contexts when the destroy method is called.\n * @property {!string|HTMLElement} container CSS selector or HTML element where\n * the waveform should be drawn. This is the only required parameter.\n * @property {string} cursorColor='#333' The fill color of the cursor indicating\n * the playhead position.\n * @property {number} cursorWidth=1 Measured in pixels.\n * @property {boolean} fillParent=true Whether to fill the entire container or\n * draw only according to `minPxPerSec`.\n * @property {boolean} forceDecode=false Force decoding of audio using web audio\n * when zooming to get a more detailed waveform.\n * @property {number} height=128 The height of the waveform. Measured in\n * pixels.\n * @property {boolean} hideScrollbar=false Whether to hide the horizontal\n * scrollbar when one would normally be shown.\n * @property {boolean} interact=true Whether the mouse interaction will be\n * enabled at initialization. You can switch this parameter at any time later\n * on.\n * @property {boolean} loopSelection=true (Use with regions plugin) Enable\n * looping of selected regions\n * @property {number} maxCanvasWidth=4000 Maximum width of a single canvas in\n * pixels, excluding a small overlap (2 * `pixelRatio`, rounded up to the next\n * even integer). If the waveform is longer than this value, additional canvases\n * will be used to render the waveform, which is useful for very large waveforms\n * that may be too wide for browsers to draw on a single canvas.\n * @property {boolean} mediaControls=false (Use with backend `MediaElement`)\n * this enables the native controls for the media element\n * @property {string} mediaType='audio' (Use with backend `MediaElement`)\n * `'audio'|'video'`\n * @property {number} minPxPerSec=20 Minimum number of pixels per second of\n * audio.\n * @property {boolean} normalize=false If true, normalize by the maximum peak\n * instead of 1.0.\n * @property {boolean} partialRender=false Use the PeakCache to improve\n * rendering speed of large waveforms\n * @property {number} pixelRatio=window.devicePixelRatio The pixel ratio used to\n * calculate display\n * @property {PluginDefinition[]} plugins=[] An array of plugin definitions to\n * register during instantiation, they will be directly initialised unless they\n * are added with the `deferInit` property set to true.\n * @property {string} progressColor='#555' The fill color of the part of the\n * waveform behind the cursor.\n * @property {Object} renderer=MultiCanvas Can be used to inject a custom\n * renderer.\n * @property {boolean|number} responsive=false If set to `true` resize the\n * waveform, when the window is resized. This is debounced with a `100ms`\n * timeout by default. If this parameter is a number it represents that timeout.\n * @property {boolean} scrollParent=false Whether to scroll the container with a\n * lengthy waveform. Otherwise the waveform is shrunk to the container width\n * (see fillParent).\n * @property {number} skipLength=2 Number of seconds to skip with the\n * skipForward() and skipBackward() methods.\n * @property {boolean} splitChannels=false Render with seperate waveforms for\n * the channels of the audio\n * @property {string} waveColor='#999' The fill color of the waveform after the\n * cursor.\n */\n\n/**\n * @typedef {Object} PluginDefinition\n * @desc The Object used to describe a plugin\n * @example wavesurfer.addPlugin(pluginDefinition);\n * @property {string} name The name of the plugin, the plugin instance will be\n * added as a property to the wavesurfer instance under this name\n * @property {?Object} staticProps The properties that should be added to the\n * wavesurfer instance as static properties\n * @property {?boolean} deferInit Don't initialise plugin\n * automatically\n * @property {Object} params={} The plugin parameters, they are the first parameter\n * passed to the plugin class constructor function\n * @property {PluginClass} instance The plugin instance factory, is called with\n * the dependency specified in extends. Returns the plugin class.\n */\n\n/**\n * @interface PluginClass\n *\n * @desc This is the interface which is implemented by all plugin classes. Note\n * that this only turns into an observer after being passed through\n * `wavesurfer.addPlugin`.\n *\n * @extends {Observer}\n */\nclass PluginClass {\n    /**\n     * Plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * @param  {Object} params={} The plugin params (specific to the plugin)\n     * @return {PluginDefinition} an object representing the plugin\n     */\n    create(params) {}\n    /**\n     * Construct the plugin\n     *\n     * @param {Object} ws The wavesurfer instance\n     * @param {Object} params={} The plugin params (specific to the plugin)\n     */\n    constructor(ws, params) {}\n    /**\n     * Initialise the plugin\n     *\n     * Start doing something. This is called by\n     * `wavesurfer.initPlugin(pluginName)`\n     */\n    init() {}\n    /**\n     * Destroy the plugin instance\n     *\n     * Stop doing something. This is called by\n     * `wavesurfer.destroyPlugin(pluginName)`\n     */\n    destroy() {}\n}\n\n/**\n * WaveSurfer core library class\n *\n * @extends {Observer}\n * @example\n * const params = {\n *   container: '#waveform',\n *   waveColor: 'violet',\n *   progressColor: 'purple'\n * };\n *\n * // initialise like this\n * const wavesurfer = WaveSurfer.create(params);\n *\n * // or like this ...\n * const wavesurfer = new WaveSurfer(params);\n * wavesurfer.init();\n *\n * // load audio file\n * wavesurfer.load('example/media/demo.wav');\n */\nexport default class WaveSurfer extends util.Observer {\n    /** @private */\n    defaultParams = {\n        audioContext  : null,\n        audioRate     : 1,\n        autoCenter    : true,\n        backend       : 'WebAudio',\n        container     : null,\n        cursorColor   : '#333',\n        cursorWidth   : 1,\n        dragSelection : true,\n        fillParent    : true,\n        forceDecode   : true,\n        height        : 128,\n        hideScrollbar : false,\n        interact      : true,\n        loopSelection : true,\n        maxCanvasWidth: 4000,\n        mediaContainer: null,\n        mediaControls : false,\n        mediaType     : 'audio',\n        minPxPerSec   : 20,\n        normalize     : false,\n        partialRender : false,\n        pixelRatio    : window.devicePixelRatio || screen.deviceXDPI / screen.logicalXDPI,\n        plugins       : [],\n        progressColor : '#555',\n        renderer      : MultiCanvas,\n        responsive    : false,\n        scrollParent  : false,\n        skipLength    : 2,\n        splitChannels : false,\n        waveColor     : '#999'\n    }\n\n    /** @private */\n    backends = {\n        MediaElement,\n        WebAudio\n    }\n\n    /**\n     * Instantiate this class, call its `init` function and returns it\n     *\n     * @param {WavesurferParams} params\n     * @return {Object} WaveSurfer instance\n     * @example const wavesurfer = WaveSurfer.create(params);\n     */\n    static create(params) {\n        const wavesurfer = new WaveSurfer(params);\n        return wavesurfer.init();\n    }\n\n    /**\n     * Functions in the `util` property are available as a prototype property to\n     * all instances\n     *\n     * @type {Object}\n     * @example\n     * const wavesurfer = WaveSurfer.create(params);\n     * wavesurfer.util.style(myElement, { background: 'blue' });\n     */\n    util = util\n\n    /**\n     * Functions in the `util` property are available as a static property of the\n     * WaveSurfer class\n     *\n     * @type {Object}\n     * @example\n     * WaveSurfer.util.style(myElement, { background: 'blue' });\n     */\n    static util = util\n\n    /**\n     * Initialise wavesurfer instance\n     *\n     * @param {WavesurferParams} params Instantiation options for wavesurfer\n     * @example\n     * const wavesurfer = new WaveSurfer(params);\n     * @returns {this}\n     */\n    constructor(params) {\n        super();\n        /**\n         * Extract relevant parameters (or defaults)\n         * @private\n         */\n        this.params = util.extend({}, this.defaultParams, params);\n\n        /** @private */\n        this.container = 'string' == typeof params.container ?\n            document.querySelector(this.params.container) :\n            this.params.container;\n\n        if (!this.container) {\n            throw new Error('Container element not found');\n        }\n\n        if (this.params.mediaContainer == null) {\n            /** @private */\n            this.mediaContainer = this.container;\n        } else if (typeof this.params.mediaContainer == 'string') {\n            /** @private */\n            this.mediaContainer = document.querySelector(this.params.mediaContainer);\n        } else {\n            /** @private */\n            this.mediaContainer = this.params.mediaContainer;\n        }\n\n        if (!this.mediaContainer) {\n            throw new Error('Media Container element not found');\n        }\n\n        if (this.params.maxCanvasWidth <= 1) {\n            throw new Error('maxCanvasWidth must be greater than 1');\n        } else if (this.params.maxCanvasWidth % 2 == 1) {\n            throw new Error('maxCanvasWidth must be an even number');\n        }\n\n        /**\n         * @private Used to save the current volume when muting so we can\n         * restore once unmuted\n         * @type {number}\n         */\n        this.savedVolume = 0;\n\n        /**\n         * @private The current muted state\n         * @type {boolean}\n         */\n        this.isMuted = false;\n\n        /**\n         * @private Will hold a list of event descriptors that need to be\n         * cancelled on subsequent loads of audio\n         * @type {Object[]}\n         */\n        this.tmpEvents = [];\n\n        /**\n         * @private Holds any running audio downloads\n         * @type {Observer}\n         */\n        this.currentAjax = null;\n        /** @private */\n        this.arraybuffer = null;\n        /** @private */\n        this.drawer = null;\n        /** @private */\n        this.backend = null;\n        /** @private */\n        this.peakCache = null;\n\n        // cache constructor objects\n        if (typeof this.params.renderer !== 'function') {\n            throw new Error('Renderer parameter is invalid');\n        }\n        /**\n         * @private The uninitialised Drawer class\n         */\n        this.Drawer = this.params.renderer;\n        /**\n         * @private The uninitialised Backend class\n         */\n        this.Backend = this.backends[this.params.backend];\n\n        /**\n         * @private map of plugin names that are currently initialised\n         */\n        this.initialisedPluginList = {};\n        /** @private */\n        this.isDestroyed = false;\n        /** @private */\n        this.isReady = false;\n\n        // responsive debounced event listener. If this.params.responsive is not\n        // set, this is never called. Use 100ms or this.params.responsive as\n        // timeout for the debounce function.\n        let prevWidth = 0;\n        this._onResize = util.debounce(() => {\n            if (prevWidth != this.drawer.wrapper.clientWidth) {\n                prevWidth = this.drawer.wrapper.clientWidth;\n                this.empty();\n                this.drawBuffer();\n            }\n        }, typeof this.params.responsive === 'number' ? this.params.responsive : 100);\n\n        return this;\n    }\n\n    /**\n     * Initialise the wave\n     *\n     * @example\n     * var wavesurfer = new WaveSurfer(params);\n     * wavesurfer.init();\n     * @return {this}\n     */\n    init() {\n        this.registerPlugins(this.params.plugins);\n        this.createDrawer();\n        this.createBackend();\n        this.createPeakCache();\n        return this;\n    }\n\n    /**\n     * Add and initialise array of plugins (if `plugin.deferInit` is falsey),\n     * this function is called in the init function of wavesurfer\n     *\n     * @param {PluginDefinition[]} plugins An array of plugin definitions\n     * @emits {WaveSurfer#plugins-registered} Called with the array of plugin definitions\n     * @return {this}\n     */\n    registerPlugins(plugins) {\n        // first instantiate all the plugins\n        plugins.forEach(plugin => this.addPlugin(plugin));\n\n        // now run the init functions\n        plugins.forEach(plugin => {\n            // call init function of the plugin if deferInit is falsey\n            // in that case you would manually use initPlugins()\n            if (!plugin.deferInit) {\n                this.initPlugin(plugin.name);\n            }\n        });\n        this.fireEvent('plugins-registered', plugins);\n        return this;\n    }\n\n    /**\n     * Add a plugin object to wavesurfer\n     *\n     * @param {PluginDefinition} plugin A plugin definition\n     * @emits {WaveSurfer#plugin-added} Called with the name of the plugin that was added\n     * @example wavesurfer.addPlugin(WaveSurfer.minimap());\n     * @return {this}\n     */\n    addPlugin(plugin) {\n        if (!plugin.name) {\n            throw new Error('Plugin does not have a name!');\n        }\n        if (!plugin.instance) {\n            throw new Error(`Plugin ${plugin.name} does not have an instance property!`);\n        }\n\n        // staticProps properties are applied to wavesurfer instance\n        if (plugin.staticProps) {\n            Object.keys(plugin.staticProps).forEach(pluginStaticProp => {\n                /**\n                 * Properties defined in a plugin definition's `staticProps` property are added as\n                 * staticProps properties of the WaveSurfer instance\n                 */\n                this[pluginStaticProp] = plugin.staticProps[pluginStaticProp];\n            });\n        }\n\n        const Instance = plugin.instance;\n\n        // turn the plugin instance into an observer\n        const observerPrototypeKeys = Object.getOwnPropertyNames(util.Observer.prototype);\n        observerPrototypeKeys.forEach(key => {\n            Instance.prototype[key] = util.Observer.prototype[key];\n        });\n\n        /**\n         * Instantiated plugin classes are added as a property of the wavesurfer\n         * instance\n         * @type {Object}\n         */\n        this[plugin.name] = new Instance(plugin.params || {}, this);\n        this.fireEvent('plugin-added', plugin.name);\n        return this;\n    }\n\n    /**\n     * Initialise a plugin\n     *\n     * @param {string} name A plugin name\n     * @emits WaveSurfer#plugin-initialised\n     * @example wavesurfer.initPlugin('minimap');\n     * @return {this}\n     */\n    initPlugin(name) {\n        if (!this[name]) {\n            throw new Error(`Plugin ${name} has not been added yet!`);\n        }\n        if (this.initialisedPluginList[name]) {\n            // destroy any already initialised plugins\n            this.destroyPlugin(name);\n        }\n        this[name].init();\n        this.initialisedPluginList[name] = true;\n        this.fireEvent('plugin-initialised', name);\n        return this;\n    }\n\n    /**\n     * Destroy a plugin\n     *\n     * @param {string} name A plugin name\n     * @emits WaveSurfer#plugin-destroyed\n     * @example wavesurfer.destroyPlugin('minimap');\n     * @returns {this}\n     */\n    destroyPlugin(name) {\n        if (!this[name]) {\n            throw new Error(`Plugin ${name} has not been added yet and cannot be destroyed!`);\n        }\n        if (!this.initialisedPluginList[name]) {\n            throw new Error(`Plugin ${name} is not active and cannot be destroyed!`);\n        }\n        if (typeof this[name].destroy !== 'function') {\n            throw new Error(`Plugin ${name} does not have a destroy function!`);\n        }\n\n        this[name].destroy();\n        delete this.initialisedPluginList[name];\n        this.fireEvent('plugin-destroyed', name);\n        return this;\n    }\n\n    /**\n     * Destroy all initialised plugins. Convenience function to use when\n     * wavesurfer is removed\n     *\n     * @private\n     */\n    destroyAllPlugins() {\n        Object.keys(this.initialisedPluginList).forEach(name => this.destroyPlugin(name));\n    }\n\n    /**\n     * Create the drawer and draw the waveform\n     *\n     * @private\n     * @emits WaveSurfer#drawer-created\n     */\n    createDrawer() {\n        this.drawer = new this.Drawer(this.container, this.params);\n        this.drawer.init();\n        this.fireEvent('drawer-created', this.drawer);\n\n        if (this.params.responsive) {\n            window.addEventListener('resize', this._onResize, true);\n        }\n\n        this.drawer.on('redraw', () => {\n            this.drawBuffer();\n            this.drawer.progress(this.backend.getPlayedPercents());\n        });\n\n        // Click-to-seek\n        this.drawer.on('click', (e, progress) => {\n            setTimeout(() => this.seekTo(progress), 0);\n        });\n\n        // Relay the scroll event from the drawer\n        this.drawer.on('scroll', e => {\n            if (this.params.partialRender) {\n                this.drawBuffer();\n            }\n            this.fireEvent('scroll', e);\n        });\n    }\n\n    /**\n     * Create the backend\n     *\n     * @private\n     * @emits WaveSurfer#backend-created\n     */\n    createBackend() {\n        if (this.backend) {\n            this.backend.destroy();\n        }\n\n        // Back compat\n        if (this.params.backend == 'AudioElement') {\n            this.params.backend = 'MediaElement';\n        }\n\n        if (this.params.backend == 'WebAudio' && !this.Backend.prototype.supportsWebAudio.call(null)) {\n            this.params.backend = 'MediaElement';\n        }\n\n        this.backend = new this.Backend(this.params);\n        this.backend.init();\n        this.fireEvent('backend-created', this.backend);\n\n        this.backend.on('finish', () => this.fireEvent('finish'));\n        this.backend.on('play', () => this.fireEvent('play'));\n        this.backend.on('pause', () => this.fireEvent('pause'));\n\n        this.backend.on('audioprocess', time => {\n            this.drawer.progress(this.backend.getPlayedPercents());\n            this.fireEvent('audioprocess', time);\n        });\n    }\n\n    /**\n     * Create the peak cache\n     *\n     * @private\n     */\n    createPeakCache() {\n        if (this.params.partialRender) {\n            this.peakCache = new PeakCache();\n        }\n    }\n\n    /**\n     * Get the duration of the audio clip\n     *\n     * @example const duration = wavesurfer.getDuration();\n     * @return {number} Duration in seconds\n     */\n    getDuration() {\n        return this.backend.getDuration();\n    }\n\n    /**\n     * Get the current playback position\n     *\n     * @example const currentTime = wavesurfer.getCurrentTime();\n     * @return {number} Playback position in seconds\n     */\n    getCurrentTime() {\n        return this.backend.getCurrentTime();\n    }\n\n    /**\n     * Starts playback from the current position. Optional start and end\n     * measured in seconds can be used to set the range of audio to play.\n     *\n     * @param {?number} start Position to start at\n     * @param {?number} end Position to end at\n     * @emits WaveSurfer#interaction\n     * @example\n     * // play from second 1 to 5\n     * wavesurfer.play(1, 5);\n     */\n    play(start, end) {\n        this.fireEvent('interaction', () => this.play(start, end));\n        this.backend.play(start, end);\n    }\n\n    /**\n     * Stops playback\n     *\n     * @example wavesurfer.pause();\n     */\n    pause() {\n        this.backend.isPaused() || this.backend.pause();\n    }\n\n    /**\n     * Toggle playback\n     *\n     * @example wavesurfer.playPause();\n     */\n    playPause() {\n        this.backend.isPaused() ? this.play() : this.pause();\n    }\n\n    /**\n     * Get the current playback state\n     *\n     * @example const isPlaying = wavesurfer.isPlaying();\n     * @return {boolean} False if paused, true if playing\n     */\n    isPlaying() {\n        return !this.backend.isPaused();\n    }\n\n    /**\n     * Skip backward\n     *\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n     * is used\n     * @example wavesurfer.skipBackward();\n     */\n    skipBackward(seconds) {\n        this.skip(-seconds || -this.params.skipLength);\n    }\n\n    /**\n     * Skip forward\n     *\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n     * is used\n     * @example wavesurfer.skipForward();\n     */\n    skipForward(seconds) {\n        this.skip(seconds || this.params.skipLength);\n    }\n\n    /**\n     * Skip a number of seconds from the current position (use a negative value\n     * to go backwards).\n     *\n     * @param {number} offset Amount to skip back or forwards\n     * @example\n     * // go back 2 seconds\n     * wavesurfer.skip(-2);\n     */\n    skip(offset) {\n        const duration = this.getDuration() || 1;\n        let position = this.getCurrentTime() || 0;\n        position = Math.max(0, Math.min(duration, position + (offset || 0)));\n        this.seekAndCenter(position / duration);\n    }\n\n    /**\n     * Seeks to a position and centers the view\n     *\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\n     * @example\n     * // seek and go to the middle of the audio\n     * wavesurfer.seekTo(0.5);\n     */\n    seekAndCenter(progress) {\n        this.seekTo(progress);\n        this.drawer.recenter(progress);\n    }\n\n    /**\n     * Seeks to a position\n     *\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\n     * @emits WaveSurfer#interaction\n     * @emits WaveSurfer#seek\n     * @example\n     * // seek to the middle of the audio\n     * wavesurfer.seekTo(0.5);\n     */\n    seekTo(progress) {\n        this.fireEvent('interaction', () => this.seekTo(progress));\n\n        const paused = this.backend.isPaused();\n        // avoid draw wrong position while playing backward seeking\n        if (!paused) {\n            this.backend.pause();\n        }\n        // avoid small scrolls while paused seeking\n        const oldScrollParent = this.params.scrollParent;\n        this.params.scrollParent = false;\n        this.backend.seekTo(progress * this.getDuration());\n        this.drawer.progress(this.backend.getPlayedPercents());\n\n        if (!paused) {\n            this.backend.play();\n        }\n        this.params.scrollParent = oldScrollParent;\n        this.fireEvent('seek', progress);\n    }\n\n    /**\n     * Stops and goes to the beginning.\n     *\n     * @example wavesurfer.stop();\n     */\n    stop() {\n        this.pause();\n        this.seekTo(0);\n        this.drawer.progress(0);\n    }\n\n    /**\n     * Set the playback volume.\n     *\n     * @param {number} newVolume A value between 0 and 1, 0 being no\n     * volume and 1 being full volume.\n     */\n    setVolume(newVolume) {\n        this.backend.setVolume(newVolume);\n    }\n\n    /**\n     * Get the playback volume.\n     *\n     * @return {number} A value between 0 and 1, 0 being no\n     * volume and 1 being full volume.\n     */\n    getVolume () {\n        return this.backend.getVolume();\n    }\n\n    /**\n     * Set the playback rate.\n     *\n     * @param {number} rate A positive number. E.g. 0.5 means half the normal\n     * speed, 2 means double speed and so on.\n     * @example wavesurfer.setPlaybackRate(2);\n     */\n    setPlaybackRate(rate) {\n        this.backend.setPlaybackRate(rate);\n    }\n\n    /**\n     * Get the playback rate.\n     *\n     * @return {number}\n     */\n    getPlaybackRate() {\n        return this.backend.getPlaybackRate();\n    }\n\n    /**\n     * Toggle the volume on and off. It not currenly muted it will save the\n     * current volume value and turn the volume off. If currently muted then it\n     * will restore the volume to the saved value, and then rest the saved\n     * value.\n     *\n     * @example wavesurfer.toggleMute();\n     */\n    toggleMute() {\n        this.setMute(!this.isMuted);\n    }\n\n    /**\n     * Enable or disable muted audio\n     *\n     * @param {boolean} mute\n     * @example\n     * // unmute\n     * wavesurfer.setMute(false);\n     */\n    setMute(mute) {\n        // ignore all muting requests if the audio is already in that state\n        if (mute === this.isMuted) {\n            return;\n        }\n\n        if (mute) {\n            // If currently not muted then save current volume,\n            // turn off the volume and update the mute properties\n            this.savedVolume = this.backend.getVolume();\n            this.backend.setVolume(0);\n            this.isMuted = true;\n        } else {\n            // If currently muted then restore to the saved volume\n            // and update the mute properties\n            this.backend.setVolume(this.savedVolume);\n            this.isMuted = false;\n        }\n    }\n\n    /**\n     * Get the current mute status.\n     *\n     * @example const isMuted = wavesurfer.getMute();\n     * @return {boolean}\n     */\n    getMute() {\n        return this.isMuted;\n    }\n\n    /**\n     * Toggles `scrollParent` and redraws\n     *\n     * @example wavesurfer.toggleScroll();\n     */\n    toggleScroll() {\n        this.params.scrollParent = !this.params.scrollParent;\n        this.drawBuffer();\n    }\n\n    /**\n     * Toggle mouse interaction\n     *\n     * @example wavesurfer.toggleInteraction();\n     */\n    toggleInteraction() {\n        this.params.interact = !this.params.interact;\n    }\n\n    /**\n     * Get the correct peaks for current wave viewport and render wave\n     *\n     * @private\n     * @emits WaveSurfer#redraw\n     */\n    drawBuffer() {\n        const nominalWidth = Math.round(\n            this.getDuration() * this.params.minPxPerSec * this.params.pixelRatio\n        );\n        const parentWidth = this.drawer.getWidth();\n        let width = nominalWidth;\n        let start = this.drawer.getScrollX();\n        let end = Math.min(start + parentWidth, width);\n\n        // Fill container\n        if (this.params.fillParent && (!this.params.scrollParent || nominalWidth < parentWidth)) {\n            width = parentWidth;\n            start = 0;\n            end = width;\n        }\n\n        let peaks;\n        if (this.params.partialRender) {\n            const newRanges = this.peakCache.addRangeToPeakCache(width, start, end);\n            let i;\n            for (i = 0; i < newRanges.length; i++) {\n                peaks = this.backend.getPeaks(width, newRanges[i][0], newRanges[i][1]);\n                this.drawer.drawPeaks(peaks, width, newRanges[i][0], newRanges[i][1]);\n            }\n        } else {\n            start = 0;\n            end = width;\n            peaks = this.backend.getPeaks(width, start, end);\n            this.drawer.drawPeaks(peaks, width, start, end);\n        }\n        this.fireEvent('redraw', peaks, width);\n    }\n\n    /**\n     * Horizontally zooms the waveform in and out. It also changes the parameter\n     * `minPxPerSec` and enables the `scrollParent` option.\n     *\n     * @param {number} pxPerSec Number of horizontal pixels per second of audio\n     * @emits WaveSurfer#zoom\n     * @example wavesurfer.zoom(20);\n     */\n    zoom(pxPerSec) {\n        this.params.minPxPerSec = pxPerSec;\n\n        this.params.scrollParent = true;\n\n        this.drawBuffer();\n        this.drawer.progress(this.backend.getPlayedPercents());\n\n        this.drawer.recenter(\n            this.getCurrentTime() / this.getDuration()\n        );\n        this.fireEvent('zoom', pxPerSec);\n    }\n\n    /**\n     * Decode buffer and load\n     *\n     * @private\n     * @param {ArrayBuffer} arraybuffer\n     */\n    loadArrayBuffer(arraybuffer) {\n        this.decodeArrayBuffer(arraybuffer, data => {\n            if (!this.isDestroyed) {\n                this.loadDecodedBuffer(data);\n            }\n        });\n    }\n\n    /**\n     * Directly load an externally decoded AudioBuffer\n     *\n     * @private\n     * @param {AudioBuffer} buffer\n     * @emits WaveSurfer#ready\n     */\n    loadDecodedBuffer(buffer) {\n        this.backend.load(buffer);\n        this.drawBuffer();\n        this.fireEvent('ready');\n        this.isReady = true;\n    }\n\n    /**\n     * Loads audio data from a Blob or File object\n     *\n     * @param {Blob|File} blob Audio data\n     * @example\n     */\n    loadBlob(blob) {\n        // Create file reader\n        const reader = new FileReader();\n        reader.addEventListener('progress', e => this.onProgress(e));\n        reader.addEventListener('load', e => this.loadArrayBuffer(e.target.result));\n        reader.addEventListener('error', () => this.fireEvent('error', 'Error reading file'));\n        reader.readAsArrayBuffer(blob);\n        this.empty();\n    }\n\n    /**\n     * Loads audio and re-renders the waveform.\n     *\n     * @param {string} url The url of the audio file\n     * @param {?number[]|number[][]} peaks Wavesurfer does not have to decode the audio to\n     * render the waveform if this is specified\n     * @param {?string} preload (Use with backend `MediaElement`)\n     * `'none'|'metadata'|'auto'` Preload attribute for the media element\n     * @example\n     * // using ajax or media element to load (depending on backend)\n     * wavesurfer.load('http://example.com/demo.wav');\n     *\n     * // setting preload attribute with media element backend and supplying\n     * peaks wavesurfer.load(\n     *   'http://example.com/demo.wav',\n     *   [0.0218, 0.0183, 0.0165, 0.0198, 0.2137, 0.2888],\n     *   true,\n     * );\n     */\n    load(url, peaks, preload) {\n        this.empty();\n\n        switch (this.params.backend) {\n            case 'WebAudio': return this.loadBuffer(url, peaks);\n            case 'MediaElement': return this.loadMediaElement(url, peaks, preload);\n        }\n    }\n\n    /**\n     * Loads audio using Web Audio buffer backend.\n     *\n     * @private\n     * @param {string} url\n     * @param {?number[]|number[][]} peaks\n     */\n    loadBuffer(url, peaks) {\n        const load = action => {\n            if (action) {\n                this.tmpEvents.push(this.once('ready', action));\n            }\n            return this.getArrayBuffer(url, (data) => this.loadArrayBuffer(data));\n        };\n\n        if (peaks) {\n            this.backend.setPeaks(peaks);\n            this.drawBuffer();\n            this.tmpEvents.push(this.once('interaction', load));\n        } else {\n            return load();\n        }\n    }\n\n    /**\n     * Either create a media element, or load an existing media element.\n     *\n     * @private\n     * @param {string|HTMLElement} urlOrElt Either a path to a media file, or an\n     * existing HTML5 Audio/Video Element\n     * @param {number[]|number[][]} peaks Array of peaks. Required to bypass web audio\n     * dependency\n     * @param {?boolean} preload Set to true if the preload attribute of the\n     * audio element should be enabled\n     */\n    loadMediaElement(urlOrElt, peaks, preload) {\n        let url = urlOrElt;\n\n        if (typeof urlOrElt === 'string') {\n            this.backend.load(url, this.mediaContainer, peaks, preload);\n        } else {\n            const elt = urlOrElt;\n            this.backend.loadElt(elt, peaks);\n\n            // If peaks are not provided,\n            // url = element.src so we can get peaks with web audio\n            url = elt.src;\n        }\n\n        this.tmpEvents.push(\n            this.backend.once('canplay', () => {\n                this.drawBuffer();\n                this.fireEvent('ready');\n            }),\n            this.backend.once('error', err => this.fireEvent('error', err))\n        );\n\n        // If no pre-decoded peaks provided or pre-decoded peaks are\n        // provided with forceDecode flag, attempt to download the\n        // audio file and decode it with Web Audio.\n        if (peaks) {\n            this.backend.setPeaks(peaks);\n        }\n\n        if ((!peaks || this.params.forceDecode) && this.backend.supportsWebAudio()) {\n            this.getArrayBuffer(url, arraybuffer => {\n                this.decodeArrayBuffer(arraybuffer, buffer => {\n                    this.backend.buffer = buffer;\n                    this.backend.setPeaks(null);\n                    this.drawBuffer();\n                    this.fireEvent('waveform-ready');\n                });\n            });\n        }\n    }\n\n    /**\n     * Decode an array buffer and pass data to a callback\n     *\n     * @private\n     * @param {Object} arraybuffer\n     * @param {function} callback\n     */\n    decodeArrayBuffer(arraybuffer, callback) {\n        this.arraybuffer = arraybuffer;\n\n        this.backend.decodeArrayBuffer(\n            arraybuffer,\n            data => {\n                // Only use the decoded data if we haven't been destroyed or\n                // another decode started in the meantime\n                if (!this.isDestroyed && this.arraybuffer == arraybuffer) {\n                    callback(data);\n                    this.arraybuffer = null;\n                }\n            },\n            () => this.fireEvent('error', 'Error decoding audiobuffer')\n        );\n    }\n\n    /**\n     * Load an array buffer by ajax and pass to a callback\n     *\n     * @param {string} url\n     * @param {function} callback\n     * @private\n     */\n    getArrayBuffer(url, callback) {\n        const ajax = util.ajax({\n            url: url,\n            responseType: 'arraybuffer'\n        });\n\n        this.currentAjax = ajax;\n\n        this.tmpEvents.push(\n            ajax.on('progress', e => {\n                this.onProgress(e);\n            }),\n            ajax.on('success', (data, e) => {\n                callback(data);\n                this.currentAjax = null;\n            }),\n            ajax.on('error', e => {\n                this.fireEvent('error', 'XHR error: ' + e.target.statusText);\n                this.currentAjax = null;\n            })\n        );\n\n        return ajax;\n    }\n\n    /**\n     * Called while the audio file is loading\n     *\n     * @private\n     * @param {Event} e\n     * @emits WaveSurfer#loading\n     */\n    onProgress(e) {\n        let percentComplete;\n        if (e.lengthComputable) {\n            percentComplete = e.loaded / e.total;\n        } else {\n            // Approximate progress with an asymptotic\n            // function, and assume downloads in the 1-3 MB range.\n            percentComplete = e.loaded / (e.loaded + 1000000);\n        }\n        this.fireEvent('loading', Math.round(percentComplete * 100), e.target);\n    }\n\n    /**\n     * Exports PCM data into a JSON array and opens in a new window.\n     *\n     * @param {number} length=1024 The scale in which to export the peaks. (Integer)\n     * @param {number} accuracy=10000 (Integer)\n     * @param {?boolean} noWindow Set to true to disable opening a new\n     * window with the JSON\n     * @todo Update exportPCM to work with new getPeaks signature\n     * @return {JSON} JSON of peaks\n     */\n    exportPCM(length, accuracy, noWindow) {\n        length = length || 1024;\n        accuracy = accuracy || 10000;\n        noWindow = noWindow || false;\n        const peaks = this.backend.getPeaks(length, accuracy);\n        const arr = [].map.call(peaks, val => Math.round(val * accuracy) / accuracy);\n        const json = JSON.stringify(arr);\n        if (!noWindow) {\n            window.open('data:application/json;charset=utf-8,' +\n                encodeURIComponent(json));\n        }\n        return json;\n    }\n\n    /**\n     * Save waveform image as data URI.\n     *\n     * The default format is `image/png`. Other supported types are\n     * `image/jpeg` and `image/webp`.\n     *\n     * @param {string} format='image/png'\n     * @param {number} quality=1\n     * @return {string} data URI of image\n     */\n    exportImage(format, quality) {\n        if (!format) {\n            format = 'image/png';\n        }\n        if (!quality) {\n            quality = 1;\n        }\n\n        return this.drawer.getImage(format, quality);\n    }\n\n    /**\n     * Cancel any ajax request currently in progress\n     */\n    cancelAjax() {\n        if (this.currentAjax) {\n            this.currentAjax.xhr.abort();\n            this.currentAjax = null;\n        }\n    }\n\n    /**\n     * @private\n     */\n    clearTmpEvents() {\n        this.tmpEvents.forEach(e => e.un());\n    }\n\n    /**\n     * Display empty waveform.\n     */\n    empty() {\n        if (!this.backend.isPaused()) {\n            this.stop();\n            this.backend.disconnectSource();\n        }\n        this.cancelAjax();\n        this.clearTmpEvents();\n        this.drawer.progress(0);\n        this.drawer.setWidth(0);\n        this.drawer.drawPeaks({ length: this.drawer.getWidth() }, 0);\n    }\n\n    /**\n     * Remove events, elements and disconnect WebAudio nodes.\n     *\n     * @emits WaveSurfer#destroy\n     */\n    destroy() {\n        this.destroyAllPlugins();\n        this.fireEvent('destroy');\n        this.cancelAjax();\n        this.clearTmpEvents();\n        this.unAll();\n        if (this.params.responsive) {\n            window.removeEventListener('resize', this._onResize, true);\n        }\n        this.backend.destroy();\n        this.drawer.destroy();\n        this.isDestroyed = true;\n        this.arraybuffer = null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/wavesurfer.js","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\n\nmodule.exports = function debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/debounce/index.js\n// module id = 14\n// module chunks = 0"],"sourceRoot":""}